{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18","program":"/home/stevenhgf/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=c4dc940e869e1b77","-C","extra-filename=-c4dc940e869e1b77","--out-dir","/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps","-L","dependency=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps","--extern","futures_core=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libfutures_core-b173df42d37db44b.rmeta","--extern","futures_io=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libfutures_io-84dbda8648f14dd3.rmeta","--extern","futures_task=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libfutures_task-42f9e7c807be718d.rmeta","--extern","memchr=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libmemchr-8653b1a6754526f5.rmeta","--extern","pin_project_lite=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libpin_project_lite-bbcf54b6e6c34e32.rmeta","--extern","pin_utils=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libpin_utils-5db7ec9164397080.rmeta","--extern","slab=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libslab-3f4e1f22747f1198.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/stevenhgf/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libfutures_util-c4dc940e869e1b77.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[5855099111893863062,0]},"crate_root":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src","external_crates":[{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[1440762160621440629,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[16901206258132548070,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","num":22,"id":{"name":"futures_task","disambiguator":[17385666558862773534,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[9610653905832003084,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","num":24,"id":{"name":"slab","disambiguator":[408079477013468680,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","num":25,"id":{"name":"futures_io","disambiguator":[3680469210483116253,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","num":26,"id":{"name":"memchr","disambiguator":[9335573667902768237,0]}}],"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":0,"byte_end":11997,"line_start":1,"line_end":346,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":1126,"byte_end":1131,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":1152,"byte_end":1159,"line_start":34,"line_end":34,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12560},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12466,"byte_end":12472,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":21},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12532,"byte_end":12541,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":24},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12543,"byte_end":12557,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":27},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12591,"byte_end":12602,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12604,"byte_end":12613,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12639,"byte_end":12648,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12650,"byte_end":12664,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12666,"byte_end":12681,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9190},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":18479,"byte_end":18490,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":8688},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12796,"byte_end":12803,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8602},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12805,"byte_end":12809,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12811,"byte_end":12820,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9031},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12822,"byte_end":12829,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8846},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12831,"byte_end":12841,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8786},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12843,"byte_end":12846,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8896},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12848,"byte_end":12855,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9091},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12857,"byte_end":12867,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8958},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12869,"byte_end":12873,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9139},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12875,"byte_end":12884,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8736},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12980,"byte_end":12993,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9190},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13042,"byte_end":13053,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13253,"byte_end":13259,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13261,"byte_end":13271,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9526},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13323,"byte_end":13330,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9673},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13332,"byte_end":13339,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9856},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13341,"byte_end":13351,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9795},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13353,"byte_end":13362,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9226},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13364,"byte_end":13374,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9978},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13376,"byte_end":13382,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9917},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13384,"byte_end":13389,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10040},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13391,"byte_end":13402,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9734},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13404,"byte_end":13410,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9600},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13416,"byte_end":13422,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9354},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13424,"byte_end":13434,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9475},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13436,"byte_end":13452,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":715},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13454,"byte_end":13466,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10113},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13468,"byte_end":13480,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13652,"byte_end":13656,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10171},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13658,"byte_end":13662,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":858},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13703,"byte_end":13710,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10177},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13712,"byte_end":13719,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":905},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13766,"byte_end":13776,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10183},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13778,"byte_end":13787,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":957},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13842,"byte_end":13856,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10196},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13858,"byte_end":13870,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10214},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13908,"byte_end":13920,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13960,"byte_end":13967,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1034},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":13969,"byte_end":13975,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1098},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14030,"byte_end":14044,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10253},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14046,"byte_end":14059,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14096,"byte_end":14099,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14101,"byte_end":14103,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1140},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14105,"byte_end":14110,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10287},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14112,"byte_end":14117,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1196},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14152,"byte_end":14156,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1199},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14158,"byte_end":14163,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14165,"byte_end":14170,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1208},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14172,"byte_end":14177,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10389},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14179,"byte_end":14183,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10434},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14185,"byte_end":14190,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10491},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14192,"byte_end":14197,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10560},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14199,"byte_end":14204,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1302},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14299,"byte_end":14307,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1289},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14309,"byte_end":14316,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1351},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14355,"byte_end":14361,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10641},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14363,"byte_end":14369,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1401},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14468,"byte_end":14478,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10649},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14480,"byte_end":14489,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1457},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14537,"byte_end":14545,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14547,"byte_end":14556,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14558,"byte_end":14567,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1469},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14569,"byte_end":14578,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10725},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14580,"byte_end":14587,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10770},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14589,"byte_end":14597,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10827},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14599,"byte_end":14607,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10896},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14609,"byte_end":14617,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1558},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14722,"byte_end":14734,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1552},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14736,"byte_end":14746,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1604},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14793,"byte_end":14803,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10977},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14805,"byte_end":14814,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1654},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14911,"byte_end":14920,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10985},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14922,"byte_end":14930,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10991},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":14968,"byte_end":14974,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15493},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":15141,"byte_end":15152,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15489},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":15154,"byte_end":15171,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15451},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":15173,"byte_end":15182,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15504},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":15184,"byte_end":15191,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15505},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":15184,"byte_end":15191,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1811},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":15274,"byte_end":15283,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":2,"index":12560},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11098,"byte_end":11104,"line_start":305,"line_end":305,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11106,"byte_end":11115,"line_start":305,"line_end":305,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11117,"byte_end":11126,"line_start":305,"line_end":305,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":715},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11128,"byte_end":11140,"line_start":305,"line_end":305,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":90},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148033,"byte_end":148042,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":20,"index":93},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148044,"byte_end":148058,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":20,"index":110},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148092,"byte_end":148103,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148105,"byte_end":148111,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148113,"byte_end":148122,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12671},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":156700,"byte_end":156706,"line_start":168,"line_end":168,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12719},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":156883,"byte_end":156894,"line_start":174,"line_end":174,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12987},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158392,"byte_end":158403,"line_start":220,"line_end":220,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11015},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148238,"byte_end":148243,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11064},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148245,"byte_end":148252,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11173},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148254,"byte_end":148260,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11213},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148262,"byte_end":148267,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11253},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148269,"byte_end":148278,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11292},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148280,"byte_end":148286,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11357},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148288,"byte_end":148297,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11946},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148299,"byte_end":148306,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11473},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148308,"byte_end":148315,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11526},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148317,"byte_end":148321,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11717},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148323,"byte_end":148330,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11779},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148336,"byte_end":148340,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11827},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148342,"byte_end":148349,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11893},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148351,"byte_end":148354,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12025},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148356,"byte_end":148360,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12167},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148362,"byte_end":148368,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12216},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148370,"byte_end":148378,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12085},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148380,"byte_end":148384,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12126},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148386,"byte_end":148393,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12046},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148395,"byte_end":148403,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12762},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148405,"byte_end":148409,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12033},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148411,"byte_end":148425,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12270},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148431,"byte_end":148435,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12309},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148437,"byte_end":148446,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":3668},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148448,"byte_end":148457,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11818},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148459,"byte_end":148471,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12383},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148473,"byte_end":148477,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12491},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148479,"byte_end":148488,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12422},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148490,"byte_end":148499,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12548},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148501,"byte_end":148505,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11115},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148507,"byte_end":148512,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12616},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148514,"byte_end":148517,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12987},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148569,"byte_end":148580,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12671},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148631,"byte_end":148637,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12719},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148688,"byte_end":148699,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12831},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148891,"byte_end":148906,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12876},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148908,"byte_end":148916,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12921},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":148918,"byte_end":148935,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14347},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":303758,"byte_end":303771,"line_start":152,"line_end":152,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":3870}},{"kind":"Use","ref_id":{"krate":0,"index":4594},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149184,"byte_end":149194,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13026},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149196,"byte_end":149203,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13090},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149205,"byte_end":149212,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13228},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149214,"byte_end":149224,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13159},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149226,"byte_end":149235,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13299},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149237,"byte_end":149247,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13406},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149249,"byte_end":149255,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13337},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149257,"byte_end":149262,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13472},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149264,"byte_end":149270,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13775},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149276,"byte_end":149286,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13822},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149288,"byte_end":149297,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13598},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149299,"byte_end":149308,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13663},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149310,"byte_end":149322,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13729},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149324,"byte_end":149334,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13926},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149336,"byte_end":149343,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13541},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149345,"byte_end":149355,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13533},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149357,"byte_end":149364,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14052},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149370,"byte_end":149382,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":4969},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149384,"byte_end":149396,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14121},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149398,"byte_end":149410,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13995},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149412,"byte_end":149421,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14347},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149546,"byte_end":149559,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14195},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149650,"byte_end":149668,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14243},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149670,"byte_end":149681,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14286},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149683,"byte_end":149703,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13862},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149760,"byte_end":149769,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13905},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149771,"byte_end":149785,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13906},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149771,"byte_end":149785,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5126},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149842,"byte_end":149846,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14366},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149848,"byte_end":149852,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5161},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149891,"byte_end":149897,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14375},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149899,"byte_end":149905,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5214},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149954,"byte_end":149965,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14384},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":149967,"byte_end":149977,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5248},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150014,"byte_end":150019,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14393},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150021,"byte_end":150026,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5300},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150061,"byte_end":150065,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14404},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150067,"byte_end":150071,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5344},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150112,"byte_end":150119,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14435},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150121,"byte_end":150128,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5394},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150169,"byte_end":150176,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5386},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150178,"byte_end":150184,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5435},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150239,"byte_end":150253,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14446},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150255,"byte_end":150268,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5478},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150307,"byte_end":150313,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14487},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150315,"byte_end":150321,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5544},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150388,"byte_end":150408,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14525},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150410,"byte_end":150418,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14544},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150420,"byte_end":150438,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5626},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150477,"byte_end":150483,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14613},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150485,"byte_end":150491,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5726},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150669,"byte_end":150683,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14745},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426323,"byte_end":426331,"line_start":25,"line_end":25,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":5766}},{"kind":"Use","ref_id":{"krate":0,"index":14736},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426333,"byte_end":426337,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5766}},{"kind":"Use","ref_id":{"krate":0,"index":14737},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426333,"byte_end":426337,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5766}},{"kind":"Use","ref_id":{"krate":0,"index":14716},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426339,"byte_end":426346,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5766}},{"kind":"Use","ref_id":{"krate":0,"index":14717},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426339,"byte_end":426346,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5766}},{"kind":"Use","ref_id":{"krate":0,"index":14706},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426348,"byte_end":426358,"line_start":25,"line_end":25,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":5766}},{"kind":"Use","ref_id":{"krate":0,"index":14725},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426360,"byte_end":426370,"line_start":25,"line_end":25,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":5766}},{"kind":"Use","ref_id":{"krate":0,"index":6077},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150883,"byte_end":150899,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":6237},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":151086,"byte_end":151096,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14752},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":151098,"byte_end":151107,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15493},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":151275,"byte_end":151286,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15489},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":151288,"byte_end":151305,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15451},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":151307,"byte_end":151316,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15504},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":151318,"byte_end":151325,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15505},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":151318,"byte_end":151325,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":6308},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":151408,"byte_end":151417,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11202,"byte_end":11208,"line_start":309,"line_end":309,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3668},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11210,"byte_end":11219,"line_start":309,"line_end":309,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11221,"byte_end":11230,"line_start":309,"line_end":309,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4969},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11232,"byte_end":11244,"line_start":309,"line_end":309,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12812},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473460,"byte_end":473467,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":2,"index":45867},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473469,"byte_end":473473,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":2,"index":45903},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473475,"byte_end":473483,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":2,"index":45912},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473485,"byte_end":473499,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":2,"index":12822},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473501,"byte_end":473506,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473533,"byte_end":473542,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473544,"byte_end":473558,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":18},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473560,"byte_end":473570,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":15},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473572,"byte_end":473577,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":21},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473579,"byte_end":473589,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473591,"byte_end":473606,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":378},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473632,"byte_end":473642,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":379},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473666,"byte_end":473680,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":94},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473766,"byte_end":473773,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":122},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473859,"byte_end":473864,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":170},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473951,"byte_end":473960,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":22,"index":407},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473962,"byte_end":473970,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":20,"index":194},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":474049,"byte_end":474060,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":0,"index":6431},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":474096,"byte_end":474109,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":0,"index":6428},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":474111,"byte_end":474119,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":6342}},{"kind":"Use","ref_id":{"krate":1,"index":3793},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482136,"byte_end":482141,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":1,"index":10553},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482143,"byte_end":482152,"line_start":33,"line_end":33,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":1,"index":10672},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482154,"byte_end":482161,"line_start":33,"line_end":33,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":1,"index":4351},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482163,"byte_end":482173,"line_start":33,"line_end":33,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":1,"index":3791},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482175,"byte_end":482181,"line_start":33,"line_end":33,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":1,"index":10686},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482183,"byte_end":482191,"line_start":33,"line_end":33,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":25,"index":49},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482216,"byte_end":482228,"line_start":35,"line_end":35,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":25,"index":39},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482230,"byte_end":482239,"line_start":35,"line_end":35,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":25,"index":47},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482241,"byte_end":482250,"line_start":35,"line_end":35,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":25,"index":42},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482252,"byte_end":482262,"line_start":35,"line_end":35,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":14810},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482860,"byte_end":482870,"line_start":56,"line_end":56,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":14843},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482916,"byte_end":482925,"line_start":59,"line_end":59,"column_start":28,"column_end":37},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":14896},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482927,"byte_end":482939,"line_start":59,"line_end":59,"column_start":39,"column_end":51},"alias_span":null,"name":"SeeKRelative","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":14906},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":482985,"byte_end":482994,"line_start":62,"line_end":62,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":14960},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483041,"byte_end":483051,"line_start":65,"line_end":65,"column_start":28,"column_end":38},"alias_span":null,"name":"LineWriter","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":14991},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483086,"byte_end":483091,"line_start":68,"line_end":68,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15040},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483126,"byte_end":483131,"line_start":71,"line_end":71,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":6944},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483165,"byte_end":483169,"line_start":74,"line_end":74,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15057},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483171,"byte_end":483175,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":6989},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483218,"byte_end":483226,"line_start":77,"line_end":77,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15111},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483228,"byte_end":483235,"line_start":77,"line_end":77,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15164},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483273,"byte_end":483279,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":7093},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483315,"byte_end":483320,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":7091},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483322,"byte_end":483327,"line_start":83,"line_end":83,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15192},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483369,"byte_end":483376,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15200},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483411,"byte_end":483416,"line_start":89,"line_end":89,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15213},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483648,"byte_end":483653,"line_start":99,"line_end":99,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15256},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483686,"byte_end":483690,"line_start":102,"line_end":102,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15265},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483741,"byte_end":483753,"line_start":105,"line_end":105,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15274},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483798,"byte_end":483807,"line_start":108,"line_end":108,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15283},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483850,"byte_end":483858,"line_start":111,"line_end":111,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15294},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483905,"byte_end":483914,"line_start":114,"line_end":114,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15304},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":483967,"byte_end":483979,"line_start":117,"line_end":117,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15315},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484024,"byte_end":484033,"line_start":120,"line_end":120,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":7543},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484071,"byte_end":484077,"line_start":123,"line_end":123,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":7541},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484079,"byte_end":484085,"line_start":123,"line_end":123,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15326},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484119,"byte_end":484123,"line_start":126,"line_end":126,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":7619},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484157,"byte_end":484161,"line_start":129,"line_end":129,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":7617},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484163,"byte_end":484167,"line_start":129,"line_end":129,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15335},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484204,"byte_end":484212,"line_start":132,"line_end":132,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":7701},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484214,"byte_end":484226,"line_start":132,"line_end":132,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":7702},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484214,"byte_end":484226,"line_start":132,"line_end":132,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15341},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484228,"byte_end":484237,"line_start":132,"line_end":132,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15352},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484271,"byte_end":484275,"line_start":135,"line_end":135,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15391},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484312,"byte_end":484318,"line_start":138,"line_end":138,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15398},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484353,"byte_end":484358,"line_start":141,"line_end":141,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15407},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484411,"byte_end":484424,"line_start":144,"line_end":144,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":0,"index":15416},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484467,"byte_end":484475,"line_start":147,"line_end":147,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":6443}},{"kind":"Use","ref_id":{"krate":25,"index":49},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11737,"byte_end":11749,"line_start":334,"line_end":334,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7942},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11751,"byte_end":11766,"line_start":334,"line_end":334,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":39},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11768,"byte_end":11777,"line_start":334,"line_end":334,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7909},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11779,"byte_end":11791,"line_start":334,"line_end":334,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":47},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11793,"byte_end":11802,"line_start":334,"line_end":334,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7937},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11804,"byte_end":11816,"line_start":334,"line_end":334,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":42},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11818,"byte_end":11828,"line_start":334,"line_end":334,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7926},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11834,"byte_end":11847,"line_start":335,"line_end":335,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8115},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mod.rs","byte_start":589227,"byte_end":589243,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":7981}},{"kind":"Use","ref_id":{"krate":0,"index":8036},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mod.rs","byte_start":589245,"byte_end":589250,"line_start":11,"line_end":11,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":7981}},{"kind":"Use","ref_id":{"krate":0,"index":8092},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mod.rs","byte_start":589252,"byte_end":589262,"line_start":11,"line_end":11,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":7981}},{"kind":"Use","ref_id":{"krate":0,"index":8073},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mod.rs","byte_start":589264,"byte_end":589279,"line_start":11,"line_end":11,"column_start":60,"column_end":75},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":7981}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":0,"byte_end":11997,"line_start":1,"line_end":346,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":6329},{"krate":0,"index":6330},{"krate":0,"index":6333},{"krate":0,"index":6336},{"krate":0,"index":6339},{"krate":0,"index":6342},{"krate":0,"index":6441},{"krate":0,"index":6443},{"krate":0,"index":7956},{"krate":0,"index":7957},{"krate":0,"index":7960},{"krate":0,"index":7963},{"krate":0,"index":7966},{"krate":0,"index":7969},{"krate":0,"index":7972},{"krate":0,"index":7975},{"krate":0,"index":7978},{"krate":0,"index":7981},{"krate":0,"index":8262},{"krate":0,"index":8324},{"krate":0,"index":8538}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       single_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":313,"byte_end":445,"line_start":7,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1500},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1829}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":11999,"byte_end":12023,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12024,"byte_end":12027,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12028,"byte_end":12053,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12054,"byte_end":12057,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12058,"byte_end":12085,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12086,"byte_end":12165,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12166,"byte_end":12203,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12204,"byte_end":12283,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12284,"byte_end":12359,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/mod.rs","byte_start":12360,"byte_end":12424,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":8557},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":35806,"byte_end":35811,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8559},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":35840,"byte_end":35846,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8561},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":35875,"byte_end":35880,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8554},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":35776,"byte_end":35783,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8557},{"krate":0,"index":8559},{"krate":0,"index":8561}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8602},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40237,"byte_end":40241,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8604}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":42060,"byte_end":42070,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40438,"byte_end":40506,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40511,"byte_end":40514,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40519,"byte_end":40587,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40592,"byte_end":40637,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40642,"byte_end":40645,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40650,"byte_end":40664,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40669,"byte_end":40672,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40677,"byte_end":40684,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40689,"byte_end":40730,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40735,"byte_end":40766,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40771,"byte_end":40827,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40832,"byte_end":40856,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40861,"byte_end":40896,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40901,"byte_end":40926,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40931,"byte_end":40934,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40939,"byte_end":40988,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40993,"byte_end":40996,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41001,"byte_end":41043,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41048,"byte_end":41087,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41092,"byte_end":41131,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41136,"byte_end":41153,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41158,"byte_end":41161,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41166,"byte_end":41236,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41241,"byte_end":41280,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41285,"byte_end":41326,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41331,"byte_end":41357,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41362,"byte_end":41365,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41370,"byte_end":41380,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41385,"byte_end":41402,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41407,"byte_end":41441,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41446,"byte_end":41493,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41498,"byte_end":41547,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41552,"byte_end":41614,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41619,"byte_end":41643,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41648,"byte_end":41691,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41696,"byte_end":41753,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41758,"byte_end":41833,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41838,"byte_end":41868,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41873,"byte_end":41890,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41895,"byte_end":41909,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":41914,"byte_end":41998,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":42003,"byte_end":42012,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":42017,"byte_end":42022,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":42027,"byte_end":42036,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":42041,"byte_end":42048,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":8640},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/map.rs","byte_start":43128,"byte_end":43138,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":8637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8643},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/map.rs","byte_start":43222,"byte_end":43230,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":8637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8637},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/map.rs","byte_start":43106,"byte_end":43109,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":8640},{"krate":0,"index":8643}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12959065,"byte_end":12959074,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8688},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":16232,"byte_end":16239,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":8690}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8736},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":16490,"byte_end":16503,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":8738}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8786},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":16843,"byte_end":16846,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8789}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8846},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":17053,"byte_end":17063,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8848}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8896},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":17269,"byte_end":17276,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":8899}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8958},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":17469,"byte_end":17473,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8962}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9031},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":17718,"byte_end":17725,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":9034}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9091},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":17966,"byte_end":17976,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":9093}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9139},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":18189,"byte_end":18198,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":9141}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9190},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/catch_unwind.rs","byte_start":44826,"byte_end":44837,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":9192}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":45840,"byte_end":45846,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":45697,"byte_end":45760,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":45761,"byte_end":45828,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46220,"byte_end":46230,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46131,"byte_end":46208,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":48332,"byte_end":48336,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":48063,"byte_end":48137,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":48142,"byte_end":48215,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":48220,"byte_end":48288,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":48293,"byte_end":48320,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":48831,"byte_end":48840,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":48688,"byte_end":48741,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":48746,"byte_end":48749,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":48754,"byte_end":48819,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49434,"byte_end":49446,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49022,"byte_end":49080,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49085,"byte_end":49088,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49093,"byte_end":49158,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49163,"byte_end":49166,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49171,"byte_end":49183,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49188,"byte_end":49191,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49196,"byte_end":49289,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49294,"byte_end":49388,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49393,"byte_end":49422,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49954,"byte_end":49964,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49546,"byte_end":49602,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49607,"byte_end":49610,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49615,"byte_end":49680,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49685,"byte_end":49688,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49693,"byte_end":49705,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49710,"byte_end":49713,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49718,"byte_end":49811,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49816,"byte_end":49908,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":49913,"byte_end":49942,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":56414,"byte_end":56421,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":56224,"byte_end":56286,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":56291,"byte_end":56294,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":56299,"byte_end":56379,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":56384,"byte_end":56402,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":436},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19180,"byte_end":19189,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19081,"byte_end":19155,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19156,"byte_end":19169,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20021,"byte_end":20024,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19204,"byte_end":19279,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19284,"byte_end":19307,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19312,"byte_end":19315,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19320,"byte_end":19394,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19399,"byte_end":19470,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19475,"byte_end":19537,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19542,"byte_end":19545,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19550,"byte_end":19621,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19626,"byte_end":19697,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19702,"byte_end":19723,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19728,"byte_end":19731,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19736,"byte_end":19750,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19755,"byte_end":19758,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19763,"byte_end":19770,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19775,"byte_end":19816,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19821,"byte_end":19856,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19861,"byte_end":19864,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19869,"byte_end":19898,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19903,"byte_end":19946,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19951,"byte_end":19987,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19992,"byte_end":20001,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20006,"byte_end":20013,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20421,"byte_end":20429,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20194,"byte_end":20269,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20274,"byte_end":20297,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20302,"byte_end":20305,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20310,"byte_end":20388,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20393,"byte_end":20413,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21441,"byte_end":21445,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20588,"byte_end":20664,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20669,"byte_end":20712,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20717,"byte_end":20720,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20725,"byte_end":20796,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20801,"byte_end":20875,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20880,"byte_end":20896,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20901,"byte_end":20904,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20909,"byte_end":20984,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":20989,"byte_end":21000,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21005,"byte_end":21008,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21013,"byte_end":21084,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21089,"byte_end":21115,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21120,"byte_end":21123,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21128,"byte_end":21142,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21147,"byte_end":21150,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21155,"byte_end":21162,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21167,"byte_end":21208,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21213,"byte_end":21248,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21253,"byte_end":21256,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21261,"byte_end":21295,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21300,"byte_end":21365,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21370,"byte_end":21407,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21412,"byte_end":21421,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21426,"byte_end":21433,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22315,"byte_end":22326,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21657,"byte_end":21732,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21737,"byte_end":21758,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21763,"byte_end":21766,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21771,"byte_end":21851,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21856,"byte_end":21928,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21933,"byte_end":21936,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21941,"byte_end":21955,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21960,"byte_end":21963,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21968,"byte_end":21975,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":21980,"byte_end":22021,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22026,"byte_end":22061,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22066,"byte_end":22069,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22074,"byte_end":22088,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22093,"byte_end":22121,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22126,"byte_end":22162,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22167,"byte_end":22179,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22184,"byte_end":22222,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22227,"byte_end":22233,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22238,"byte_end":22241,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22246,"byte_end":22281,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22286,"byte_end":22295,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22300,"byte_end":22307,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23165,"byte_end":23177,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22506,"byte_end":22582,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22587,"byte_end":22608,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22613,"byte_end":22616,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22621,"byte_end":22700,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22705,"byte_end":22777,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22782,"byte_end":22785,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22790,"byte_end":22804,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22809,"byte_end":22812,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22817,"byte_end":22824,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22829,"byte_end":22870,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22875,"byte_end":22910,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22915,"byte_end":22918,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22923,"byte_end":22937,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22942,"byte_end":22970,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":22975,"byte_end":23011,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23016,"byte_end":23028,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23033,"byte_end":23071,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23076,"byte_end":23082,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23087,"byte_end":23090,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23095,"byte_end":23131,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23136,"byte_end":23145,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23150,"byte_end":23157,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23956,"byte_end":23967,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23358,"byte_end":23411,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23416,"byte_end":23419,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23424,"byte_end":23498,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23503,"byte_end":23566,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23571,"byte_end":23574,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23579,"byte_end":23593,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23598,"byte_end":23601,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23606,"byte_end":23613,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23618,"byte_end":23659,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23664,"byte_end":23699,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23704,"byte_end":23739,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23744,"byte_end":23747,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23752,"byte_end":23782,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23787,"byte_end":23825,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23830,"byte_end":23881,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23886,"byte_end":23922,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23927,"byte_end":23936,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":23941,"byte_end":23948,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24832,"byte_end":24839,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24106,"byte_end":24170,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24175,"byte_end":24211,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24216,"byte_end":24219,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24224,"byte_end":24293,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24298,"byte_end":24335,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24340,"byte_end":24343,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24348,"byte_end":24408,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24413,"byte_end":24416,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24421,"byte_end":24492,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24497,"byte_end":24523,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24528,"byte_end":24531,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24536,"byte_end":24550,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24555,"byte_end":24558,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24563,"byte_end":24570,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24575,"byte_end":24616,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24621,"byte_end":24656,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24661,"byte_end":24664,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24669,"byte_end":24715,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24720,"byte_end":24761,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24766,"byte_end":24798,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24803,"byte_end":24812,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":24817,"byte_end":24824,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25944,"byte_end":25958,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25053,"byte_end":25128,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25133,"byte_end":25156,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25161,"byte_end":25164,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25169,"byte_end":25241,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25246,"byte_end":25319,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25324,"byte_end":25338,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25343,"byte_end":25346,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25351,"byte_end":25421,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25426,"byte_end":25444,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25449,"byte_end":25452,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25457,"byte_end":25471,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25476,"byte_end":25479,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25484,"byte_end":25491,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25496,"byte_end":25537,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25542,"byte_end":25577,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25582,"byte_end":25625,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25630,"byte_end":25633,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25638,"byte_end":25678,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25683,"byte_end":25749,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25754,"byte_end":25757,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25762,"byte_end":25815,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25820,"byte_end":25866,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25871,"byte_end":25910,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25915,"byte_end":25924,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":25929,"byte_end":25936,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27046,"byte_end":27050,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26151,"byte_end":26224,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26229,"byte_end":26295,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26300,"byte_end":26318,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26323,"byte_end":26326,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26331,"byte_end":26398,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26403,"byte_end":26468,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26473,"byte_end":26545,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26550,"byte_end":26624,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26629,"byte_end":26655,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26660,"byte_end":26663,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26668,"byte_end":26739,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26744,"byte_end":26819,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26824,"byte_end":26878,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26883,"byte_end":26886,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26891,"byte_end":26965,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":26970,"byte_end":27038,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27890,"byte_end":27897,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27196,"byte_end":27262,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27267,"byte_end":27270,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27275,"byte_end":27350,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27355,"byte_end":27428,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27433,"byte_end":27502,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27507,"byte_end":27557,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27562,"byte_end":27565,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27570,"byte_end":27584,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27589,"byte_end":27592,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27597,"byte_end":27604,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27609,"byte_end":27650,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27655,"byte_end":27690,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27695,"byte_end":27698,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27703,"byte_end":27732,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27737,"byte_end":27815,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27820,"byte_end":27856,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27861,"byte_end":27870,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":27875,"byte_end":27882,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29435,"byte_end":29447,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28079,"byte_end":28133,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28138,"byte_end":28141,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28146,"byte_end":28221,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28226,"byte_end":28300,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28305,"byte_end":28379,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28384,"byte_end":28435,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28440,"byte_end":28443,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28448,"byte_end":28523,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28528,"byte_end":28598,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28603,"byte_end":28670,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28675,"byte_end":28750,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28755,"byte_end":28827,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28832,"byte_end":28835,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28840,"byte_end":28904,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28909,"byte_end":28966,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28971,"byte_end":28974,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28979,"byte_end":28993,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":28998,"byte_end":29001,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29006,"byte_end":29013,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29018,"byte_end":29059,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29064,"byte_end":29114,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29119,"byte_end":29122,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29127,"byte_end":29161,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29166,"byte_end":29215,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29220,"byte_end":29223,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29228,"byte_end":29277,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29282,"byte_end":29306,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29311,"byte_end":29318,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29323,"byte_end":29373,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29378,"byte_end":29387,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29392,"byte_end":29399,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29404,"byte_end":29427,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":31199,"byte_end":31205,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29677,"byte_end":29752,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29757,"byte_end":29780,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29785,"byte_end":29788,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29793,"byte_end":29867,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29872,"byte_end":29945,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29950,"byte_end":29962,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29967,"byte_end":29970,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":29975,"byte_end":30039,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30044,"byte_end":30101,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30106,"byte_end":30109,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30114,"byte_end":30128,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30133,"byte_end":30136,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30141,"byte_end":30148,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30153,"byte_end":30194,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30199,"byte_end":30234,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30239,"byte_end":30242,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30247,"byte_end":30276,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30281,"byte_end":30315,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30320,"byte_end":30354,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30359,"byte_end":30362,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30367,"byte_end":30400,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30405,"byte_end":30438,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30443,"byte_end":30452,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30457,"byte_end":30464,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30469,"byte_end":30472,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30477,"byte_end":30484,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30489,"byte_end":30558,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30563,"byte_end":30638,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30643,"byte_end":30674,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30679,"byte_end":30682,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30687,"byte_end":30728,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30733,"byte_end":30768,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30773,"byte_end":30809,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30814,"byte_end":30834,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30839,"byte_end":30842,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30847,"byte_end":30876,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30881,"byte_end":30915,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30920,"byte_end":30954,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":30959,"byte_end":31004,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":31009,"byte_end":31050,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":31055,"byte_end":31062,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":31067,"byte_end":31100,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":31105,"byte_end":31137,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":31142,"byte_end":31151,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":31156,"byte_end":31163,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":31168,"byte_end":31191,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32367,"byte_end":32372,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32138,"byte_end":32179,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32184,"byte_end":32187,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32192,"byte_end":32267,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32272,"byte_end":32329,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32334,"byte_end":32359,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32832,"byte_end":32843,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32531,"byte_end":32572,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32577,"byte_end":32580,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32585,"byte_end":32644,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32649,"byte_end":32652,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32657,"byte_end":32732,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32737,"byte_end":32794,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":32799,"byte_end":32824,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33133,"byte_end":33143,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33000,"byte_end":33049,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33054,"byte_end":33125,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33428,"byte_end":33439,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33292,"byte_end":33341,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33346,"byte_end":33420,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33670,"byte_end":33680,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33593,"byte_end":33662,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":35076,"byte_end":35088,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33816,"byte_end":33888,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33893,"byte_end":33956,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33961,"byte_end":33964,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":33969,"byte_end":34035,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34040,"byte_end":34043,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34048,"byte_end":34121,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34126,"byte_end":34195,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34200,"byte_end":34270,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34275,"byte_end":34278,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34283,"byte_end":34297,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34302,"byte_end":34305,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34310,"byte_end":34317,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34322,"byte_end":34352,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34357,"byte_end":34407,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34412,"byte_end":34451,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34456,"byte_end":34507,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34512,"byte_end":34515,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34520,"byte_end":34580,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34585,"byte_end":34637,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34642,"byte_end":34649,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34654,"byte_end":34657,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34662,"byte_end":34731,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34736,"byte_end":34809,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34814,"byte_end":34846,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34851,"byte_end":34854,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34859,"byte_end":34866,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34871,"byte_end":34918,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34923,"byte_end":34962,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34967,"byte_end":34970,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":34975,"byte_end":35056,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":35061,"byte_end":35068,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9226},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/into_future.rs","byte_start":78565,"byte_end":78575,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":9228}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":9264},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":79549,"byte_end":79554,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":9261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9266},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":79583,"byte_end":79589,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":9261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9268},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":79618,"byte_end":79623,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":9261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9261},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":79516,"byte_end":79526,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9264},{"krate":0,"index":9266},{"krate":0,"index":9268}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9311},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten_err.rs","byte_start":84492,"byte_end":84497,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9313},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten_err.rs","byte_start":84526,"byte_end":84532,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9315},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten_err.rs","byte_start":84561,"byte_end":84566,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9308},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten_err.rs","byte_start":84456,"byte_end":84469,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9311},{"krate":0,"index":9313},{"krate":0,"index":9315}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9354},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":57400,"byte_end":57410,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9357}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9415},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":57658,"byte_end":57671,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":9418}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9475},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":57939,"byte_end":57955,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":9477}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9526},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":58543,"byte_end":58550,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":9530}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9600},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":58790,"byte_end":58796,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9604}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9673},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":59046,"byte_end":59053,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":9676}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9734},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":59261,"byte_end":59267,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":9737}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9795},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":59486,"byte_end":59495,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9798}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9856},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":59767,"byte_end":59777,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9859}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9917},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":60150,"byte_end":60155,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9920}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9978},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":60396,"byte_end":60402,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9981}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10040},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":60659,"byte_end":60670,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":10044}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10113},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":60954,"byte_end":60966,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":10116}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":715},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":61256,"byte_end":61268,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":745}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":61192,"byte_end":61245,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64028,"byte_end":64034,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":62656,"byte_end":62714,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":62719,"byte_end":62722,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":62727,"byte_end":62802,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":62807,"byte_end":62877,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":62882,"byte_end":62955,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":62960,"byte_end":62989,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":62994,"byte_end":62997,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63002,"byte_end":63077,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63082,"byte_end":63157,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63162,"byte_end":63209,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63214,"byte_end":63217,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63222,"byte_end":63297,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63302,"byte_end":63328,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63333,"byte_end":63336,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63341,"byte_end":63355,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63360,"byte_end":63363,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63368,"byte_end":63375,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63380,"byte_end":63418,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63423,"byte_end":63426,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63431,"byte_end":63472,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63477,"byte_end":63522,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63527,"byte_end":63569,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63574,"byte_end":63610,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63615,"byte_end":63624,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63629,"byte_end":63636,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63641,"byte_end":63644,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63649,"byte_end":63721,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63726,"byte_end":63737,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63742,"byte_end":63745,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63750,"byte_end":63757,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63762,"byte_end":63800,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63805,"byte_end":63808,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63813,"byte_end":63854,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63859,"byte_end":63905,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63910,"byte_end":63952,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63957,"byte_end":63994,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":63999,"byte_end":64008,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64013,"byte_end":64020,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65593,"byte_end":65607,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64225,"byte_end":64342,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64347,"byte_end":64350,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64355,"byte_end":64477,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64482,"byte_end":64532,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64537,"byte_end":64540,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64545,"byte_end":64620,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64625,"byte_end":64700,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64705,"byte_end":64752,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64757,"byte_end":64760,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64765,"byte_end":64840,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64845,"byte_end":64920,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64925,"byte_end":64972,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64977,"byte_end":64980,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":64985,"byte_end":65060,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65065,"byte_end":65091,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65096,"byte_end":65099,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65104,"byte_end":65118,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65123,"byte_end":65126,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65131,"byte_end":65138,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65143,"byte_end":65181,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65186,"byte_end":65189,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65194,"byte_end":65235,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65240,"byte_end":65285,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65290,"byte_end":65351,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65356,"byte_end":65388,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65393,"byte_end":65396,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65401,"byte_end":65447,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65452,"byte_end":65513,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65518,"byte_end":65551,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65556,"byte_end":65565,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65570,"byte_end":65577,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65582,"byte_end":65585,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67290,"byte_end":67297,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65841,"byte_end":65897,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65902,"byte_end":65905,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65910,"byte_end":65984,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":65989,"byte_end":66050,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66055,"byte_end":66125,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66130,"byte_end":66205,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66210,"byte_end":66245,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66250,"byte_end":66253,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66258,"byte_end":66333,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66338,"byte_end":66413,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66418,"byte_end":66465,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66470,"byte_end":66473,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66478,"byte_end":66553,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66558,"byte_end":66584,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66589,"byte_end":66592,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66597,"byte_end":66611,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66616,"byte_end":66619,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66624,"byte_end":66631,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66636,"byte_end":66674,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66679,"byte_end":66682,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66687,"byte_end":66728,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66733,"byte_end":66779,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66784,"byte_end":66827,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66832,"byte_end":66869,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66874,"byte_end":66883,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66888,"byte_end":66895,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66900,"byte_end":66903,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66908,"byte_end":66981,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":66986,"byte_end":67000,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67005,"byte_end":67008,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67013,"byte_end":67020,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67025,"byte_end":67063,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67068,"byte_end":67071,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67076,"byte_end":67117,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67122,"byte_end":67167,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67172,"byte_end":67215,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67220,"byte_end":67256,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67261,"byte_end":67270,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67275,"byte_end":67282,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68387,"byte_end":68395,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67490,"byte_end":67560,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67565,"byte_end":67614,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67619,"byte_end":67622,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67627,"byte_end":67690,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67695,"byte_end":67763,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67768,"byte_end":67841,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67846,"byte_end":67922,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67927,"byte_end":67972,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67977,"byte_end":67980,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":67985,"byte_end":68060,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68065,"byte_end":68091,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68096,"byte_end":68099,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68104,"byte_end":68118,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68123,"byte_end":68126,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68131,"byte_end":68138,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68143,"byte_end":68181,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68186,"byte_end":68189,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68194,"byte_end":68235,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68240,"byte_end":68291,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68296,"byte_end":68353,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68358,"byte_end":68367,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68372,"byte_end":68379,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68691,"byte_end":68698,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68571,"byte_end":68629,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68634,"byte_end":68683,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70253,"byte_end":70261,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68872,"byte_end":68941,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":68946,"byte_end":69020,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69025,"byte_end":69028,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69033,"byte_end":69108,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69113,"byte_end":69183,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69188,"byte_end":69253,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69258,"byte_end":69324,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69329,"byte_end":69363,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69368,"byte_end":69371,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69376,"byte_end":69451,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69456,"byte_end":69482,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69487,"byte_end":69490,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69495,"byte_end":69509,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69514,"byte_end":69517,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69522,"byte_end":69529,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69534,"byte_end":69572,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69577,"byte_end":69580,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69585,"byte_end":69626,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69631,"byte_end":69676,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69681,"byte_end":69756,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69761,"byte_end":69797,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69802,"byte_end":69811,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69816,"byte_end":69823,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69828,"byte_end":69831,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69836,"byte_end":69912,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69917,"byte_end":69928,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69933,"byte_end":69936,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69941,"byte_end":69948,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69953,"byte_end":69991,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":69996,"byte_end":69999,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70004,"byte_end":70045,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70050,"byte_end":70096,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70101,"byte_end":70177,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70182,"byte_end":70219,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70224,"byte_end":70233,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70238,"byte_end":70245,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71882,"byte_end":71889,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70515,"byte_end":70580,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70585,"byte_end":70657,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70662,"byte_end":70665,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70670,"byte_end":70745,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70750,"byte_end":70820,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70825,"byte_end":70890,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70895,"byte_end":70971,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70976,"byte_end":70994,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":70999,"byte_end":71002,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71007,"byte_end":71082,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71087,"byte_end":71113,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71118,"byte_end":71121,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71126,"byte_end":71140,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71145,"byte_end":71148,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71153,"byte_end":71160,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71165,"byte_end":71203,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71208,"byte_end":71211,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71216,"byte_end":71257,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71262,"byte_end":71308,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71313,"byte_end":71388,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71393,"byte_end":71430,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71435,"byte_end":71444,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71449,"byte_end":71456,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71461,"byte_end":71464,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71469,"byte_end":71542,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71547,"byte_end":71561,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71566,"byte_end":71569,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71574,"byte_end":71581,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71586,"byte_end":71624,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71629,"byte_end":71632,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71637,"byte_end":71678,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71683,"byte_end":71728,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71733,"byte_end":71807,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71812,"byte_end":71848,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71853,"byte_end":71862,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":71867,"byte_end":71874,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72865,"byte_end":72875,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72138,"byte_end":72211,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72216,"byte_end":72219,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72224,"byte_end":72299,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72304,"byte_end":72377,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72382,"byte_end":72451,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72456,"byte_end":72509,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72514,"byte_end":72517,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72522,"byte_end":72536,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72541,"byte_end":72544,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72549,"byte_end":72556,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72561,"byte_end":72602,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72607,"byte_end":72645,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72650,"byte_end":72653,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72658,"byte_end":72700,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72705,"byte_end":72786,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72791,"byte_end":72831,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72836,"byte_end":72845,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":72850,"byte_end":72857,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73801,"byte_end":73812,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73074,"byte_end":73145,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73150,"byte_end":73153,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73158,"byte_end":73233,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73238,"byte_end":73311,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73316,"byte_end":73385,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73390,"byte_end":73444,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73449,"byte_end":73452,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73457,"byte_end":73471,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73476,"byte_end":73479,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73484,"byte_end":73491,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73496,"byte_end":73537,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73542,"byte_end":73580,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73585,"byte_end":73588,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73593,"byte_end":73636,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73641,"byte_end":73721,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73726,"byte_end":73767,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73772,"byte_end":73781,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":73786,"byte_end":73793,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74197,"byte_end":74208,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74016,"byte_end":74091,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74096,"byte_end":74125,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74130,"byte_end":74133,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74138,"byte_end":74189,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75387,"byte_end":75405,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74443,"byte_end":74518,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74523,"byte_end":74546,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74551,"byte_end":74554,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74559,"byte_end":74631,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74636,"byte_end":74709,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74714,"byte_end":74728,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74733,"byte_end":74736,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74741,"byte_end":74811,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74816,"byte_end":74834,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74839,"byte_end":74842,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74847,"byte_end":74861,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74866,"byte_end":74869,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74874,"byte_end":74881,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74886,"byte_end":74927,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74932,"byte_end":74970,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":74975,"byte_end":75021,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75026,"byte_end":75029,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75034,"byte_end":75094,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75099,"byte_end":75178,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75183,"byte_end":75186,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75191,"byte_end":75248,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75253,"byte_end":75305,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75310,"byte_end":75353,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75358,"byte_end":75367,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75372,"byte_end":75379,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76496,"byte_end":76510,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75665,"byte_end":75736,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75741,"byte_end":75778,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75783,"byte_end":75832,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75837,"byte_end":75840,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75845,"byte_end":75914,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75919,"byte_end":75992,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":75997,"byte_end":76067,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76072,"byte_end":76090,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76095,"byte_end":76098,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76103,"byte_end":76171,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76176,"byte_end":76179,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76184,"byte_end":76198,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76203,"byte_end":76206,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76211,"byte_end":76218,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76223,"byte_end":76261,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76266,"byte_end":76269,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76274,"byte_end":76315,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76320,"byte_end":76372,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76377,"byte_end":76424,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76429,"byte_end":76462,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76467,"byte_end":76476,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":76481,"byte_end":76488,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77765,"byte_end":77776,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77064,"byte_end":77117,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77122,"byte_end":77158,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77163,"byte_end":77166,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77171,"byte_end":77220,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77225,"byte_end":77292,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77297,"byte_end":77310,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77315,"byte_end":77318,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77323,"byte_end":77337,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77342,"byte_end":77345,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77350,"byte_end":77357,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77362,"byte_end":77421,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77426,"byte_end":77429,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77434,"byte_end":77453,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77458,"byte_end":77476,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77481,"byte_end":77553,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77558,"byte_end":77590,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77595,"byte_end":77602,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77607,"byte_end":77683,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77688,"byte_end":77691,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77696,"byte_end":77745,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77750,"byte_end":77757,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":78035,"byte_end":78049,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":77932,"byte_end":78005,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":78010,"byte_end":78027,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10171},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86218,"byte_end":86222,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":10173}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86084,"byte_end":86121,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86139,"byte_end":86206,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":812},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86764,"byte_end":86768,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86327,"byte_end":86395,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86396,"byte_end":86399,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86400,"byte_end":86463,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86464,"byte_end":86467,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86468,"byte_end":86482,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86483,"byte_end":86486,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86487,"byte_end":86494,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86495,"byte_end":86536,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86537,"byte_end":86561,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86562,"byte_end":86565,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86566,"byte_end":86598,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86599,"byte_end":86626,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86627,"byte_end":86630,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86631,"byte_end":86668,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86669,"byte_end":86693,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86694,"byte_end":86701,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86702,"byte_end":86738,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86739,"byte_end":86748,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86749,"byte_end":86756,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10177},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87595,"byte_end":87602,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10179}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87456,"byte_end":87498,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87516,"byte_end":87583,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":858},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88121,"byte_end":88128,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87743,"byte_end":87823,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87824,"byte_end":87837,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87838,"byte_end":87841,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87842,"byte_end":87904,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87905,"byte_end":87908,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87909,"byte_end":87923,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87924,"byte_end":87927,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87928,"byte_end":87941,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87942,"byte_end":87983,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87984,"byte_end":88008,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88009,"byte_end":88012,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88013,"byte_end":88048,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88049,"byte_end":88075,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88076,"byte_end":88095,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88096,"byte_end":88105,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88106,"byte_end":88113,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10185},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":88900,"byte_end":88906,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":10183},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":88865,"byte_end":88895,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10188},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":88973,"byte_end":88977,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":10183},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":88930,"byte_end":88968,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10191},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89139,"byte_end":89143,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":10183},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":88996,"byte_end":89062,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89067,"byte_end":89134,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":10183},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":88836,"byte_end":88845,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":10185},{"krate":0,"index":10188},{"krate":0,"index":10191}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":88714,"byte_end":88751,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":88752,"byte_end":88755,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":88756,"byte_end":88809,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":905},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89664,"byte_end":89674,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89203,"byte_end":89240,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89241,"byte_end":89244,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89245,"byte_end":89259,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89260,"byte_end":89263,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89264,"byte_end":89271,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89272,"byte_end":89313,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89314,"byte_end":89338,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89339,"byte_end":89364,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89365,"byte_end":89368,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89369,"byte_end":89418,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89419,"byte_end":89440,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89441,"byte_end":89493,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89494,"byte_end":89529,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89530,"byte_end":89585,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89586,"byte_end":89638,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89639,"byte_end":89648,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89649,"byte_end":89656,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":90115,"byte_end":90125,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89817,"byte_end":89902,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89907,"byte_end":89978,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89983,"byte_end":90056,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":90061,"byte_end":90089,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":90094,"byte_end":90103,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":90473,"byte_end":90484,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":90353,"byte_end":90419,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":90424,"byte_end":90447,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":90452,"byte_end":90461,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10198},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92109,"byte_end":92115,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":10196},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92074,"byte_end":92104,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10201},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92182,"byte_end":92186,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":10196},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92139,"byte_end":92177,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10204},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92394,"byte_end":92398,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":10196},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92201,"byte_end":92270,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92275,"byte_end":92345,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92350,"byte_end":92389,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":10196},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92039,"byte_end":92051,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":10198},{"krate":0,"index":10201},{"krate":0,"index":10204}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":91899,"byte_end":91950,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":91951,"byte_end":91954,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":91955,"byte_end":92012,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":957},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92512,"byte_end":92526,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92464,"byte_end":92504,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":93013,"byte_end":93023,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92704,"byte_end":92789,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92794,"byte_end":92865,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92870,"byte_end":92954,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92959,"byte_end":92987,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92992,"byte_end":93001,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":93373,"byte_end":93384,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":93250,"byte_end":93319,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":93324,"byte_end":93347,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":93352,"byte_end":93361,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10214},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/option.rs","byte_start":95595,"byte_end":95607,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":10216}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96725,"byte_end":96731,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1036}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96605,"byte_end":96645,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96646,"byte_end":96713,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1039},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97318,"byte_end":97325,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96782,"byte_end":96853,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96854,"byte_end":96857,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96858,"byte_end":96924,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96925,"byte_end":96928,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96929,"byte_end":96943,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96944,"byte_end":96947,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96948,"byte_end":96955,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96956,"byte_end":96997,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96998,"byte_end":97031,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97032,"byte_end":97071,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97072,"byte_end":97075,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97076,"byte_end":97133,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97134,"byte_end":97177,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97178,"byte_end":97183,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97184,"byte_end":97187,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97188,"byte_end":97229,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97230,"byte_end":97292,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97293,"byte_end":97302,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97303,"byte_end":97310,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10253},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":98259,"byte_end":98272,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":10255}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1098},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101680,"byte_end":101694,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"pub fn poll_immediate<F: Future>(F) -> PollImmediate<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":100492,"byte_end":100565,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":100566,"byte_end":100690,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":100691,"byte_end":100694,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":100695,"byte_end":100708,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":100709,"byte_end":100712,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":100713,"byte_end":100780,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":100781,"byte_end":100784,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":100785,"byte_end":100951,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":100952,"byte_end":101077,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101078,"byte_end":101081,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101082,"byte_end":101096,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101097,"byte_end":101100,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101101,"byte_end":101108,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101109,"byte_end":101150,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101151,"byte_end":101175,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101176,"byte_end":101179,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101180,"byte_end":101232,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101233,"byte_end":101266,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101267,"byte_end":101270,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101271,"byte_end":101332,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101333,"byte_end":101363,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101364,"byte_end":101373,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101374,"byte_end":101381,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101382,"byte_end":101385,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101386,"byte_end":101410,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101411,"byte_end":101414,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101415,"byte_end":101422,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101423,"byte_end":101464,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101465,"byte_end":101500,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101501,"byte_end":101548,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101549,"byte_end":101565,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101566,"byte_end":101625,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101626,"byte_end":101654,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101655,"byte_end":101664,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":101665,"byte_end":101672,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10287},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102117,"byte_end":102122,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":101966,"byte_end":102013,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102038,"byte_end":102105,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102245,"byte_end":102255,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102162,"byte_end":102219,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102224,"byte_end":102233,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1140},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102921,"byte_end":102926,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102675,"byte_end":102735,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102736,"byte_end":102739,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102740,"byte_end":102754,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102755,"byte_end":102758,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102759,"byte_end":102766,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102767,"byte_end":102808,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102809,"byte_end":102833,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102834,"byte_end":102837,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102838,"byte_end":102867,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102868,"byte_end":102895,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102896,"byte_end":102905,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102906,"byte_end":102913,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103261,"byte_end":103263,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102995,"byte_end":103062,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103063,"byte_end":103066,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103067,"byte_end":103081,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103082,"byte_end":103085,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103086,"byte_end":103093,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103094,"byte_end":103135,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103136,"byte_end":103160,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103161,"byte_end":103164,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103165,"byte_end":103203,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103204,"byte_end":103235,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103236,"byte_end":103245,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103246,"byte_end":103253,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1145},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103594,"byte_end":103597,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103327,"byte_end":103393,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103394,"byte_end":103397,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103398,"byte_end":103412,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103413,"byte_end":103416,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103417,"byte_end":103424,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103425,"byte_end":103466,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103467,"byte_end":103491,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103492,"byte_end":103495,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103496,"byte_end":103535,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103536,"byte_end":103568,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103569,"byte_end":103578,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":103579,"byte_end":103586,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10389},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":105883,"byte_end":105887,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":10392},{"krate":0,"index":10393}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10434},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":105953,"byte_end":105958,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":10438},{"krate":0,"index":10439},{"krate":0,"index":10440}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10491},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106030,"byte_end":106035,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":10496},{"krate":0,"index":10497},{"krate":0,"index":10498},{"krate":0,"index":10499}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10560},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106113,"byte_end":106118,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":10566},{"krate":0,"index":10567},{"krate":0,"index":10568},{"krate":0,"index":10569},{"krate":0,"index":10570}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1196},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106733,"byte_end":106737,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106156,"byte_end":106227,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106228,"byte_end":106231,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106232,"byte_end":106303,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106304,"byte_end":106379,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106380,"byte_end":106383,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106384,"byte_end":106453,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106454,"byte_end":106480,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106481,"byte_end":106484,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106485,"byte_end":106499,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106500,"byte_end":106503,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106504,"byte_end":106511,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106512,"byte_end":106553,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106554,"byte_end":106578,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106579,"byte_end":106582,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106583,"byte_end":106607,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106608,"byte_end":106632,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106633,"byte_end":106667,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106668,"byte_end":106671,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106672,"byte_end":106707,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106708,"byte_end":106717,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106718,"byte_end":106725,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1199},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107283,"byte_end":107288,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106944,"byte_end":106996,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":106997,"byte_end":107000,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107001,"byte_end":107015,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107016,"byte_end":107019,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107020,"byte_end":107027,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107028,"byte_end":107069,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107070,"byte_end":107094,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107095,"byte_end":107098,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107099,"byte_end":107123,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107124,"byte_end":107148,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107149,"byte_end":107173,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107174,"byte_end":107213,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107214,"byte_end":107217,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107218,"byte_end":107257,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107258,"byte_end":107267,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107268,"byte_end":107275,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1203},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107950,"byte_end":107955,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107580,"byte_end":107632,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107633,"byte_end":107636,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107637,"byte_end":107651,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107652,"byte_end":107655,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107656,"byte_end":107663,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107664,"byte_end":107705,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107706,"byte_end":107730,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107731,"byte_end":107734,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107735,"byte_end":107759,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107760,"byte_end":107784,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107785,"byte_end":107809,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107810,"byte_end":107834,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107835,"byte_end":107877,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107878,"byte_end":107881,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107882,"byte_end":107924,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107925,"byte_end":107934,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":107935,"byte_end":107942,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1208},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108720,"byte_end":108725,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108319,"byte_end":108371,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108372,"byte_end":108375,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108376,"byte_end":108390,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108391,"byte_end":108394,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108395,"byte_end":108402,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108403,"byte_end":108444,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108445,"byte_end":108469,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108470,"byte_end":108473,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108474,"byte_end":108498,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108499,"byte_end":108523,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108524,"byte_end":108548,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108549,"byte_end":108573,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108574,"byte_end":108598,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108599,"byte_end":108644,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108645,"byte_end":108648,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108649,"byte_end":108694,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108695,"byte_end":108704,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join.rs","byte_start":108705,"byte_end":108712,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1289},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":110085,"byte_end":110092,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1291}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":109964,"byte_end":110031,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":110032,"byte_end":110073,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1302},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":112187,"byte_end":112195,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":110901,"byte_end":110981,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":110982,"byte_end":110992,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":110993,"byte_end":110996,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":110997,"byte_end":111076,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111077,"byte_end":111157,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111158,"byte_end":111176,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111177,"byte_end":111180,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111181,"byte_end":111258,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111259,"byte_end":111316,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111317,"byte_end":111320,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111321,"byte_end":111335,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111336,"byte_end":111339,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111340,"byte_end":111422,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111423,"byte_end":111507,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111508,"byte_end":111592,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111593,"byte_end":111596,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111597,"byte_end":111666,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111667,"byte_end":111670,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111671,"byte_end":111739,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111740,"byte_end":111743,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111744,"byte_end":111821,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111822,"byte_end":111903,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111904,"byte_end":111907,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111908,"byte_end":111922,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111923,"byte_end":111926,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111927,"byte_end":111934,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111935,"byte_end":111976,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":111977,"byte_end":112011,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":112012,"byte_end":112015,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":112016,"byte_end":112053,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":112054,"byte_end":112057,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":112058,"byte_end":112105,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":112106,"byte_end":112109,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":112110,"byte_end":112161,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":112162,"byte_end":112171,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":112172,"byte_end":112179,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10641},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":114648,"byte_end":114654,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10644}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":114510,"byte_end":114551,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":114552,"byte_end":114619,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1351},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116918,"byte_end":116924,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":114745,"byte_end":114815,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":114816,"byte_end":114819,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":114820,"byte_end":114898,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":114899,"byte_end":114975,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":114976,"byte_end":115048,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115049,"byte_end":115052,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115053,"byte_end":115125,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115126,"byte_end":115154,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115155,"byte_end":115158,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115159,"byte_end":115226,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115227,"byte_end":115291,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115292,"byte_end":115342,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115343,"byte_end":115346,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115347,"byte_end":115361,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115362,"byte_end":115365,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115366,"byte_end":115386,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115387,"byte_end":115390,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115391,"byte_end":115398,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115399,"byte_end":115440,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115441,"byte_end":115459,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115460,"byte_end":115476,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115477,"byte_end":115500,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115501,"byte_end":115522,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115523,"byte_end":115529,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115530,"byte_end":115533,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115534,"byte_end":115625,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115626,"byte_end":115651,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115652,"byte_end":115711,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115712,"byte_end":115721,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115722,"byte_end":115728,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115729,"byte_end":115754,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115755,"byte_end":115785,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115786,"byte_end":115792,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115793,"byte_end":115796,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115797,"byte_end":115843,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115844,"byte_end":115866,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115867,"byte_end":115889,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115890,"byte_end":115893,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115894,"byte_end":115956,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":115957,"byte_end":116041,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116042,"byte_end":116115,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116116,"byte_end":116200,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116201,"byte_end":116274,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116275,"byte_end":116281,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116282,"byte_end":116285,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116286,"byte_end":116310,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116311,"byte_end":116320,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116321,"byte_end":116328,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116329,"byte_end":116332,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116333,"byte_end":116359,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116360,"byte_end":116363,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116364,"byte_end":116371,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116372,"byte_end":116431,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116432,"byte_end":116435,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116436,"byte_end":116489,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116490,"byte_end":116493,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116494,"byte_end":116569,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116570,"byte_end":116602,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116603,"byte_end":116635,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116636,"byte_end":116641,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116642,"byte_end":116686,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116687,"byte_end":116713,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116714,"byte_end":116791,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116792,"byte_end":116871,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116872,"byte_end":116885,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116886,"byte_end":116896,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116897,"byte_end":116902,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":116903,"byte_end":116910,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10649},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118381,"byte_end":118390,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10651}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118241,"byte_end":118284,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118302,"byte_end":118369,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1401},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119170,"byte_end":119180,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118468,"byte_end":118534,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118535,"byte_end":118538,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118539,"byte_end":118619,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118620,"byte_end":118698,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118699,"byte_end":118767,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118768,"byte_end":118771,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118772,"byte_end":118852,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118853,"byte_end":118927,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118928,"byte_end":118931,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118932,"byte_end":119009,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119010,"byte_end":119067,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119068,"byte_end":119071,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119072,"byte_end":119084,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119085,"byte_end":119088,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119089,"byte_end":119162,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119561,"byte_end":119571,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119486,"byte_end":119549,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10725},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123332,"byte_end":123339,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":10728},{"krate":0,"index":10729}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10770},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123409,"byte_end":123417,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":10774},{"krate":0,"index":10775},{"krate":0,"index":10776}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10827},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123493,"byte_end":123501,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":10832},{"krate":0,"index":10833},{"krate":0,"index":10834},{"krate":0,"index":10835}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10896},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123583,"byte_end":123591,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":10902},{"krate":0,"index":10903},{"krate":0,"index":10904},{"krate":0,"index":10905},{"krate":0,"index":10906}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1457},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124864,"byte_end":124872,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123629,"byte_end":123702,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123703,"byte_end":123735,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123736,"byte_end":123739,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123740,"byte_end":123811,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123812,"byte_end":123888,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123889,"byte_end":123961,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123962,"byte_end":123978,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123979,"byte_end":123982,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":123983,"byte_end":124052,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124053,"byte_end":124079,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124080,"byte_end":124083,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124084,"byte_end":124098,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124099,"byte_end":124102,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124103,"byte_end":124179,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124180,"byte_end":124216,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124217,"byte_end":124220,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124221,"byte_end":124228,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124229,"byte_end":124270,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124271,"byte_end":124295,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124296,"byte_end":124299,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124300,"byte_end":124345,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124346,"byte_end":124391,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124392,"byte_end":124430,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124431,"byte_end":124434,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124435,"byte_end":124474,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124475,"byte_end":124484,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124485,"byte_end":124492,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124493,"byte_end":124496,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124497,"byte_end":124567,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124568,"byte_end":124583,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124584,"byte_end":124587,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124588,"byte_end":124595,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124596,"byte_end":124637,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124638,"byte_end":124662,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124663,"byte_end":124666,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124667,"byte_end":124712,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124713,"byte_end":124759,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124760,"byte_end":124798,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124799,"byte_end":124802,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124803,"byte_end":124838,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124839,"byte_end":124848,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":124849,"byte_end":124856,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1460},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125528,"byte_end":125537,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125110,"byte_end":125170,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125171,"byte_end":125174,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125175,"byte_end":125189,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125190,"byte_end":125193,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125194,"byte_end":125201,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125202,"byte_end":125243,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125244,"byte_end":125268,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125269,"byte_end":125272,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125273,"byte_end":125318,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125319,"byte_end":125364,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125365,"byte_end":125410,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125411,"byte_end":125454,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125455,"byte_end":125458,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125459,"byte_end":125502,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125503,"byte_end":125512,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125513,"byte_end":125520,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1464},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126365,"byte_end":126374,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125895,"byte_end":125955,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125956,"byte_end":125959,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125960,"byte_end":125974,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125975,"byte_end":125978,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125979,"byte_end":125986,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":125987,"byte_end":126028,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126029,"byte_end":126053,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126054,"byte_end":126057,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126058,"byte_end":126103,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126104,"byte_end":126149,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126150,"byte_end":126195,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126196,"byte_end":126241,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126242,"byte_end":126288,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126289,"byte_end":126292,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126293,"byte_end":126339,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126340,"byte_end":126349,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126350,"byte_end":126357,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1469},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":127346,"byte_end":127355,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126824,"byte_end":126884,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126885,"byte_end":126888,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126889,"byte_end":126903,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126904,"byte_end":126907,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126908,"byte_end":126915,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126916,"byte_end":126957,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126958,"byte_end":126982,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126983,"byte_end":126986,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":126987,"byte_end":127032,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":127033,"byte_end":127078,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":127079,"byte_end":127124,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":127125,"byte_end":127170,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":127171,"byte_end":127216,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":127217,"byte_end":127266,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":127267,"byte_end":127270,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":127271,"byte_end":127320,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":127321,"byte_end":127330,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join.rs","byte_start":127331,"byte_end":127338,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1552},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":128847,"byte_end":128857,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1554}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":128722,"byte_end":128767,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":128768,"byte_end":128835,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1558},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130450,"byte_end":130462,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129201,"byte_end":129280,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129281,"byte_end":129311,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129312,"byte_end":129315,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129316,"byte_end":129395,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129396,"byte_end":129476,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129477,"byte_end":129495,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129496,"byte_end":129499,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129500,"byte_end":129578,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129579,"byte_end":129659,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129660,"byte_end":129734,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129735,"byte_end":129758,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129759,"byte_end":129762,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129763,"byte_end":129840,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129841,"byte_end":129898,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129899,"byte_end":129902,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129903,"byte_end":129917,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129918,"byte_end":129921,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129922,"byte_end":129929,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129930,"byte_end":129971,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":129972,"byte_end":130018,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130019,"byte_end":130022,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130023,"byte_end":130046,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130047,"byte_end":130081,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130082,"byte_end":130116,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130117,"byte_end":130151,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130152,"byte_end":130158,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130159,"byte_end":130162,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130163,"byte_end":130226,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130227,"byte_end":130230,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130231,"byte_end":130254,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130255,"byte_end":130289,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130290,"byte_end":130325,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130326,"byte_end":130360,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130361,"byte_end":130367,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130368,"byte_end":130371,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130372,"byte_end":130424,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130425,"byte_end":130434,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130435,"byte_end":130442,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10977},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132360,"byte_end":132369,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":10980}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132218,"byte_end":132263,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132264,"byte_end":132331,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1604},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133954,"byte_end":133964,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132463,"byte_end":132533,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132534,"byte_end":132537,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132538,"byte_end":132616,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132617,"byte_end":132693,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132694,"byte_end":132766,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132767,"byte_end":132770,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132771,"byte_end":132843,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132844,"byte_end":132872,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132873,"byte_end":132876,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132877,"byte_end":132944,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132945,"byte_end":133016,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133017,"byte_end":133067,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133068,"byte_end":133071,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133072,"byte_end":133086,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133087,"byte_end":133090,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133091,"byte_end":133098,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133099,"byte_end":133183,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133184,"byte_end":133187,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133188,"byte_end":133245,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133246,"byte_end":133249,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133250,"byte_end":133332,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133333,"byte_end":133390,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133391,"byte_end":133448,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133449,"byte_end":133475,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133476,"byte_end":133481,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133482,"byte_end":133577,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133578,"byte_end":133601,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133602,"byte_end":133682,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133683,"byte_end":133764,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133765,"byte_end":133835,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133836,"byte_end":133907,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133908,"byte_end":133921,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133922,"byte_end":133932,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133933,"byte_end":133938,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":133939,"byte_end":133946,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10985},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":135595,"byte_end":135603,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":10987}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":135456,"byte_end":135498,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":135516,"byte_end":135583,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1654},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136325,"byte_end":136334,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":135680,"byte_end":135774,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":135775,"byte_end":135778,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":135779,"byte_end":135868,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":135869,"byte_end":135953,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":135954,"byte_end":136035,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136036,"byte_end":136081,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136082,"byte_end":136085,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136086,"byte_end":136164,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136165,"byte_end":136222,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136223,"byte_end":136226,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136227,"byte_end":136239,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136240,"byte_end":136243,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136244,"byte_end":136317,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10994},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139077,"byte_end":139081,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":10991},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139044,"byte_end":139072,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10997},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139137,"byte_end":139142,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":10991},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139103,"byte_end":139132,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":10991},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139025,"byte_end":139031,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":10994},{"krate":0,"index":10997}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138502,"byte_end":138608,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138609,"byte_end":138612,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138613,"byte_end":138694,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138695,"byte_end":138698,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138699,"byte_end":138710,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138711,"byte_end":138743,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138744,"byte_end":138747,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138748,"byte_end":138789,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138790,"byte_end":138810,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138811,"byte_end":138814,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138815,"byte_end":138838,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138839,"byte_end":138878,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138879,"byte_end":138891,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138892,"byte_end":138932,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138933,"byte_end":138939,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138940,"byte_end":138943,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138944,"byte_end":138974,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138975,"byte_end":138983,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":138984,"byte_end":138991,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139696,"byte_end":139708,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139548,"byte_end":139606,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139611,"byte_end":139614,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139619,"byte_end":139684,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140088,"byte_end":140101,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139939,"byte_end":139997,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140002,"byte_end":140005,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140010,"byte_end":140076,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140389,"byte_end":140399,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140316,"byte_end":140377,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1811},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/abortable.rs","byte_start":147331,"byte_end":147340,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/abortable.rs","byte_start":146961,"byte_end":147048,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/abortable.rs","byte_start":147049,"byte_end":147052,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/abortable.rs","byte_start":147053,"byte_end":147129,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/abortable.rs","byte_start":147130,"byte_end":147183,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/abortable.rs","byte_start":147184,"byte_end":147187,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/abortable.rs","byte_start":147188,"byte_end":147265,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/abortable.rs","byte_start":147266,"byte_end":147323,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1845},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":3782},{"krate":0,"index":3785},{"krate":0,"index":3788},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3800},{"krate":0,"index":3803},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3812},{"krate":0,"index":3815},{"krate":0,"index":3818},{"krate":0,"index":3821},{"krate":0,"index":3824},{"krate":0,"index":3827},{"krate":0,"index":3830},{"krate":0,"index":3833},{"krate":0,"index":3836},{"krate":0,"index":3839},{"krate":0,"index":3842},{"krate":0,"index":3845},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":3854},{"krate":0,"index":3857},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3864},{"krate":0,"index":3867},{"krate":0,"index":3870},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5027},{"krate":0,"index":5030},{"krate":0,"index":5033},{"krate":0,"index":5036},{"krate":0,"index":5039},{"krate":0,"index":5042},{"krate":0,"index":5045},{"krate":0,"index":5048},{"krate":0,"index":5051},{"krate":0,"index":5054},{"krate":0,"index":5057},{"krate":0,"index":5060},{"krate":0,"index":5063},{"krate":0,"index":5066},{"krate":0,"index":5069},{"krate":0,"index":5072},{"krate":0,"index":5075},{"krate":0,"index":5078},{"krate":0,"index":5081},{"krate":0,"index":5084},{"krate":0,"index":5087},{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5094},{"krate":0,"index":5097},{"krate":0,"index":5100},{"krate":0,"index":5101},{"krate":0,"index":5104},{"krate":0,"index":5105},{"krate":0,"index":5107},{"krate":0,"index":5133},{"krate":0,"index":5134},{"krate":0,"index":5137},{"krate":0,"index":5140},{"krate":0,"index":5173},{"krate":0,"index":5174},{"krate":0,"index":5177},{"krate":0,"index":5180},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5221},{"krate":0,"index":5224},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5267},{"krate":0,"index":5270},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5317},{"krate":0,"index":5320},{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5363},{"krate":0,"index":5366},{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5406},{"krate":0,"index":5409},{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5441},{"krate":0,"index":5444},{"krate":0,"index":5498},{"krate":0,"index":5499},{"krate":0,"index":5502},{"krate":0,"index":5505},{"krate":0,"index":5580},{"krate":0,"index":5581},{"krate":0,"index":5584},{"krate":0,"index":5587},{"krate":0,"index":5590},{"krate":0,"index":5649},{"krate":0,"index":5650},{"krate":0,"index":5653},{"krate":0,"index":5656},{"krate":0,"index":5763},{"krate":0,"index":5766},{"krate":0,"index":6162},{"krate":0,"index":6165},{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6291},{"krate":0,"index":6294},{"krate":0,"index":6310},{"krate":0,"index":6311},{"krate":0,"index":6314},{"krate":0,"index":6317},{"krate":0,"index":6320},{"krate":0,"index":6321},{"krate":0,"index":6323},{"krate":0,"index":6326}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":147592,"byte_end":147617,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":147618,"byte_end":147621,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":147622,"byte_end":147647,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":147648,"byte_end":147651,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":147652,"byte_end":147725,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":147726,"byte_end":147751,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":147752,"byte_end":147831,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":147832,"byte_end":147869,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":147870,"byte_end":147943,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":147944,"byte_end":147974,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":11015},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chain.rs","byte_start":204412,"byte_end":204417,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11018},{"krate":0,"index":11019}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11064},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/collect.rs","byte_start":206542,"byte_end":206549,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":11067},{"krate":0,"index":11068}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11115},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/unzip.rs","byte_start":207983,"byte_end":207988,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":11119},{"krate":0,"index":11120},{"krate":0,"index":11121}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11173},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/concat.rs","byte_start":209822,"byte_end":209828,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":11175},{"krate":0,"index":11176}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11213},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/cycle.rs","byte_start":211455,"byte_end":211460,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11215},{"krate":0,"index":11216}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11253},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/enumerate.rs","byte_start":213107,"byte_end":213116,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11255},{"krate":0,"index":11256}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11292},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter.rs","byte_start":214748,"byte_end":214754,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11296},{"krate":0,"index":11297},{"krate":0,"index":11298},{"krate":0,"index":11299}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11357},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter_map.rs","byte_start":218148,"byte_end":218157,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11361},{"krate":0,"index":11362},{"krate":0,"index":11363}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11425},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/flatten.rs","byte_start":221163,"byte_end":221170,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11428},{"krate":0,"index":11429}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11473},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":153382,"byte_end":153389,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11475}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11526},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fold.rs","byte_start":222987,"byte_end":222991,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":11531},{"krate":0,"index":11532},{"krate":0,"index":11533},{"krate":0,"index":11534}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11595},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/any.rs","byte_start":225448,"byte_end":225451,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":11599},{"krate":0,"index":11600},{"krate":0,"index":11601},{"krate":0,"index":11602}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11656},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/all.rs","byte_start":228024,"byte_end":228027,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":11660},{"krate":0,"index":11661},{"krate":0,"index":11662},{"krate":0,"index":11663}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11717},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each.rs","byte_start":230626,"byte_end":230633,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":11721},{"krate":0,"index":11722},{"krate":0,"index":11723}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11779},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":232590,"byte_end":232594,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11781},{"krate":0,"index":11782}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":233046,"byte_end":233053,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":232777,"byte_end":232839,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":232844,"byte_end":232847,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":232852,"byte_end":232920,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":232925,"byte_end":232991,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":232996,"byte_end":233034,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":11818},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234412,"byte_end":234424,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":11820}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234242,"byte_end":234315,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234333,"byte_end":234400,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234987,"byte_end":234994,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234595,"byte_end":234668,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234673,"byte_end":234690,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234695,"byte_end":234698,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234703,"byte_end":234784,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234789,"byte_end":234871,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234876,"byte_end":234955,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234960,"byte_end":234975,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235605,"byte_end":235612,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235059,"byte_end":235126,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235131,"byte_end":235162,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235167,"byte_end":235170,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235175,"byte_end":235248,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235253,"byte_end":235308,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235313,"byte_end":235316,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235321,"byte_end":235402,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235407,"byte_end":235489,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235494,"byte_end":235573,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235578,"byte_end":235593,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236238,"byte_end":236249,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235685,"byte_end":235759,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235764,"byte_end":235795,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235800,"byte_end":235803,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235808,"byte_end":235881,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235886,"byte_end":235941,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235946,"byte_end":235949,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":235954,"byte_end":236035,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236040,"byte_end":236122,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236127,"byte_end":236206,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236211,"byte_end":236226,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236882,"byte_end":236892,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236362,"byte_end":236424,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236429,"byte_end":236432,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236437,"byte_end":236509,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236514,"byte_end":236585,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236590,"byte_end":236593,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236598,"byte_end":236679,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236684,"byte_end":236766,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236771,"byte_end":236850,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236855,"byte_end":236870,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11827},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":154729,"byte_end":154736,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":11830}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11893},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/map.rs","byte_start":237916,"byte_end":237919,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":11896},{"krate":0,"index":11897}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11946},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":155097,"byte_end":155104,"line_start":119,"line_end":119,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":11950}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12025},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":239579,"byte_end":239583,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":12028}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":239423,"byte_end":239482,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":239500,"byte_end":239567,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12033},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/select_next_some.rs","byte_start":240591,"byte_end":240605,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":12036}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/select_next_some.rs","byte_start":240407,"byte_end":240482,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/select_next_some.rs","byte_start":240483,"byte_end":240494,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/select_next_some.rs","byte_start":240512,"byte_end":240579,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12046},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242196,"byte_end":242204,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":12048},{"krate":0,"index":12049}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242637,"byte_end":242641,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242489,"byte_end":242555,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242560,"byte_end":242625,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242966,"byte_end":242975,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242728,"byte_end":242790,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242795,"byte_end":242798,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242803,"byte_end":242876,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242881,"byte_end":242954,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244290,"byte_end":244298,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"pub fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243411,"byte_end":243485,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243490,"byte_end":243555,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243560,"byte_end":243563,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243568,"byte_end":243582,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243587,"byte_end":243590,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243595,"byte_end":243602,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243607,"byte_end":243648,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243653,"byte_end":243696,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243701,"byte_end":243726,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243731,"byte_end":243734,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243739,"byte_end":243795,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243800,"byte_end":243821,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243826,"byte_end":243829,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243834,"byte_end":243897,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243902,"byte_end":243956,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243961,"byte_end":243964,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":243969,"byte_end":244045,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244050,"byte_end":244105,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244110,"byte_end":244130,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244135,"byte_end":244154,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244159,"byte_end":244168,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244173,"byte_end":244178,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244183,"byte_end":244186,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244191,"byte_end":244252,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244257,"byte_end":244266,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244271,"byte_end":244278,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244473,"byte_end":244486,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"pub fn poll_peek_mut(Pin<&mut Self>, &mut Context)\n-> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244391,"byte_end":244461,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246477,"byte_end":246484,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":244949,"byte_end":245022,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245027,"byte_end":245061,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245066,"byte_end":245069,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245074,"byte_end":245149,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245154,"byte_end":245194,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245199,"byte_end":245202,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245207,"byte_end":245221,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245226,"byte_end":245229,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245234,"byte_end":245274,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245279,"byte_end":245282,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245287,"byte_end":245294,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245299,"byte_end":245340,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245345,"byte_end":245388,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245393,"byte_end":245418,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245423,"byte_end":245426,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245431,"byte_end":245478,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245483,"byte_end":245504,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245509,"byte_end":245562,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245567,"byte_end":245635,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245640,"byte_end":245713,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245718,"byte_end":245783,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245788,"byte_end":245872,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245877,"byte_end":245922,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245927,"byte_end":245936,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245941,"byte_end":245948,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245953,"byte_end":245956,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":245961,"byte_end":245997,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246002,"byte_end":246005,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246010,"byte_end":246017,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246022,"byte_end":246063,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246068,"byte_end":246111,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246116,"byte_end":246141,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246146,"byte_end":246149,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246154,"byte_end":246202,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246207,"byte_end":246228,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246233,"byte_end":246272,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246277,"byte_end":246342,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246347,"byte_end":246388,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246393,"byte_end":246439,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246444,"byte_end":246453,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246458,"byte_end":246465,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247508,"byte_end":247518,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT: ?Sized, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246650,"byte_end":246723,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246728,"byte_end":246752,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246757,"byte_end":246760,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246765,"byte_end":246778,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246783,"byte_end":246786,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246791,"byte_end":246831,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246836,"byte_end":246839,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246844,"byte_end":246851,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246856,"byte_end":246897,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246902,"byte_end":246945,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246950,"byte_end":246975,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246980,"byte_end":246983,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":246988,"byte_end":247035,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247040,"byte_end":247061,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247066,"byte_end":247119,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247124,"byte_end":247186,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247191,"byte_end":247264,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247269,"byte_end":247328,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247333,"byte_end":247420,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247425,"byte_end":247470,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247475,"byte_end":247484,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247489,"byte_end":247496,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12085},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":249036,"byte_end":249040,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":12088}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12126},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":250098,"byte_end":250105,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":12129}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12167},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":251188,"byte_end":251194,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":12171}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12216},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":253058,"byte_end":253066,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":12220}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12270},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip.rs","byte_start":254683,"byte_end":254687,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":12272},{"krate":0,"index":12273}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12309},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip_while.rs","byte_start":256450,"byte_end":256459,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":12313},{"krate":0,"index":12314},{"krate":0,"index":12315},{"krate":0,"index":12316},{"krate":0,"index":12317}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12383},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take.rs","byte_start":259963,"byte_end":259967,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12385},{"krate":0,"index":12386}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12422},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_while.rs","byte_start":262003,"byte_end":262012,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":12426},{"krate":0,"index":12427},{"krate":0,"index":12428},{"krate":0,"index":12429},{"krate":0,"index":12430}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12491},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":265492,"byte_end":265501,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":12494},{"krate":0,"index":12495},{"krate":0,"index":12496},{"krate":0,"index":12497}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":266785,"byte_end":266796,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":266485,"byte_end":266539,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":266544,"byte_end":266638,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":266643,"byte_end":266706,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":266711,"byte_end":266773,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":268080,"byte_end":268091,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":266933,"byte_end":266998,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267003,"byte_end":267060,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267065,"byte_end":267068,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267073,"byte_end":267138,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267143,"byte_end":267203,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267208,"byte_end":267211,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267216,"byte_end":267284,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267289,"byte_end":267332,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267337,"byte_end":267340,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267345,"byte_end":267359,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267364,"byte_end":267367,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267372,"byte_end":267379,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267384,"byte_end":267425,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267430,"byte_end":267454,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267459,"byte_end":267502,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267507,"byte_end":267535,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267540,"byte_end":267543,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267548,"byte_end":267586,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267591,"byte_end":267594,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267599,"byte_end":267617,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267622,"byte_end":267664,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267669,"byte_end":267684,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267689,"byte_end":267708,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267713,"byte_end":267738,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267743,"byte_end":267759,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267764,"byte_end":267797,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267802,"byte_end":267811,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267816,"byte_end":267823,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267828,"byte_end":267831,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267836,"byte_end":267885,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267890,"byte_end":267944,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267949,"byte_end":267952,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":267957,"byte_end":268004,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":268009,"byte_end":268042,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":268047,"byte_end":268056,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":268061,"byte_end":268068,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":268267,"byte_end":268277,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":268170,"byte_end":268231,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":268236,"byte_end":268255,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12548},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/then.rs","byte_start":270209,"byte_end":270213,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":12552},{"krate":0,"index":12553},{"krate":0,"index":12554}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12616},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":272753,"byte_end":272756,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":12619},{"krate":0,"index":12620},{"krate":0,"index":12621},{"krate":0,"index":12622}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273274,"byte_end":273281,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273166,"byte_end":273240,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273245,"byte_end":273262,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273637,"byte_end":273644,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273375,"byte_end":273443,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273448,"byte_end":273479,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273484,"byte_end":273487,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273492,"byte_end":273565,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273570,"byte_end":273625,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":274019,"byte_end":274030,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273750,"byte_end":273825,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273830,"byte_end":273861,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273866,"byte_end":273869,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273874,"byte_end":273947,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":273952,"byte_end":274007,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":274436,"byte_end":274446,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":274200,"byte_end":274263,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":274268,"byte_end":274271,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":274276,"byte_end":274348,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":274353,"byte_end":274424,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":12671},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chunks.rs","byte_start":277275,"byte_end":277281,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":12673},{"krate":0,"index":12674},{"krate":0,"index":12675}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12719},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/ready_chunks.rs","byte_start":280384,"byte_end":280395,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":12721},{"krate":0,"index":12722},{"krate":0,"index":12723}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12762},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":283941,"byte_end":283945,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":12767},{"krate":0,"index":12768},{"krate":0,"index":12769}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12831},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffer_unordered.rs","byte_start":287369,"byte_end":287384,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":12833},{"krate":0,"index":12834},{"krate":0,"index":12835}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12876},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffered.rs","byte_start":290695,"byte_end":290703,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":12878},{"krate":0,"index":12879},{"krate":0,"index":12880}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12921},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each_concurrent.rs","byte_start":293698,"byte_end":293715,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":12925},{"krate":0,"index":12926},{"krate":0,"index":12927},{"krate":0,"index":12928}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12987},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/catch_unwind.rs","byte_start":297221,"byte_end":297232,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":12989},{"krate":0,"index":12990}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3668},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158569,"byte_end":158578,"line_start":226,"line_end":226,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3678},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3687},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3698},{"krate":0,"index":3701},{"krate":0,"index":3704},{"krate":0,"index":3705},{"krate":0,"index":3708},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":3721},{"krate":0,"index":3724},{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3735},{"krate":0,"index":3737},{"krate":0,"index":3738},{"krate":0,"index":3739},{"krate":0,"index":3741},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3752},{"krate":0,"index":3753}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158458,"byte_end":158532,"line_start":224,"line_end":224,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158533,"byte_end":158558,"line_start":225,"line_end":225,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3669},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159488,"byte_end":159492,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158593,"byte_end":158659,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158664,"byte_end":158667,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158672,"byte_end":158740,"line_start":229,"line_end":229,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158745,"byte_end":158820,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158825,"byte_end":158900,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158905,"byte_end":158959,"line_start":232,"line_end":232,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158964,"byte_end":159039,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159044,"byte_end":159054,"line_start":234,"line_end":234,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159059,"byte_end":159062,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159067,"byte_end":159081,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159086,"byte_end":159089,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159094,"byte_end":159101,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159106,"byte_end":159147,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159152,"byte_end":159195,"line_start":240,"line_end":240,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159200,"byte_end":159203,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159208,"byte_end":159249,"line_start":242,"line_end":242,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159254,"byte_end":159257,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159262,"byte_end":159307,"line_start":244,"line_end":244,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159312,"byte_end":159357,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159362,"byte_end":159407,"line_start":246,"line_end":246,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159412,"byte_end":159454,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159459,"byte_end":159468,"line_start":248,"line_end":248,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159473,"byte_end":159480,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160731,"byte_end":160742,"line_start":285,"line_end":285,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159634,"byte_end":159706,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159711,"byte_end":159772,"line_start":258,"line_end":258,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159777,"byte_end":159780,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159785,"byte_end":159860,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159865,"byte_end":159919,"line_start":261,"line_end":261,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159924,"byte_end":159927,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":159932,"byte_end":160005,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160010,"byte_end":160072,"line_start":264,"line_end":264,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160077,"byte_end":160152,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160157,"byte_end":160211,"line_start":266,"line_end":266,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160216,"byte_end":160291,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160296,"byte_end":160306,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160311,"byte_end":160314,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160319,"byte_end":160333,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160338,"byte_end":160341,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160346,"byte_end":160353,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160358,"byte_end":160399,"line_start":273,"line_end":273,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160404,"byte_end":160447,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160452,"byte_end":160455,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160460,"byte_end":160497,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160502,"byte_end":160505,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160510,"byte_end":160562,"line_start":278,"line_end":278,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160567,"byte_end":160597,"line_start":279,"line_end":279,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160602,"byte_end":160605,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160610,"byte_end":160662,"line_start":281,"line_end":281,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160667,"byte_end":160697,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160702,"byte_end":160711,"line_start":283,"line_end":283,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160716,"byte_end":160723,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161743,"byte_end":161746,"line_start":315,"line_end":315,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160907,"byte_end":160982,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":160987,"byte_end":161010,"line_start":293,"line_end":293,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161015,"byte_end":161018,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161023,"byte_end":161095,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161100,"byte_end":161164,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161169,"byte_end":161206,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161211,"byte_end":161214,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161219,"byte_end":161295,"line_start":299,"line_end":299,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161300,"byte_end":161371,"line_start":300,"line_end":300,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161376,"byte_end":161397,"line_start":301,"line_end":301,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161402,"byte_end":161405,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161410,"byte_end":161424,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161429,"byte_end":161432,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161437,"byte_end":161444,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161449,"byte_end":161490,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161495,"byte_end":161538,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161543,"byte_end":161546,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161551,"byte_end":161588,"line_start":309,"line_end":309,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161593,"byte_end":161632,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161637,"byte_end":161640,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161645,"byte_end":161709,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161714,"byte_end":161723,"line_start":313,"line_end":313,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161728,"byte_end":161735,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163306,"byte_end":163315,"line_start":361,"line_end":361,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161913,"byte_end":161984,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":161989,"byte_end":162008,"line_start":324,"line_end":324,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162013,"byte_end":162016,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162021,"byte_end":162086,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162091,"byte_end":162160,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162165,"byte_end":162176,"line_start":328,"line_end":328,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162181,"byte_end":162184,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162189,"byte_end":162264,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162269,"byte_end":162351,"line_start":331,"line_end":331,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162356,"byte_end":162374,"line_start":332,"line_end":332,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162379,"byte_end":162382,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162387,"byte_end":162410,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162415,"byte_end":162418,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162423,"byte_end":162498,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162503,"byte_end":162590,"line_start":337,"line_end":337,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162595,"byte_end":162651,"line_start":338,"line_end":338,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162656,"byte_end":162659,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162664,"byte_end":162676,"line_start":340,"line_end":340,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162681,"byte_end":162684,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162689,"byte_end":162758,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162763,"byte_end":162788,"line_start":343,"line_end":343,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162793,"byte_end":162796,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162801,"byte_end":162815,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162820,"byte_end":162823,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162828,"byte_end":162835,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162840,"byte_end":162881,"line_start":348,"line_end":348,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162886,"byte_end":162929,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162934,"byte_end":162937,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162942,"byte_end":162993,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":162998,"byte_end":163001,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163006,"byte_end":163046,"line_start":353,"line_end":353,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163051,"byte_end":163054,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163059,"byte_end":163111,"line_start":355,"line_end":355,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163116,"byte_end":163168,"line_start":356,"line_end":356,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163173,"byte_end":163225,"line_start":357,"line_end":357,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163230,"byte_end":163272,"line_start":358,"line_end":358,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163277,"byte_end":163286,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163291,"byte_end":163298,"line_start":360,"line_end":360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164544,"byte_end":164550,"line_start":394,"line_end":394,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163459,"byte_end":163531,"line_start":368,"line_end":368,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163536,"byte_end":163563,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163568,"byte_end":163571,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163576,"byte_end":163651,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163656,"byte_end":163727,"line_start":372,"line_end":372,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163732,"byte_end":163804,"line_start":373,"line_end":373,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163809,"byte_end":163883,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163888,"byte_end":163946,"line_start":375,"line_end":375,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163951,"byte_end":163954,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":163959,"byte_end":164035,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164040,"byte_end":164114,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164119,"byte_end":164140,"line_start":379,"line_end":379,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164145,"byte_end":164148,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164153,"byte_end":164167,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164172,"byte_end":164175,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164180,"byte_end":164187,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164192,"byte_end":164233,"line_start":384,"line_end":384,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164238,"byte_end":164262,"line_start":385,"line_end":385,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164267,"byte_end":164310,"line_start":386,"line_end":386,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164315,"byte_end":164318,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164323,"byte_end":164361,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164366,"byte_end":164427,"line_start":389,"line_end":389,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164432,"byte_end":164435,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164440,"byte_end":164510,"line_start":391,"line_end":391,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164515,"byte_end":164524,"line_start":392,"line_end":392,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164529,"byte_end":164536,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165875,"byte_end":165885,"line_start":428,"line_end":428,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164778,"byte_end":164853,"line_start":403,"line_end":403,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164858,"byte_end":164934,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164939,"byte_end":164942,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":164947,"byte_end":165022,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165027,"byte_end":165102,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165107,"byte_end":165183,"line_start":408,"line_end":408,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165188,"byte_end":165253,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165258,"byte_end":165261,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165266,"byte_end":165342,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165347,"byte_end":165421,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165426,"byte_end":165451,"line_start":413,"line_end":413,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165456,"byte_end":165459,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165464,"byte_end":165478,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165483,"byte_end":165490,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165495,"byte_end":165536,"line_start":417,"line_end":417,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165541,"byte_end":165584,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165589,"byte_end":165592,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165597,"byte_end":165635,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165640,"byte_end":165690,"line_start":421,"line_end":421,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165695,"byte_end":165746,"line_start":422,"line_end":422,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165751,"byte_end":165758,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165763,"byte_end":165766,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165771,"byte_end":165841,"line_start":425,"line_end":425,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165846,"byte_end":165855,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":165860,"byte_end":165867,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166914,"byte_end":166918,"line_start":459,"line_end":459,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166117,"byte_end":166190,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166195,"byte_end":166223,"line_start":438,"line_end":438,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166228,"byte_end":166231,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166236,"byte_end":166310,"line_start":440,"line_end":440,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166315,"byte_end":166382,"line_start":441,"line_end":441,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166387,"byte_end":166432,"line_start":442,"line_end":442,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166437,"byte_end":166440,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166445,"byte_end":166521,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166526,"byte_end":166552,"line_start":445,"line_end":445,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166557,"byte_end":166560,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166565,"byte_end":166579,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166584,"byte_end":166587,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166592,"byte_end":166599,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166604,"byte_end":166645,"line_start":450,"line_end":450,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166650,"byte_end":166693,"line_start":451,"line_end":451,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166698,"byte_end":166701,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166706,"byte_end":166743,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166748,"byte_end":166803,"line_start":454,"line_end":454,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166808,"byte_end":166811,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166816,"byte_end":166880,"line_start":456,"line_end":456,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166885,"byte_end":166894,"line_start":457,"line_end":457,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":166899,"byte_end":166906,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3685},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167852,"byte_end":167859,"line_start":493,"line_end":493,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167127,"byte_end":167181,"line_start":468,"line_end":468,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167186,"byte_end":167241,"line_start":469,"line_end":469,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167246,"byte_end":167249,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167254,"byte_end":167322,"line_start":471,"line_end":471,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167327,"byte_end":167330,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167335,"byte_end":167349,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167354,"byte_end":167357,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167362,"byte_end":167369,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167374,"byte_end":167415,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167420,"byte_end":167451,"line_start":477,"line_end":477,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167456,"byte_end":167491,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167496,"byte_end":167516,"line_start":479,"line_end":479,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167521,"byte_end":167524,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167529,"byte_end":167566,"line_start":481,"line_end":481,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167571,"byte_end":167574,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167579,"byte_end":167606,"line_start":483,"line_end":483,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167611,"byte_end":167635,"line_start":484,"line_end":484,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167640,"byte_end":167682,"line_start":485,"line_end":485,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167687,"byte_end":167696,"line_start":486,"line_end":486,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167701,"byte_end":167708,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167713,"byte_end":167716,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167721,"byte_end":167769,"line_start":489,"line_end":489,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167774,"byte_end":167818,"line_start":490,"line_end":490,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167823,"byte_end":167832,"line_start":491,"line_end":491,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":167837,"byte_end":167844,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168978,"byte_end":168983,"line_start":530,"line_end":530,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168017,"byte_end":168068,"line_start":500,"line_end":500,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168073,"byte_end":168108,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168113,"byte_end":168116,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168121,"byte_end":168175,"line_start":503,"line_end":503,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168180,"byte_end":168237,"line_start":504,"line_end":504,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168242,"byte_end":168278,"line_start":505,"line_end":505,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168283,"byte_end":168286,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168291,"byte_end":168359,"line_start":507,"line_end":507,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168364,"byte_end":168367,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168372,"byte_end":168386,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168391,"byte_end":168394,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168399,"byte_end":168406,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168411,"byte_end":168452,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168457,"byte_end":168488,"line_start":513,"line_end":513,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168493,"byte_end":168528,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168533,"byte_end":168553,"line_start":515,"line_end":515,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168558,"byte_end":168561,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168566,"byte_end":168603,"line_start":517,"line_end":517,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168608,"byte_end":168611,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168616,"byte_end":168643,"line_start":519,"line_end":519,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168648,"byte_end":168691,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168696,"byte_end":168739,"line_start":521,"line_end":521,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168744,"byte_end":168787,"line_start":522,"line_end":522,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168792,"byte_end":168799,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168804,"byte_end":168807,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168812,"byte_end":168866,"line_start":525,"line_end":525,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168871,"byte_end":168905,"line_start":526,"line_end":526,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168910,"byte_end":168944,"line_start":527,"line_end":527,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168949,"byte_end":168958,"line_start":528,"line_end":528,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":168963,"byte_end":168970,"line_start":529,"line_end":529,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170279,"byte_end":170285,"line_start":571,"line_end":571,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169244,"byte_end":169306,"line_start":539,"line_end":539,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169311,"byte_end":169375,"line_start":540,"line_end":540,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169380,"byte_end":169383,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169388,"byte_end":169452,"line_start":542,"line_end":542,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169457,"byte_end":169522,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169527,"byte_end":169573,"line_start":544,"line_end":544,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169578,"byte_end":169581,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169586,"byte_end":169635,"line_start":546,"line_end":546,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169640,"byte_end":169680,"line_start":547,"line_end":547,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169685,"byte_end":169688,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169693,"byte_end":169707,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169712,"byte_end":169715,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169720,"byte_end":169727,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169732,"byte_end":169773,"line_start":552,"line_end":552,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169778,"byte_end":169809,"line_start":553,"line_end":553,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169814,"byte_end":169849,"line_start":554,"line_end":554,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169854,"byte_end":169874,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169879,"byte_end":169882,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169887,"byte_end":169924,"line_start":557,"line_end":557,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169929,"byte_end":169932,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169937,"byte_end":169964,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":169969,"byte_end":170000,"line_start":560,"line_end":560,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170005,"byte_end":170031,"line_start":561,"line_end":561,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170036,"byte_end":170102,"line_start":562,"line_end":562,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170107,"byte_end":170116,"line_start":563,"line_end":563,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170121,"byte_end":170128,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170133,"byte_end":170136,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170141,"byte_end":170176,"line_start":566,"line_end":566,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170181,"byte_end":170184,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170189,"byte_end":170245,"line_start":568,"line_end":568,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170250,"byte_end":170259,"line_start":569,"line_end":569,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170264,"byte_end":170271,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171349,"byte_end":171354,"line_start":602,"line_end":602,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170515,"byte_end":170546,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170551,"byte_end":170554,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170559,"byte_end":170626,"line_start":581,"line_end":581,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170631,"byte_end":170703,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170708,"byte_end":170765,"line_start":583,"line_end":583,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170770,"byte_end":170773,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170778,"byte_end":170792,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170797,"byte_end":170800,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170805,"byte_end":170812,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170817,"byte_end":170858,"line_start":588,"line_end":588,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170863,"byte_end":170906,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170911,"byte_end":170933,"line_start":590,"line_end":590,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170938,"byte_end":170985,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170990,"byte_end":170993,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":170998,"byte_end":171039,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171044,"byte_end":171085,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171090,"byte_end":171131,"line_start":595,"line_end":595,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171136,"byte_end":171177,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171182,"byte_end":171223,"line_start":597,"line_end":597,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171228,"byte_end":171269,"line_start":598,"line_end":598,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171274,"byte_end":171315,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171320,"byte_end":171329,"line_start":600,"line_end":600,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171334,"byte_end":171341,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172304,"byte_end":172308,"line_start":629,"line_end":629,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171489,"byte_end":171556,"line_start":609,"line_end":609,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171561,"byte_end":171613,"line_start":610,"line_end":610,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171618,"byte_end":171621,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171626,"byte_end":171696,"line_start":612,"line_end":612,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171701,"byte_end":171777,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171782,"byte_end":171858,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171863,"byte_end":171933,"line_start":615,"line_end":615,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171938,"byte_end":171964,"line_start":616,"line_end":616,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171969,"byte_end":171972,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171977,"byte_end":171991,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":171996,"byte_end":171999,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172004,"byte_end":172011,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172016,"byte_end":172057,"line_start":621,"line_end":621,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172062,"byte_end":172105,"line_start":622,"line_end":622,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172110,"byte_end":172113,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172118,"byte_end":172161,"line_start":624,"line_end":624,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172166,"byte_end":172235,"line_start":625,"line_end":625,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172240,"byte_end":172270,"line_start":626,"line_end":626,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172275,"byte_end":172284,"line_start":627,"line_end":627,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172289,"byte_end":172296,"line_start":628,"line_end":628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3698},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173009,"byte_end":173012,"line_start":651,"line_end":651,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172543,"byte_end":172656,"line_start":638,"line_end":638,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172661,"byte_end":172664,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172669,"byte_end":172683,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172688,"byte_end":172691,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172696,"byte_end":172703,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172708,"byte_end":172749,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172754,"byte_end":172797,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172802,"byte_end":172805,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172810,"byte_end":172854,"line_start":646,"line_end":646,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172859,"byte_end":172928,"line_start":647,"line_end":647,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172933,"byte_end":172975,"line_start":648,"line_end":648,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172980,"byte_end":172989,"line_start":649,"line_end":649,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":172994,"byte_end":173001,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173699,"byte_end":173702,"line_start":673,"line_end":673,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173227,"byte_end":173340,"line_start":660,"line_end":660,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173345,"byte_end":173348,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173353,"byte_end":173367,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173372,"byte_end":173375,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173380,"byte_end":173387,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173392,"byte_end":173433,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173438,"byte_end":173481,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173486,"byte_end":173489,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173494,"byte_end":173538,"line_start":668,"line_end":668,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173543,"byte_end":173615,"line_start":669,"line_end":669,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173620,"byte_end":173665,"line_start":670,"line_end":670,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173670,"byte_end":173679,"line_start":671,"line_end":671,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173684,"byte_end":173691,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174876,"byte_end":174883,"line_start":713,"line_end":713,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173917,"byte_end":173982,"line_start":682,"line_end":682,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173987,"byte_end":173990,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":173995,"byte_end":174009,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174014,"byte_end":174017,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174022,"byte_end":174029,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174034,"byte_end":174075,"line_start":687,"line_end":687,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174080,"byte_end":174111,"line_start":688,"line_end":688,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174116,"byte_end":174151,"line_start":689,"line_end":689,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174156,"byte_end":174176,"line_start":690,"line_end":690,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174181,"byte_end":174184,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174189,"byte_end":174228,"line_start":692,"line_end":692,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174233,"byte_end":174272,"line_start":693,"line_end":693,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174277,"byte_end":174316,"line_start":694,"line_end":694,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174321,"byte_end":174324,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174329,"byte_end":174356,"line_start":696,"line_end":696,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174361,"byte_end":174400,"line_start":697,"line_end":697,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174405,"byte_end":174444,"line_start":698,"line_end":698,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174449,"byte_end":174456,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174461,"byte_end":174488,"line_start":700,"line_end":700,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174493,"byte_end":174532,"line_start":701,"line_end":701,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174537,"byte_end":174576,"line_start":702,"line_end":702,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174581,"byte_end":174588,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174593,"byte_end":174620,"line_start":704,"line_end":704,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174625,"byte_end":174666,"line_start":705,"line_end":705,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174671,"byte_end":174712,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174717,"byte_end":174724,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174729,"byte_end":174732,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174737,"byte_end":174796,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174801,"byte_end":174842,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174847,"byte_end":174856,"line_start":711,"line_end":711,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":174861,"byte_end":174868,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176145,"byte_end":176153,"line_start":746,"line_end":746,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175060,"byte_end":175132,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175137,"byte_end":175140,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175145,"byte_end":175222,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175227,"byte_end":175302,"line_start":724,"line_end":724,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175307,"byte_end":175383,"line_start":725,"line_end":725,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175388,"byte_end":175391,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175396,"byte_end":175478,"line_start":727,"line_end":727,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175483,"byte_end":175566,"line_start":728,"line_end":728,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175571,"byte_end":175574,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175579,"byte_end":175655,"line_start":730,"line_end":730,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175660,"byte_end":175736,"line_start":731,"line_end":731,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175741,"byte_end":175762,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175767,"byte_end":175770,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175775,"byte_end":175789,"line_start":734,"line_end":734,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175794,"byte_end":175797,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175802,"byte_end":175809,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175814,"byte_end":175855,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175860,"byte_end":175903,"line_start":738,"line_end":738,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175908,"byte_end":175911,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175916,"byte_end":175953,"line_start":740,"line_end":740,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":175958,"byte_end":176025,"line_start":741,"line_end":741,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176030,"byte_end":176033,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176038,"byte_end":176111,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176116,"byte_end":176125,"line_start":744,"line_end":744,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176130,"byte_end":176137,"line_start":745,"line_end":745,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177165,"byte_end":177169,"line_start":779,"line_end":779,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176356,"byte_end":176427,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176432,"byte_end":176462,"line_start":756,"line_end":756,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176467,"byte_end":176470,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176475,"byte_end":176550,"line_start":758,"line_end":758,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176555,"byte_end":176626,"line_start":759,"line_end":759,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176631,"byte_end":176671,"line_start":760,"line_end":760,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176676,"byte_end":176679,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176684,"byte_end":176698,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176703,"byte_end":176706,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176711,"byte_end":176718,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176723,"byte_end":176764,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176769,"byte_end":176793,"line_start":766,"line_end":766,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176798,"byte_end":176841,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176846,"byte_end":176849,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176854,"byte_end":176892,"line_start":769,"line_end":769,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176897,"byte_end":176900,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176905,"byte_end":176949,"line_start":771,"line_end":771,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176954,"byte_end":176974,"line_start":772,"line_end":772,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":176979,"byte_end":177042,"line_start":773,"line_end":773,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177047,"byte_end":177054,"line_start":774,"line_end":774,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177059,"byte_end":177062,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177067,"byte_end":177131,"line_start":776,"line_end":776,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177136,"byte_end":177145,"line_start":777,"line_end":777,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177150,"byte_end":177157,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178216,"byte_end":178226,"line_start":810,"line_end":810,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177438,"byte_end":177512,"line_start":788,"line_end":788,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177517,"byte_end":177540,"line_start":789,"line_end":789,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177545,"byte_end":177548,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177553,"byte_end":177626,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177631,"byte_end":177703,"line_start":792,"line_end":792,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177708,"byte_end":177785,"line_start":793,"line_end":793,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177790,"byte_end":177801,"line_start":794,"line_end":794,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177806,"byte_end":177809,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177814,"byte_end":177828,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177833,"byte_end":177836,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177841,"byte_end":177848,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177853,"byte_end":177894,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177899,"byte_end":177923,"line_start":800,"line_end":800,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177928,"byte_end":177971,"line_start":801,"line_end":801,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177976,"byte_end":177979,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":177984,"byte_end":178022,"line_start":803,"line_end":803,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178027,"byte_end":178030,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178035,"byte_end":178098,"line_start":805,"line_end":805,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178103,"byte_end":178106,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178111,"byte_end":178182,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178187,"byte_end":178196,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178201,"byte_end":178208,"line_start":809,"line_end":809,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179215,"byte_end":179225,"line_start":840,"line_end":840,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178460,"byte_end":178536,"line_start":819,"line_end":819,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178541,"byte_end":178564,"line_start":820,"line_end":820,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178569,"byte_end":178572,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178577,"byte_end":178652,"line_start":822,"line_end":822,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178657,"byte_end":178729,"line_start":823,"line_end":823,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178734,"byte_end":178801,"line_start":824,"line_end":824,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178806,"byte_end":178809,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178814,"byte_end":178828,"line_start":826,"line_end":826,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178833,"byte_end":178836,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178841,"byte_end":178848,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178853,"byte_end":178894,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178899,"byte_end":178923,"line_start":830,"line_end":830,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178928,"byte_end":178971,"line_start":831,"line_end":831,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178976,"byte_end":178979,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":178984,"byte_end":179022,"line_start":833,"line_end":833,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179027,"byte_end":179030,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179035,"byte_end":179098,"line_start":835,"line_end":835,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179103,"byte_end":179106,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179111,"byte_end":179181,"line_start":837,"line_end":837,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179186,"byte_end":179195,"line_start":838,"line_end":838,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179200,"byte_end":179207,"line_start":839,"line_end":839,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180741,"byte_end":180751,"line_start":885,"line_end":885,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179459,"byte_end":179529,"line_start":849,"line_end":849,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179534,"byte_end":179537,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179542,"byte_end":179613,"line_start":851,"line_end":851,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179618,"byte_end":179690,"line_start":852,"line_end":852,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179695,"byte_end":179765,"line_start":853,"line_end":853,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179770,"byte_end":179773,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179778,"byte_end":179849,"line_start":855,"line_end":855,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179854,"byte_end":179940,"line_start":856,"line_end":856,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":179945,"byte_end":180012,"line_start":857,"line_end":857,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180017,"byte_end":180081,"line_start":858,"line_end":858,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180086,"byte_end":180089,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180094,"byte_end":180108,"line_start":860,"line_end":860,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180113,"byte_end":180116,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180121,"byte_end":180128,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180133,"byte_end":180174,"line_start":863,"line_end":863,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180179,"byte_end":180203,"line_start":864,"line_end":864,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180208,"byte_end":180251,"line_start":865,"line_end":865,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180256,"byte_end":180284,"line_start":866,"line_end":866,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180289,"byte_end":180292,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180297,"byte_end":180335,"line_start":868,"line_end":868,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180340,"byte_end":180343,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180348,"byte_end":180366,"line_start":870,"line_end":870,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180371,"byte_end":180413,"line_start":871,"line_end":871,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180418,"byte_end":180433,"line_start":872,"line_end":872,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180438,"byte_end":180457,"line_start":873,"line_end":873,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180462,"byte_end":180487,"line_start":874,"line_end":874,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180492,"byte_end":180508,"line_start":875,"line_end":875,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180513,"byte_end":180540,"line_start":876,"line_end":876,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180545,"byte_end":180554,"line_start":877,"line_end":877,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180559,"byte_end":180566,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180571,"byte_end":180574,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180579,"byte_end":180624,"line_start":880,"line_end":880,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180629,"byte_end":180632,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180637,"byte_end":180707,"line_start":882,"line_end":882,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180712,"byte_end":180721,"line_start":883,"line_end":883,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180726,"byte_end":180733,"line_start":884,"line_end":884,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181990,"byte_end":181998,"line_start":926,"line_end":926,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":180932,"byte_end":181003,"line_start":893,"line_end":893,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181008,"byte_end":181051,"line_start":894,"line_end":894,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181056,"byte_end":181059,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181064,"byte_end":181139,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181144,"byte_end":181214,"line_start":897,"line_end":897,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181219,"byte_end":181257,"line_start":898,"line_end":898,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181262,"byte_end":181265,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181270,"byte_end":181345,"line_start":900,"line_end":900,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181350,"byte_end":181393,"line_start":901,"line_end":901,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181398,"byte_end":181401,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181406,"byte_end":181479,"line_start":903,"line_end":903,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181484,"byte_end":181527,"line_start":904,"line_end":904,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181532,"byte_end":181535,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181540,"byte_end":181554,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181559,"byte_end":181562,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181567,"byte_end":181574,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181579,"byte_end":181620,"line_start":909,"line_end":909,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181625,"byte_end":181649,"line_start":910,"line_end":910,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181654,"byte_end":181697,"line_start":911,"line_end":911,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181702,"byte_end":181705,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181710,"byte_end":181728,"line_start":913,"line_end":913,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181733,"byte_end":181736,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181741,"byte_end":181746,"line_start":915,"line_end":915,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181751,"byte_end":181812,"line_start":916,"line_end":916,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181817,"byte_end":181839,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181844,"byte_end":181873,"line_start":918,"line_end":918,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181878,"byte_end":181889,"line_start":919,"line_end":919,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181894,"byte_end":181912,"line_start":920,"line_end":920,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181917,"byte_end":181922,"line_start":921,"line_end":921,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181927,"byte_end":181930,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181935,"byte_end":181956,"line_start":923,"line_end":923,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181961,"byte_end":181970,"line_start":924,"line_end":924,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":181975,"byte_end":181982,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3724},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184160,"byte_end":184179,"line_start":982,"line_end":982,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182217,"byte_end":182288,"line_start":935,"line_end":935,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182293,"byte_end":182367,"line_start":936,"line_end":936,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182372,"byte_end":182386,"line_start":937,"line_end":937,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182391,"byte_end":182394,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182399,"byte_end":182462,"line_start":939,"line_end":939,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182467,"byte_end":182538,"line_start":940,"line_end":940,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182543,"byte_end":182595,"line_start":941,"line_end":941,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182600,"byte_end":182603,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182608,"byte_end":182683,"line_start":943,"line_end":943,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182688,"byte_end":182758,"line_start":944,"line_end":944,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182763,"byte_end":182827,"line_start":945,"line_end":945,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182832,"byte_end":182835,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182840,"byte_end":182911,"line_start":947,"line_end":947,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182916,"byte_end":182986,"line_start":948,"line_end":948,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":182991,"byte_end":183052,"line_start":949,"line_end":949,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183057,"byte_end":183124,"line_start":950,"line_end":950,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183129,"byte_end":183198,"line_start":951,"line_end":951,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183203,"byte_end":183275,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183280,"byte_end":183283,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183288,"byte_end":183363,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183368,"byte_end":183425,"line_start":955,"line_end":955,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183430,"byte_end":183433,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183438,"byte_end":183452,"line_start":957,"line_end":957,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183457,"byte_end":183460,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183465,"byte_end":183472,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183477,"byte_end":183518,"line_start":960,"line_end":960,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183523,"byte_end":183557,"line_start":961,"line_end":961,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183562,"byte_end":183605,"line_start":962,"line_end":962,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183610,"byte_end":183613,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183618,"byte_end":183658,"line_start":964,"line_end":964,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183663,"byte_end":183703,"line_start":965,"line_end":965,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183708,"byte_end":183748,"line_start":966,"line_end":966,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183753,"byte_end":183756,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183761,"byte_end":183829,"line_start":968,"line_end":968,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183834,"byte_end":183856,"line_start":969,"line_end":969,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183861,"byte_end":183886,"line_start":970,"line_end":970,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183891,"byte_end":183921,"line_start":971,"line_end":971,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183926,"byte_end":183935,"line_start":972,"line_end":972,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183940,"byte_end":183946,"line_start":973,"line_end":973,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183951,"byte_end":183977,"line_start":974,"line_end":974,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":183982,"byte_end":184008,"line_start":975,"line_end":975,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184013,"byte_end":184039,"line_start":976,"line_end":976,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184044,"byte_end":184058,"line_start":977,"line_end":977,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184063,"byte_end":184071,"line_start":978,"line_end":978,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184076,"byte_end":184083,"line_start":979,"line_end":979,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184088,"byte_end":184122,"line_start":980,"line_end":980,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184127,"byte_end":184152,"line_start":981,"line_end":981,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3728},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185004,"byte_end":185008,"line_start":1011,"line_end":1011,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184496,"byte_end":184567,"line_start":995,"line_end":995,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184572,"byte_end":184575,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184580,"byte_end":184653,"line_start":997,"line_end":997,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184658,"byte_end":184693,"line_start":998,"line_end":998,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184698,"byte_end":184701,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184706,"byte_end":184720,"line_start":1000,"line_end":1000,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184725,"byte_end":184728,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184733,"byte_end":184740,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184745,"byte_end":184786,"line_start":1003,"line_end":1003,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184791,"byte_end":184834,"line_start":1004,"line_end":1004,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184839,"byte_end":184842,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184847,"byte_end":184893,"line_start":1006,"line_end":1006,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184898,"byte_end":184901,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184906,"byte_end":184970,"line_start":1008,"line_end":1008,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184975,"byte_end":184984,"line_start":1009,"line_end":1009,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":184989,"byte_end":184996,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185673,"byte_end":185677,"line_start":1034,"line_end":1034,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185146,"byte_end":185218,"line_start":1018,"line_end":1018,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185223,"byte_end":185226,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185231,"byte_end":185304,"line_start":1020,"line_end":1020,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185309,"byte_end":185355,"line_start":1021,"line_end":1021,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185360,"byte_end":185363,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185368,"byte_end":185382,"line_start":1023,"line_end":1023,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185387,"byte_end":185390,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185395,"byte_end":185402,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185407,"byte_end":185448,"line_start":1026,"line_end":1026,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185453,"byte_end":185496,"line_start":1027,"line_end":1027,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185501,"byte_end":185504,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185509,"byte_end":185555,"line_start":1029,"line_end":1029,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185560,"byte_end":185563,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185568,"byte_end":185639,"line_start":1031,"line_end":1031,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185644,"byte_end":185653,"line_start":1032,"line_end":1032,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185658,"byte_end":185665,"line_start":1033,"line_end":1033,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187298,"byte_end":187302,"line_start":1080,"line_end":1080,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185815,"byte_end":185886,"line_start":1041,"line_end":1041,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185891,"byte_end":185964,"line_start":1042,"line_end":1042,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":185969,"byte_end":186007,"line_start":1043,"line_end":1043,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186012,"byte_end":186015,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186020,"byte_end":186074,"line_start":1045,"line_end":1045,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186079,"byte_end":186151,"line_start":1046,"line_end":1046,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186156,"byte_end":186232,"line_start":1047,"line_end":1047,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186237,"byte_end":186305,"line_start":1048,"line_end":1048,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186310,"byte_end":186386,"line_start":1049,"line_end":1049,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186391,"byte_end":186413,"line_start":1050,"line_end":1050,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186418,"byte_end":186421,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186426,"byte_end":186493,"line_start":1052,"line_end":1052,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186498,"byte_end":186566,"line_start":1053,"line_end":1053,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186571,"byte_end":186584,"line_start":1054,"line_end":1054,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186589,"byte_end":186592,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186597,"byte_end":186611,"line_start":1056,"line_end":1056,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186616,"byte_end":186619,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186624,"byte_end":186631,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186636,"byte_end":186679,"line_start":1059,"line_end":1059,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186684,"byte_end":186727,"line_start":1060,"line_end":1060,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186732,"byte_end":186760,"line_start":1061,"line_end":1061,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186765,"byte_end":186768,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186773,"byte_end":186791,"line_start":1063,"line_end":1063,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186796,"byte_end":186834,"line_start":1064,"line_end":1064,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186839,"byte_end":186854,"line_start":1065,"line_end":1065,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186859,"byte_end":186876,"line_start":1066,"line_end":1066,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186881,"byte_end":186923,"line_start":1067,"line_end":1067,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186928,"byte_end":186963,"line_start":1068,"line_end":1068,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":186968,"byte_end":187012,"line_start":1069,"line_end":1069,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187017,"byte_end":187026,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187031,"byte_end":187045,"line_start":1071,"line_end":1071,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187050,"byte_end":187053,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187058,"byte_end":187101,"line_start":1073,"line_end":1073,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187106,"byte_end":187143,"line_start":1074,"line_end":1074,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187148,"byte_end":187185,"line_start":1075,"line_end":1075,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187190,"byte_end":187224,"line_start":1076,"line_end":1076,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187229,"byte_end":187263,"line_start":1077,"line_end":1077,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187268,"byte_end":187278,"line_start":1078,"line_end":1078,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187283,"byte_end":187290,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3731},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188231,"byte_end":188237,"line_start":1113,"line_end":1113,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187427,"byte_end":187474,"line_start":1087,"line_end":1087,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187479,"byte_end":187482,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187487,"byte_end":187561,"line_start":1089,"line_end":1089,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187566,"byte_end":187603,"line_start":1090,"line_end":1090,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187608,"byte_end":187611,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187616,"byte_end":187630,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187635,"byte_end":187638,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187643,"byte_end":187650,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187655,"byte_end":187696,"line_start":1095,"line_end":1095,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187701,"byte_end":187744,"line_start":1096,"line_end":1096,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187749,"byte_end":187752,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187757,"byte_end":187797,"line_start":1098,"line_end":1098,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187802,"byte_end":187805,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187810,"byte_end":187839,"line_start":1100,"line_end":1100,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187844,"byte_end":187872,"line_start":1101,"line_end":1101,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187877,"byte_end":187934,"line_start":1102,"line_end":1102,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187939,"byte_end":187966,"line_start":1103,"line_end":1103,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187971,"byte_end":187994,"line_start":1104,"line_end":1104,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":187999,"byte_end":188002,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188007,"byte_end":188042,"line_start":1106,"line_end":1106,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188047,"byte_end":188075,"line_start":1107,"line_end":1107,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188080,"byte_end":188137,"line_start":1108,"line_end":1108,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188142,"byte_end":188169,"line_start":1109,"line_end":1109,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188174,"byte_end":188197,"line_start":1110,"line_end":1110,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188202,"byte_end":188211,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188216,"byte_end":188223,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189996,"byte_end":190008,"line_start":1158,"line_end":1158,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188288,"byte_end":188342,"line_start":1117,"line_end":1117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188347,"byte_end":188350,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188355,"byte_end":188430,"line_start":1119,"line_end":1119,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188435,"byte_end":188438,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188443,"byte_end":188518,"line_start":1121,"line_end":1121,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188523,"byte_end":188597,"line_start":1122,"line_end":1122,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188602,"byte_end":188676,"line_start":1123,"line_end":1123,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188681,"byte_end":188730,"line_start":1124,"line_end":1124,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188735,"byte_end":188738,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188743,"byte_end":188818,"line_start":1126,"line_end":1126,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188823,"byte_end":188893,"line_start":1127,"line_end":1127,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188898,"byte_end":188965,"line_start":1128,"line_end":1128,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":188970,"byte_end":189042,"line_start":1129,"line_end":1129,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189047,"byte_end":189116,"line_start":1130,"line_end":1130,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189121,"byte_end":189136,"line_start":1131,"line_end":1131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189141,"byte_end":189144,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189149,"byte_end":189213,"line_start":1133,"line_end":1133,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189218,"byte_end":189275,"line_start":1134,"line_end":1134,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189280,"byte_end":189283,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189288,"byte_end":189302,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189307,"byte_end":189310,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189315,"byte_end":189322,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189327,"byte_end":189368,"line_start":1139,"line_end":1139,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189373,"byte_end":189416,"line_start":1140,"line_end":1140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189421,"byte_end":189424,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189429,"byte_end":189491,"line_start":1142,"line_end":1142,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189496,"byte_end":189526,"line_start":1143,"line_end":1143,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189531,"byte_end":189585,"line_start":1144,"line_end":1144,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189590,"byte_end":189620,"line_start":1145,"line_end":1145,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189625,"byte_end":189674,"line_start":1146,"line_end":1146,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189679,"byte_end":189682,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189687,"byte_end":189749,"line_start":1148,"line_end":1148,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189754,"byte_end":189776,"line_start":1149,"line_end":1149,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189781,"byte_end":189801,"line_start":1150,"line_end":1150,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189806,"byte_end":189848,"line_start":1151,"line_end":1151,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189853,"byte_end":189858,"line_start":1152,"line_end":1152,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189863,"byte_end":189896,"line_start":1153,"line_end":1153,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189901,"byte_end":189934,"line_start":1154,"line_end":1154,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189939,"byte_end":189948,"line_start":1155,"line_end":1155,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189953,"byte_end":189960,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":189965,"byte_end":189988,"line_start":1157,"line_end":1157,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3733},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190384,"byte_end":190389,"line_start":1170,"line_end":1170,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190155,"byte_end":190196,"line_start":1165,"line_end":1165,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190201,"byte_end":190204,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190209,"byte_end":190284,"line_start":1167,"line_end":1167,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190289,"byte_end":190346,"line_start":1168,"line_end":1168,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190351,"byte_end":190376,"line_start":1169,"line_end":1169,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190845,"byte_end":190856,"line_start":1184,"line_end":1184,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190544,"byte_end":190585,"line_start":1177,"line_end":1177,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190590,"byte_end":190593,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190598,"byte_end":190657,"line_start":1179,"line_end":1179,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190662,"byte_end":190665,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190670,"byte_end":190745,"line_start":1181,"line_end":1181,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190750,"byte_end":190807,"line_start":1182,"line_end":1182,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":190812,"byte_end":190837,"line_start":1183,"line_end":1183,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3737},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191749,"byte_end":191757,"line_start":1205,"line_end":1205,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191009,"byte_end":191072,"line_start":1191,"line_end":1191,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191077,"byte_end":191080,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191085,"byte_end":191160,"line_start":1193,"line_end":1193,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191165,"byte_end":191241,"line_start":1194,"line_end":1194,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191246,"byte_end":191319,"line_start":1195,"line_end":1195,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191324,"byte_end":191397,"line_start":1196,"line_end":1196,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191402,"byte_end":191444,"line_start":1197,"line_end":1197,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191449,"byte_end":191452,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191457,"byte_end":191522,"line_start":1199,"line_end":1199,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191527,"byte_end":191530,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191535,"byte_end":191610,"line_start":1201,"line_end":1201,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191615,"byte_end":191672,"line_start":1202,"line_end":1202,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191677,"byte_end":191711,"line_start":1203,"line_end":1203,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191716,"byte_end":191741,"line_start":1204,"line_end":1204,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193437,"byte_end":193453,"line_start":1250,"line_end":1250,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":191951,"byte_end":192026,"line_start":1213,"line_end":1213,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192031,"byte_end":192034,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192039,"byte_end":192114,"line_start":1215,"line_end":1215,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192119,"byte_end":192193,"line_start":1216,"line_end":1216,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192198,"byte_end":192270,"line_start":1217,"line_end":1217,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192275,"byte_end":192349,"line_start":1218,"line_end":1218,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192354,"byte_end":192383,"line_start":1219,"line_end":1219,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192388,"byte_end":192391,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192396,"byte_end":192461,"line_start":1221,"line_end":1221,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192466,"byte_end":192469,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192474,"byte_end":192549,"line_start":1223,"line_end":1223,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192554,"byte_end":192611,"line_start":1224,"line_end":1224,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192616,"byte_end":192619,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192624,"byte_end":192638,"line_start":1226,"line_end":1226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192643,"byte_end":192646,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192651,"byte_end":192658,"line_start":1228,"line_end":1228,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192663,"byte_end":192704,"line_start":1229,"line_end":1229,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192709,"byte_end":192743,"line_start":1230,"line_end":1230,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192748,"byte_end":192791,"line_start":1231,"line_end":1231,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192796,"byte_end":192799,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192804,"byte_end":192854,"line_start":1233,"line_end":1233,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192859,"byte_end":192909,"line_start":1234,"line_end":1234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192914,"byte_end":192917,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192922,"byte_end":192989,"line_start":1236,"line_end":1236,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":192994,"byte_end":193056,"line_start":1237,"line_end":1237,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193061,"byte_end":193064,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193069,"byte_end":193094,"line_start":1239,"line_end":1239,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193099,"byte_end":193153,"line_start":1240,"line_end":1240,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193158,"byte_end":193161,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193166,"byte_end":193191,"line_start":1242,"line_end":1242,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193196,"byte_end":193250,"line_start":1243,"line_end":1243,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193255,"byte_end":193258,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193263,"byte_end":193307,"line_start":1245,"line_end":1245,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193312,"byte_end":193348,"line_start":1246,"line_end":1246,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193353,"byte_end":193360,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193365,"byte_end":193399,"line_start":1248,"line_end":1248,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193404,"byte_end":193429,"line_start":1249,"line_end":1249,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3739},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194349,"byte_end":194352,"line_start":1280,"line_end":1280,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193661,"byte_end":193709,"line_start":1258,"line_end":1258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193714,"byte_end":193717,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193722,"byte_end":193795,"line_start":1260,"line_end":1260,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193800,"byte_end":193872,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193877,"byte_end":193890,"line_start":1262,"line_end":1262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193895,"byte_end":193898,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193903,"byte_end":193917,"line_start":1264,"line_end":1264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193922,"byte_end":193925,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193930,"byte_end":193937,"line_start":1266,"line_end":1266,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193942,"byte_end":193983,"line_start":1267,"line_end":1267,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":193988,"byte_end":194031,"line_start":1268,"line_end":1268,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194036,"byte_end":194039,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194044,"byte_end":194082,"line_start":1270,"line_end":1270,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194087,"byte_end":194126,"line_start":1271,"line_end":1271,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194131,"byte_end":194134,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194139,"byte_end":194173,"line_start":1273,"line_end":1273,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194178,"byte_end":194219,"line_start":1274,"line_end":1274,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194224,"byte_end":194252,"line_start":1275,"line_end":1275,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194257,"byte_end":194307,"line_start":1276,"line_end":1276,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194312,"byte_end":194321,"line_start":1277,"line_end":1277,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194326,"byte_end":194333,"line_start":1278,"line_end":1278,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194338,"byte_end":194341,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195260,"byte_end":195265,"line_start":1311,"line_end":1311,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194533,"byte_end":194570,"line_start":1288,"line_end":1288,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194575,"byte_end":194578,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194583,"byte_end":194654,"line_start":1290,"line_end":1290,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194659,"byte_end":194735,"line_start":1291,"line_end":1291,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194740,"byte_end":194743,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194748,"byte_end":194755,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194760,"byte_end":194801,"line_start":1294,"line_end":1294,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194806,"byte_end":194849,"line_start":1295,"line_end":1295,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194854,"byte_end":194857,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194862,"byte_end":194919,"line_start":1297,"line_end":1297,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194924,"byte_end":194980,"line_start":1298,"line_end":1298,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194985,"byte_end":194988,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":194993,"byte_end":195033,"line_start":1300,"line_end":1300,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195038,"byte_end":195041,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195046,"byte_end":195094,"line_start":1302,"line_end":1302,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195099,"byte_end":195127,"line_start":1303,"line_end":1303,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195132,"byte_end":195147,"line_start":1304,"line_end":1304,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195152,"byte_end":195171,"line_start":1305,"line_end":1305,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195176,"byte_end":195194,"line_start":1306,"line_end":1306,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195199,"byte_end":195214,"line_start":1307,"line_end":1307,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195219,"byte_end":195226,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195231,"byte_end":195240,"line_start":1309,"line_end":1309,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195245,"byte_end":195252,"line_start":1310,"line_end":1310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195603,"byte_end":195611,"line_start":1322,"line_end":1322,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195457,"byte_end":195512,"line_start":1319,"line_end":1319,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195517,"byte_end":195520,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195525,"byte_end":195595,"line_start":1321,"line_end":1321,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196646,"byte_end":196652,"line_start":1348,"line_end":1348,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195744,"byte_end":195811,"line_start":1329,"line_end":1329,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195816,"byte_end":195819,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195824,"byte_end":195898,"line_start":1331,"line_end":1331,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195903,"byte_end":195975,"line_start":1332,"line_end":1332,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":195980,"byte_end":196032,"line_start":1333,"line_end":1333,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196037,"byte_end":196040,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196045,"byte_end":196118,"line_start":1335,"line_end":1335,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196123,"byte_end":196197,"line_start":1336,"line_end":1336,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196202,"byte_end":196277,"line_start":1337,"line_end":1337,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196282,"byte_end":196354,"line_start":1338,"line_end":1338,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196359,"byte_end":196371,"line_start":1339,"line_end":1339,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196376,"byte_end":196379,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196384,"byte_end":196459,"line_start":1341,"line_end":1341,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196464,"byte_end":196521,"line_start":1342,"line_end":1342,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196526,"byte_end":196529,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196534,"byte_end":196546,"line_start":1344,"line_end":1344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196551,"byte_end":196554,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196559,"byte_end":196608,"line_start":1346,"line_end":1346,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196613,"byte_end":196638,"line_start":1347,"line_end":1347,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197749,"byte_end":197761,"line_start":1374,"line_end":1374,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196813,"byte_end":196886,"line_start":1355,"line_end":1355,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196891,"byte_end":196894,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196899,"byte_end":196972,"line_start":1357,"line_end":1357,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":196977,"byte_end":197047,"line_start":1358,"line_end":1358,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197052,"byte_end":197127,"line_start":1359,"line_end":1359,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197132,"byte_end":197209,"line_start":1360,"line_end":1360,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197214,"byte_end":197242,"line_start":1361,"line_end":1361,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197247,"byte_end":197250,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197255,"byte_end":197328,"line_start":1363,"line_end":1363,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197333,"byte_end":197408,"line_start":1364,"line_end":1364,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197413,"byte_end":197474,"line_start":1365,"line_end":1365,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197479,"byte_end":197482,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197487,"byte_end":197562,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197567,"byte_end":197624,"line_start":1368,"line_end":1368,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197629,"byte_end":197632,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197637,"byte_end":197649,"line_start":1370,"line_end":1370,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197654,"byte_end":197657,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197662,"byte_end":197711,"line_start":1372,"line_end":1372,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":197716,"byte_end":197741,"line_start":1373,"line_end":1373,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200558,"byte_end":200565,"line_start":1434,"line_end":1434,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200255,"byte_end":200328,"line_start":1429,"line_end":1429,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200333,"byte_end":200336,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200341,"byte_end":200410,"line_start":1431,"line_end":1431,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200415,"byte_end":200484,"line_start":1432,"line_end":1432,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200489,"byte_end":200550,"line_start":1433,"line_end":1433,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201021,"byte_end":201032,"line_start":1447,"line_end":1447,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200742,"byte_end":200817,"line_start":1442,"line_end":1442,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200822,"byte_end":200843,"line_start":1443,"line_end":1443,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200848,"byte_end":200851,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200856,"byte_end":200936,"line_start":1445,"line_end":1445,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":200941,"byte_end":201013,"line_start":1446,"line_end":1446,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201485,"byte_end":201497,"line_start":1460,"line_end":1460,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201206,"byte_end":201282,"line_start":1455,"line_end":1455,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201287,"byte_end":201308,"line_start":1456,"line_end":1456,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201313,"byte_end":201316,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201321,"byte_end":201400,"line_start":1458,"line_end":1458,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201405,"byte_end":201477,"line_start":1459,"line_end":1459,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3752},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201773,"byte_end":201788,"line_start":1470,"line_end":1470,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201672,"byte_end":201743,"line_start":1468,"line_end":1468,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201748,"byte_end":201765,"line_start":1469,"line_end":1469,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203889,"byte_end":203905,"line_start":1525,"line_end":1525,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":201935,"byte_end":202010,"line_start":1477,"line_end":1477,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202015,"byte_end":202025,"line_start":1478,"line_end":1478,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202030,"byte_end":202033,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202038,"byte_end":202111,"line_start":1480,"line_end":1480,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202116,"byte_end":202184,"line_start":1481,"line_end":1481,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202189,"byte_end":202237,"line_start":1482,"line_end":1482,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202242,"byte_end":202317,"line_start":1483,"line_end":1483,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202322,"byte_end":202398,"line_start":1484,"line_end":1484,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202403,"byte_end":202429,"line_start":1485,"line_end":1485,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202434,"byte_end":202437,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202442,"byte_end":202515,"line_start":1487,"line_end":1487,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202520,"byte_end":202590,"line_start":1488,"line_end":1488,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202595,"byte_end":202635,"line_start":1489,"line_end":1489,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202640,"byte_end":202643,"line_start":1490,"line_end":1490,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202648,"byte_end":202702,"line_start":1491,"line_end":1491,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202707,"byte_end":202791,"line_start":1492,"line_end":1492,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202796,"byte_end":202799,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202804,"byte_end":202818,"line_start":1494,"line_end":1494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202823,"byte_end":202826,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202831,"byte_end":202838,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202843,"byte_end":202884,"line_start":1497,"line_end":1497,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202889,"byte_end":202923,"line_start":1498,"line_end":1498,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202928,"byte_end":202983,"line_start":1499,"line_end":1499,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202988,"byte_end":202991,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":202996,"byte_end":203031,"line_start":1501,"line_end":1501,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203036,"byte_end":203086,"line_start":1502,"line_end":1502,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203091,"byte_end":203113,"line_start":1503,"line_end":1503,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203118,"byte_end":203128,"line_start":1504,"line_end":1504,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203133,"byte_end":203150,"line_start":1505,"line_end":1505,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203155,"byte_end":203181,"line_start":1506,"line_end":1506,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203186,"byte_end":203241,"line_start":1507,"line_end":1507,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203246,"byte_end":203275,"line_start":1508,"line_end":1508,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203280,"byte_end":203343,"line_start":1509,"line_end":1509,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203348,"byte_end":203394,"line_start":1510,"line_end":1510,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203399,"byte_end":203413,"line_start":1511,"line_end":1511,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203418,"byte_end":203487,"line_start":1512,"line_end":1512,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203492,"byte_end":203517,"line_start":1513,"line_end":1513,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203522,"byte_end":203575,"line_start":1514,"line_end":1514,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203580,"byte_end":203609,"line_start":1515,"line_end":1515,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203614,"byte_end":203627,"line_start":1516,"line_end":1516,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203632,"byte_end":203702,"line_start":1517,"line_end":1517,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203707,"byte_end":203766,"line_start":1518,"line_end":1518,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203771,"byte_end":203801,"line_start":1519,"line_end":1519,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203806,"byte_end":203815,"line_start":1520,"line_end":1520,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203820,"byte_end":203825,"line_start":1521,"line_end":1521,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203830,"byte_end":203855,"line_start":1522,"line_end":1522,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203860,"byte_end":203869,"line_start":1523,"line_end":1523,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":203874,"byte_end":203881,"line_start":1524,"line_end":1524,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13026},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/and_then.rs","byte_start":337380,"byte_end":337387,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":13030},{"krate":0,"index":13031},{"krate":0,"index":13032}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13090},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":299389,"byte_end":299396,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":13093}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13159},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":299644,"byte_end":299653,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":13162}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13228},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":299954,"byte_end":299964,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":13231}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13299},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_stream.rs","byte_start":340129,"byte_end":340139,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":13301}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13337},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":300390,"byte_end":300395,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":13340}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13406},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":300672,"byte_end":300678,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":13409}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13472},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/or_else.rs","byte_start":341487,"byte_end":341493,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":13476},{"krate":0,"index":13477},{"krate":0,"index":13478}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13533},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344329,"byte_end":344336,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":13536}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344162,"byte_end":344232,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344250,"byte_end":344317,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13541},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each.rs","byte_start":345421,"byte_end":345431,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":13545},{"krate":0,"index":13546},{"krate":0,"index":13547}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13598},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter.rs","byte_start":347317,"byte_end":347326,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":13602},{"krate":0,"index":13603},{"krate":0,"index":13604},{"krate":0,"index":13605}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13663},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter_map.rs","byte_start":350461,"byte_end":350473,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":13667},{"krate":0,"index":13668},{"krate":0,"index":13669}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13729},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_flatten.rs","byte_start":353478,"byte_end":353488,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":13731},{"krate":0,"index":13732}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13775},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_collect.rs","byte_start":355666,"byte_end":355676,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":13778},{"krate":0,"index":13779}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13822},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_concat.rs","byte_start":357025,"byte_end":357034,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":13824},{"krate":0,"index":13825}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13862},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":358545,"byte_end":358554,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":13864},{"krate":0,"index":13865},{"krate":0,"index":13866}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13905},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":361806,"byte_end":361820,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":361583,"byte_end":361667,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":361668,"byte_end":361671,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":361672,"byte_end":361769,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":13909},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":361827,"byte_end":361837,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":13905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13910},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":361839,"byte_end":361844,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":13905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13926},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_fold.rs","byte_start":362682,"byte_end":362689,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":13931},{"krate":0,"index":13932},{"krate":0,"index":13933},{"krate":0,"index":13934}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4594},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":367137,"byte_end":367147,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365280,"byte_end":365356,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365357,"byte_end":365360,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365361,"byte_end":365437,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365438,"byte_end":365508,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365509,"byte_end":365568,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365569,"byte_end":365572,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365573,"byte_end":365651,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365652,"byte_end":365729,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365730,"byte_end":365794,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365795,"byte_end":365798,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365799,"byte_end":365871,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365872,"byte_end":365950,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365951,"byte_end":365980,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365981,"byte_end":365984,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":365985,"byte_end":366062,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366063,"byte_end":366127,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366128,"byte_end":366180,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366181,"byte_end":366184,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366185,"byte_end":366262,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366263,"byte_end":366335,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366336,"byte_end":366405,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366406,"byte_end":366484,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366485,"byte_end":366488,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366489,"byte_end":366502,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366503,"byte_end":366506,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366507,"byte_end":366514,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366515,"byte_end":366548,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366549,"byte_end":366572,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366573,"byte_end":366614,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366615,"byte_end":366661,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366662,"byte_end":366665,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366666,"byte_end":366725,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366726,"byte_end":366748,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366749,"byte_end":366783,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366784,"byte_end":366793,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366794,"byte_end":366797,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366798,"byte_end":366821,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366822,"byte_end":366861,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366862,"byte_end":366898,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366899,"byte_end":366942,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366943,"byte_end":366959,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366960,"byte_end":366980,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366981,"byte_end":366990,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366991,"byte_end":366998,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":366999,"byte_end":367002,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":367003,"byte_end":367068,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":367069,"byte_end":367111,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":367112,"byte_end":367121,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":367122,"byte_end":367129,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":13995},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":367510,"byte_end":367519,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":13999},{"krate":0,"index":14000},{"krate":0,"index":14001}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14052},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_skip_while.rs","byte_start":369427,"byte_end":369439,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":14056},{"krate":0,"index":14057},{"krate":0,"index":14058},{"krate":0,"index":14059},{"krate":0,"index":14060}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14121},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_take_while.rs","byte_start":372983,"byte_end":372995,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":14125},{"krate":0,"index":14126},{"krate":0,"index":14127},{"krate":0,"index":14128},{"krate":0,"index":14129}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14195},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_buffer_unordered.rs","byte_start":376771,"byte_end":376789,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14197},{"krate":0,"index":14198},{"krate":0,"index":14199}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14243},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_buffered.rs","byte_start":379329,"byte_end":379340,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":14245},{"krate":0,"index":14246},{"krate":0,"index":14247}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14286},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":381872,"byte_end":381892,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14290},{"krate":0,"index":14291},{"krate":0,"index":14292},{"krate":0,"index":14293}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14347},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":386154,"byte_end":386167,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":14349},{"krate":0,"index":14350}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":385946,"byte_end":386030,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":386048,"byte_end":386096,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":4969},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":303887,"byte_end":303899,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":4970},{"krate":0,"index":4972},{"krate":0,"index":4975},{"krate":0,"index":4978},{"krate":0,"index":4981},{"krate":0,"index":4984},{"krate":0,"index":4986},{"krate":0,"index":4988},{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4993},{"krate":0,"index":4996},{"krate":0,"index":4999},{"krate":0,"index":5003},{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5009},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5022}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":303825,"byte_end":303876,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4970},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304441,"byte_end":304449,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":303917,"byte_end":303991,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":303996,"byte_end":304022,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304027,"byte_end":304030,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304035,"byte_end":304049,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304054,"byte_end":304057,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304062,"byte_end":304069,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304074,"byte_end":304115,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304120,"byte_end":304166,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304171,"byte_end":304174,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304179,"byte_end":304199,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304204,"byte_end":304249,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304254,"byte_end":304285,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304290,"byte_end":304293,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304298,"byte_end":304352,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304357,"byte_end":304408,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304413,"byte_end":304421,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304426,"byte_end":304433,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4972},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305145,"byte_end":305151,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304625,"byte_end":304698,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304703,"byte_end":304734,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304739,"byte_end":304742,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304747,"byte_end":304761,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304766,"byte_end":304769,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304774,"byte_end":304781,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304786,"byte_end":304827,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304832,"byte_end":304878,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304883,"byte_end":304886,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304891,"byte_end":304911,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304916,"byte_end":304957,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304962,"byte_end":304993,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":304998,"byte_end":305001,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305006,"byte_end":305059,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305064,"byte_end":305112,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305117,"byte_end":305125,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305130,"byte_end":305137,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4975},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305860,"byte_end":305867,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305341,"byte_end":305412,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305417,"byte_end":305448,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305453,"byte_end":305456,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305461,"byte_end":305475,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305480,"byte_end":305483,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305488,"byte_end":305495,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305500,"byte_end":305541,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305546,"byte_end":305592,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305597,"byte_end":305600,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305605,"byte_end":305625,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305630,"byte_end":305671,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305676,"byte_end":305708,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305713,"byte_end":305716,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305721,"byte_end":305774,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305779,"byte_end":305827,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305832,"byte_end":305840,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":305845,"byte_end":305852,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4978},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307472,"byte_end":307480,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306059,"byte_end":306135,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306140,"byte_end":306180,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306185,"byte_end":306188,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306193,"byte_end":306269,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306274,"byte_end":306350,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306355,"byte_end":306428,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306433,"byte_end":306475,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306480,"byte_end":306483,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306488,"byte_end":306561,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306566,"byte_end":306597,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306602,"byte_end":306605,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306610,"byte_end":306684,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306689,"byte_end":306763,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306768,"byte_end":306784,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306789,"byte_end":306792,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306797,"byte_end":306868,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306873,"byte_end":306899,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306904,"byte_end":306907,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306912,"byte_end":306984,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":306989,"byte_end":307038,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307043,"byte_end":307046,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307051,"byte_end":307065,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307070,"byte_end":307073,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307078,"byte_end":307085,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307090,"byte_end":307121,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307126,"byte_end":307150,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307155,"byte_end":307193,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307198,"byte_end":307201,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307206,"byte_end":307262,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307267,"byte_end":307270,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307275,"byte_end":307310,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307315,"byte_end":307354,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307359,"byte_end":307383,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307388,"byte_end":307404,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307409,"byte_end":307425,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307430,"byte_end":307440,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307445,"byte_end":307452,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307457,"byte_end":307464,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4981},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308632,"byte_end":308639,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307733,"byte_end":307798,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307803,"byte_end":307852,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307857,"byte_end":307860,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307865,"byte_end":307944,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":307949,"byte_end":308023,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308028,"byte_end":308104,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308109,"byte_end":308154,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308159,"byte_end":308162,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308167,"byte_end":308242,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308247,"byte_end":308287,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308292,"byte_end":308295,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308300,"byte_end":308409,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308414,"byte_end":308488,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308493,"byte_end":308509,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308514,"byte_end":308517,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308522,"byte_end":308593,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308598,"byte_end":308624,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4984},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309191,"byte_end":309201,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308888,"byte_end":308962,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308967,"byte_end":308977,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308982,"byte_end":308985,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":308990,"byte_end":309060,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309065,"byte_end":309141,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309146,"byte_end":309183,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4986},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309690,"byte_end":309701,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309399,"byte_end":309478,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309483,"byte_end":309486,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309491,"byte_end":309561,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309566,"byte_end":309640,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309645,"byte_end":309682,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4988},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310622,"byte_end":310633,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309904,"byte_end":309957,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":309962,"byte_end":310006,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310011,"byte_end":310014,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310019,"byte_end":310068,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310073,"byte_end":310146,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310151,"byte_end":310171,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310176,"byte_end":310179,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310184,"byte_end":310198,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310203,"byte_end":310206,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310211,"byte_end":310218,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310223,"byte_end":310282,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310287,"byte_end":310290,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310295,"byte_end":310314,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310319,"byte_end":310337,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310342,"byte_end":310414,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310419,"byte_end":310449,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310454,"byte_end":310461,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310466,"byte_end":310540,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310545,"byte_end":310548,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310553,"byte_end":310602,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310607,"byte_end":310614,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4989},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311528,"byte_end":311536,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310789,"byte_end":310863,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310868,"byte_end":310942,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310947,"byte_end":310959,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310964,"byte_end":310967,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":310972,"byte_end":311039,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311044,"byte_end":311116,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311121,"byte_end":311160,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311165,"byte_end":311168,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311173,"byte_end":311187,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311192,"byte_end":311195,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311200,"byte_end":311207,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311212,"byte_end":311253,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311258,"byte_end":311304,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311309,"byte_end":311312,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311317,"byte_end":311374,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311379,"byte_end":311382,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311387,"byte_end":311441,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311446,"byte_end":311495,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311500,"byte_end":311508,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311513,"byte_end":311520,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4990},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312888,"byte_end":312900,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311703,"byte_end":311772,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311777,"byte_end":311833,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311838,"byte_end":311841,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311846,"byte_end":311921,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":311926,"byte_end":311996,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312001,"byte_end":312039,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312044,"byte_end":312047,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312052,"byte_end":312130,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312135,"byte_end":312195,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312200,"byte_end":312257,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312262,"byte_end":312329,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312334,"byte_end":312364,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312369,"byte_end":312372,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312377,"byte_end":312391,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312396,"byte_end":312399,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312404,"byte_end":312411,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312416,"byte_end":312457,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312462,"byte_end":312486,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312491,"byte_end":312537,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312542,"byte_end":312545,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312550,"byte_end":312571,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312576,"byte_end":312579,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312584,"byte_end":312589,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312594,"byte_end":312655,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312660,"byte_end":312682,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312687,"byte_end":312751,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312756,"byte_end":312767,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312772,"byte_end":312811,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312816,"byte_end":312821,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312826,"byte_end":312829,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312834,"byte_end":312855,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312860,"byte_end":312868,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":312873,"byte_end":312880,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4993},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313913,"byte_end":313927,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313164,"byte_end":313238,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313243,"byte_end":313266,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313271,"byte_end":313274,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313279,"byte_end":313310,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313315,"byte_end":313392,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313397,"byte_end":313426,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313431,"byte_end":313434,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313439,"byte_end":313453,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313458,"byte_end":313461,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313466,"byte_end":313473,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313478,"byte_end":313519,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313524,"byte_end":313548,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313553,"byte_end":313599,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313604,"byte_end":313607,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313612,"byte_end":313681,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313686,"byte_end":313756,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313761,"byte_end":313764,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313769,"byte_end":313836,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313841,"byte_end":313880,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313885,"byte_end":313893,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":313898,"byte_end":313905,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4996},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314960,"byte_end":314974,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314204,"byte_end":314278,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314283,"byte_end":314306,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314311,"byte_end":314314,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314319,"byte_end":314350,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314355,"byte_end":314432,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314437,"byte_end":314466,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314471,"byte_end":314474,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314479,"byte_end":314493,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314498,"byte_end":314501,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314506,"byte_end":314513,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314518,"byte_end":314559,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314564,"byte_end":314588,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314593,"byte_end":314639,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314644,"byte_end":314647,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314652,"byte_end":314728,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314733,"byte_end":314803,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314808,"byte_end":314811,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314816,"byte_end":314883,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314888,"byte_end":314927,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314932,"byte_end":314940,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":314945,"byte_end":314952,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4999},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316889,"byte_end":316912,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315251,"byte_end":315333,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315338,"byte_end":315412,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315417,"byte_end":315467,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315472,"byte_end":315475,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315480,"byte_end":315502,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315507,"byte_end":315593,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315598,"byte_end":315683,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315688,"byte_end":315716,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315721,"byte_end":315724,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315729,"byte_end":315804,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315809,"byte_end":315866,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315871,"byte_end":315874,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315879,"byte_end":315893,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315898,"byte_end":315901,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315906,"byte_end":315913,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315918,"byte_end":315959,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":315964,"byte_end":315998,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316003,"byte_end":316060,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316065,"byte_end":316068,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316073,"byte_end":316113,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316118,"byte_end":316158,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316163,"byte_end":316204,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316209,"byte_end":316212,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316217,"byte_end":316268,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316273,"byte_end":316326,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316331,"byte_end":316353,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316358,"byte_end":316383,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316388,"byte_end":316450,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316455,"byte_end":316470,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316475,"byte_end":316484,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316489,"byte_end":316495,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316500,"byte_end":316503,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316508,"byte_end":316534,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316539,"byte_end":316606,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316611,"byte_end":316625,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316630,"byte_end":316633,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316638,"byte_end":316699,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316704,"byte_end":316732,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316737,"byte_end":316787,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316792,"byte_end":316800,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316805,"byte_end":316812,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316817,"byte_end":316851,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":316856,"byte_end":316881,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5003},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318361,"byte_end":318372,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317322,"byte_end":317374,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317379,"byte_end":317446,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317451,"byte_end":317454,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317459,"byte_end":317533,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317538,"byte_end":317619,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317624,"byte_end":317694,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317699,"byte_end":317702,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317707,"byte_end":317775,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317780,"byte_end":317783,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317788,"byte_end":317802,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317807,"byte_end":317810,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317815,"byte_end":317822,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317827,"byte_end":317868,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317873,"byte_end":317904,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317909,"byte_end":317947,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317952,"byte_end":317972,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317977,"byte_end":317980,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":317985,"byte_end":318022,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318027,"byte_end":318030,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318035,"byte_end":318062,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318067,"byte_end":318091,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318096,"byte_end":318142,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318147,"byte_end":318156,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318161,"byte_end":318204,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318209,"byte_end":318216,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318221,"byte_end":318224,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318229,"byte_end":318292,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318297,"byte_end":318328,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318333,"byte_end":318341,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318346,"byte_end":318353,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5005},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320187,"byte_end":320197,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"pub fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318555,"byte_end":318633,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318638,"byte_end":318641,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318646,"byte_end":318731,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318736,"byte_end":318808,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318813,"byte_end":318865,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318870,"byte_end":318873,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318878,"byte_end":318951,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":318956,"byte_end":319030,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319035,"byte_end":319110,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319115,"byte_end":319187,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319192,"byte_end":319204,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319209,"byte_end":319212,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319217,"byte_end":319292,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319297,"byte_end":319354,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319359,"byte_end":319362,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319367,"byte_end":319398,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319403,"byte_end":319472,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319477,"byte_end":319506,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319511,"byte_end":319514,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319519,"byte_end":319533,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319538,"byte_end":319541,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319546,"byte_end":319553,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319558,"byte_end":319599,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319604,"byte_end":319666,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319671,"byte_end":319674,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319679,"byte_end":319770,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319775,"byte_end":319817,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319822,"byte_end":319825,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319830,"byte_end":319892,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319897,"byte_end":319970,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":319975,"byte_end":320037,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320042,"byte_end":320050,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320055,"byte_end":320062,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320067,"byte_end":320070,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320075,"byte_end":320087,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320092,"byte_end":320095,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320100,"byte_end":320149,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320154,"byte_end":320179,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5006},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321720,"byte_end":321730,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320432,"byte_end":320505,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320510,"byte_end":320544,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320549,"byte_end":320552,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320557,"byte_end":320632,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320637,"byte_end":320712,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320717,"byte_end":320790,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320795,"byte_end":320866,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320871,"byte_end":320921,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320926,"byte_end":320929,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":320934,"byte_end":321005,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321010,"byte_end":321013,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321018,"byte_end":321094,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321099,"byte_end":321169,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321174,"byte_end":321199,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321204,"byte_end":321207,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321212,"byte_end":321226,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321231,"byte_end":321238,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321243,"byte_end":321284,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321289,"byte_end":321313,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321318,"byte_end":321375,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321380,"byte_end":321383,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321388,"byte_end":321468,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321473,"byte_end":321516,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321521,"byte_end":321554,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321559,"byte_end":321566,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321571,"byte_end":321574,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321579,"byte_end":321627,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321632,"byte_end":321687,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321692,"byte_end":321700,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321705,"byte_end":321712,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5009},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323357,"byte_end":323371,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":321981,"byte_end":322043,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322048,"byte_end":322116,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322121,"byte_end":322155,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322160,"byte_end":322163,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322168,"byte_end":322243,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322248,"byte_end":322323,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322328,"byte_end":322404,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322409,"byte_end":322474,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322479,"byte_end":322482,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322487,"byte_end":322558,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322563,"byte_end":322566,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322571,"byte_end":322647,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322652,"byte_end":322726,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322731,"byte_end":322756,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322761,"byte_end":322764,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322769,"byte_end":322783,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322788,"byte_end":322795,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322800,"byte_end":322841,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322846,"byte_end":322903,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322908,"byte_end":322933,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322938,"byte_end":322941,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":322946,"byte_end":323016,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323021,"byte_end":323076,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323081,"byte_end":323143,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323148,"byte_end":323163,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323168,"byte_end":323175,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323180,"byte_end":323183,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323188,"byte_end":323209,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323214,"byte_end":323263,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323268,"byte_end":323324,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323329,"byte_end":323337,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323342,"byte_end":323349,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5013},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325063,"byte_end":325074,"line_start":752,"line_end":752,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323648,"byte_end":323713,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323718,"byte_end":323721,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323726,"byte_end":323799,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323804,"byte_end":323877,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323882,"byte_end":323955,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":323960,"byte_end":324030,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324035,"byte_end":324038,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324043,"byte_end":324057,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324062,"byte_end":324065,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324070,"byte_end":324077,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324082,"byte_end":324123,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324128,"byte_end":324159,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324164,"byte_end":324215,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324220,"byte_end":324240,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324245,"byte_end":324248,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324253,"byte_end":324292,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324297,"byte_end":324336,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324341,"byte_end":324380,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324385,"byte_end":324388,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324393,"byte_end":324420,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324425,"byte_end":324468,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324473,"byte_end":324480,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324485,"byte_end":324512,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324517,"byte_end":324560,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324565,"byte_end":324609,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324614,"byte_end":324621,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324626,"byte_end":324653,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324658,"byte_end":324703,"line_start":741,"line_end":741,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324708,"byte_end":324753,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324758,"byte_end":324802,"line_start":743,"line_end":743,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324807,"byte_end":324814,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324819,"byte_end":324822,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324827,"byte_end":324866,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324871,"byte_end":324920,"line_start":747,"line_end":747,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324925,"byte_end":324974,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":324979,"byte_end":325029,"line_start":749,"line_end":749,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325034,"byte_end":325043,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325048,"byte_end":325055,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5014},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326666,"byte_end":326674,"line_start":791,"line_end":791,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325379,"byte_end":325449,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325454,"byte_end":325514,"line_start":764,"line_end":764,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325519,"byte_end":325522,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325527,"byte_end":325597,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325602,"byte_end":325678,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325683,"byte_end":325759,"line_start":768,"line_end":768,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325764,"byte_end":325834,"line_start":769,"line_end":769,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325839,"byte_end":325865,"line_start":770,"line_end":770,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325870,"byte_end":325873,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325878,"byte_end":325958,"line_start":772,"line_end":772,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":325963,"byte_end":326032,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326037,"byte_end":326058,"line_start":774,"line_end":774,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326063,"byte_end":326066,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326071,"byte_end":326085,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326090,"byte_end":326093,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326098,"byte_end":326105,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326110,"byte_end":326151,"line_start":779,"line_end":779,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326156,"byte_end":326202,"line_start":780,"line_end":780,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326207,"byte_end":326210,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326215,"byte_end":326284,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326289,"byte_end":326366,"line_start":783,"line_end":783,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326371,"byte_end":326404,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326409,"byte_end":326412,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326417,"byte_end":326503,"line_start":786,"line_end":786,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326508,"byte_end":326594,"line_start":787,"line_end":787,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326599,"byte_end":326633,"line_start":788,"line_end":788,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326638,"byte_end":326646,"line_start":789,"line_end":789,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326651,"byte_end":326658,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5018},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328200,"byte_end":328210,"line_start":834,"line_end":834,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":326954,"byte_end":327016,"line_start":800,"line_end":800,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327021,"byte_end":327096,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327101,"byte_end":327104,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327109,"byte_end":327180,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327185,"byte_end":327261,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327266,"byte_end":327305,"line_start":805,"line_end":805,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327310,"byte_end":327313,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327318,"byte_end":327404,"line_start":807,"line_end":807,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327409,"byte_end":327412,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327417,"byte_end":327501,"line_start":809,"line_end":809,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327506,"byte_end":327562,"line_start":810,"line_end":810,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327567,"byte_end":327570,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327575,"byte_end":327589,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327594,"byte_end":327597,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327602,"byte_end":327609,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327614,"byte_end":327655,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327660,"byte_end":327691,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327696,"byte_end":327734,"line_start":817,"line_end":817,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327739,"byte_end":327759,"line_start":818,"line_end":818,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327764,"byte_end":327767,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327772,"byte_end":327833,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327838,"byte_end":327841,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327846,"byte_end":327873,"line_start":822,"line_end":822,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327878,"byte_end":327909,"line_start":823,"line_end":823,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327914,"byte_end":327940,"line_start":824,"line_end":824,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":327945,"byte_end":328015,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328020,"byte_end":328029,"line_start":826,"line_end":826,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328034,"byte_end":328041,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328046,"byte_end":328049,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328054,"byte_end":328093,"line_start":829,"line_end":829,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328098,"byte_end":328101,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328106,"byte_end":328166,"line_start":831,"line_end":831,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328171,"byte_end":328180,"line_start":832,"line_end":832,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328185,"byte_end":328192,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5019},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330932,"byte_end":330952,"line_start":901,"line_end":901,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328464,"byte_end":328542,"line_start":842,"line_end":842,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328547,"byte_end":328550,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328555,"byte_end":328660,"line_start":844,"line_end":844,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328665,"byte_end":328708,"line_start":845,"line_end":845,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328713,"byte_end":328716,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328721,"byte_end":328789,"line_start":847,"line_end":847,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328794,"byte_end":328867,"line_start":848,"line_end":848,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328872,"byte_end":328928,"line_start":849,"line_end":849,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328933,"byte_end":328936,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":328941,"byte_end":329016,"line_start":851,"line_end":851,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329021,"byte_end":329094,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329099,"byte_end":329164,"line_start":853,"line_end":853,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329169,"byte_end":329172,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329177,"byte_end":329252,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329257,"byte_end":329314,"line_start":856,"line_end":856,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329319,"byte_end":329322,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329327,"byte_end":329341,"line_start":858,"line_end":858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329346,"byte_end":329349,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329354,"byte_end":329406,"line_start":860,"line_end":860,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329411,"byte_end":329418,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329423,"byte_end":329464,"line_start":862,"line_end":862,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329469,"byte_end":329503,"line_start":863,"line_end":863,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329508,"byte_end":329565,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329570,"byte_end":329573,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329578,"byte_end":329628,"line_start":866,"line_end":866,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329633,"byte_end":329683,"line_start":867,"line_end":867,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329688,"byte_end":329691,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329696,"byte_end":329771,"line_start":869,"line_end":869,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329776,"byte_end":329779,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329784,"byte_end":329850,"line_start":871,"line_end":871,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329855,"byte_end":329858,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329863,"byte_end":329888,"line_start":873,"line_end":873,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329893,"byte_end":329947,"line_start":874,"line_end":874,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329952,"byte_end":329955,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329960,"byte_end":329985,"line_start":876,"line_end":876,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":329990,"byte_end":330044,"line_start":877,"line_end":877,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330049,"byte_end":330052,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330057,"byte_end":330101,"line_start":879,"line_end":879,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330106,"byte_end":330142,"line_start":880,"line_end":880,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330147,"byte_end":330154,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330159,"byte_end":330162,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330167,"byte_end":330227,"line_start":883,"line_end":883,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330232,"byte_end":330239,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330244,"byte_end":330285,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330290,"byte_end":330321,"line_start":886,"line_end":886,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330326,"byte_end":330377,"line_start":887,"line_end":887,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330382,"byte_end":330385,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330390,"byte_end":330444,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330449,"byte_end":330515,"line_start":890,"line_end":890,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330520,"byte_end":330523,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330528,"byte_end":330577,"line_start":892,"line_end":892,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330582,"byte_end":330636,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330641,"byte_end":330644,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330649,"byte_end":330702,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330707,"byte_end":330779,"line_start":896,"line_end":896,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330784,"byte_end":330843,"line_start":897,"line_end":897,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330848,"byte_end":330855,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330860,"byte_end":330894,"line_start":899,"line_end":899,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":330899,"byte_end":330924,"line_start":900,"line_end":900,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5020},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333933,"byte_end":333945,"line_start":977,"line_end":977,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331229,"byte_end":331295,"line_start":911,"line_end":911,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331300,"byte_end":331303,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331308,"byte_end":331413,"line_start":913,"line_end":913,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331418,"byte_end":331461,"line_start":914,"line_end":914,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331466,"byte_end":331469,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331474,"byte_end":331542,"line_start":916,"line_end":916,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331547,"byte_end":331623,"line_start":917,"line_end":917,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331628,"byte_end":331658,"line_start":918,"line_end":918,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331663,"byte_end":331666,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331671,"byte_end":331746,"line_start":920,"line_end":920,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331751,"byte_end":331824,"line_start":921,"line_end":921,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331829,"byte_end":331894,"line_start":922,"line_end":922,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331899,"byte_end":331902,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331907,"byte_end":331982,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":331987,"byte_end":332044,"line_start":925,"line_end":925,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332049,"byte_end":332052,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332057,"byte_end":332071,"line_start":927,"line_end":927,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332076,"byte_end":332079,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332084,"byte_end":332134,"line_start":929,"line_end":929,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332139,"byte_end":332146,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332151,"byte_end":332192,"line_start":931,"line_end":931,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332197,"byte_end":332231,"line_start":932,"line_end":932,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332236,"byte_end":332266,"line_start":933,"line_end":933,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332271,"byte_end":332328,"line_start":934,"line_end":934,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332333,"byte_end":332336,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332341,"byte_end":332391,"line_start":936,"line_end":936,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332396,"byte_end":332446,"line_start":937,"line_end":937,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332451,"byte_end":332454,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332459,"byte_end":332498,"line_start":939,"line_end":939,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332503,"byte_end":332582,"line_start":940,"line_end":940,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332587,"byte_end":332590,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332595,"byte_end":332657,"line_start":942,"line_end":942,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332662,"byte_end":332665,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332670,"byte_end":332733,"line_start":944,"line_end":944,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332738,"byte_end":332741,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332746,"byte_end":332775,"line_start":946,"line_end":946,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332780,"byte_end":332843,"line_start":947,"line_end":947,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332848,"byte_end":332878,"line_start":948,"line_end":948,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332883,"byte_end":332897,"line_start":949,"line_end":949,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332902,"byte_end":332905,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332910,"byte_end":332935,"line_start":951,"line_end":951,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332940,"byte_end":332994,"line_start":952,"line_end":952,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":332999,"byte_end":333053,"line_start":953,"line_end":953,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333058,"byte_end":333061,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333066,"byte_end":333110,"line_start":955,"line_end":955,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333115,"byte_end":333151,"line_start":956,"line_end":956,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333156,"byte_end":333163,"line_start":957,"line_end":957,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333168,"byte_end":333171,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333176,"byte_end":333236,"line_start":959,"line_end":959,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333241,"byte_end":333248,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333253,"byte_end":333294,"line_start":961,"line_end":961,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333299,"byte_end":333330,"line_start":962,"line_end":962,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333335,"byte_end":333386,"line_start":963,"line_end":963,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333391,"byte_end":333394,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333399,"byte_end":333453,"line_start":965,"line_end":965,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333458,"byte_end":333516,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333521,"byte_end":333524,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333529,"byte_end":333578,"line_start":968,"line_end":968,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333583,"byte_end":333637,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333642,"byte_end":333645,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333650,"byte_end":333703,"line_start":971,"line_end":971,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333708,"byte_end":333780,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333785,"byte_end":333844,"line_start":973,"line_end":973,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333849,"byte_end":333856,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333861,"byte_end":333895,"line_start":975,"line_end":975,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":333900,"byte_end":333925,"line_start":976,"line_end":976,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5021},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":334400,"byte_end":334419,"line_start":991,"line_end":991,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":334292,"byte_end":334370,"line_start":989,"line_end":989,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":334375,"byte_end":334392,"line_start":990,"line_end":990,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5022},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336713,"byte_end":336728,"line_start":1057,"line_end":1057,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":335491,"byte_end":335573,"line_start":1029,"line_end":1029,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":335578,"byte_end":335581,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":335586,"byte_end":335701,"line_start":1031,"line_end":1031,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":335706,"byte_end":335797,"line_start":1032,"line_end":1032,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":335802,"byte_end":335892,"line_start":1033,"line_end":1033,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":335897,"byte_end":335982,"line_start":1034,"line_end":1034,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":335987,"byte_end":335990,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":335995,"byte_end":336059,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336064,"byte_end":336121,"line_start":1037,"line_end":1037,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336126,"byte_end":336129,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336134,"byte_end":336148,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336153,"byte_end":336156,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336161,"byte_end":336168,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336173,"byte_end":336214,"line_start":1042,"line_end":1042,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336219,"byte_end":336265,"line_start":1043,"line_end":1043,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336270,"byte_end":336304,"line_start":1044,"line_end":1044,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336309,"byte_end":336312,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336317,"byte_end":336378,"line_start":1046,"line_end":1046,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336383,"byte_end":336429,"line_start":1047,"line_end":1047,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336434,"byte_end":336463,"line_start":1048,"line_end":1048,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336468,"byte_end":336471,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336476,"byte_end":336532,"line_start":1050,"line_end":1050,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336537,"byte_end":336575,"line_start":1051,"line_end":1051,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336580,"byte_end":336588,"line_start":1052,"line_end":1052,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336593,"byte_end":336600,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336605,"byte_end":336627,"line_start":1054,"line_end":1054,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":336682,"byte_end":336705,"line_start":1056,"line_end":1056,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":14366},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391028,"byte_end":391032,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":14368}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":390906,"byte_end":390943,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":390968,"byte_end":391016,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5126},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391550,"byte_end":391554,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391084,"byte_end":391148,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391149,"byte_end":391177,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391178,"byte_end":391181,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391182,"byte_end":391255,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391256,"byte_end":391311,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391312,"byte_end":391315,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391316,"byte_end":391323,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391324,"byte_end":391365,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391366,"byte_end":391409,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391410,"byte_end":391413,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391414,"byte_end":391458,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391459,"byte_end":391524,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391525,"byte_end":391534,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391535,"byte_end":391542,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14375},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392245,"byte_end":392251,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":14377}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392121,"byte_end":392160,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392185,"byte_end":392233,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5161},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392775,"byte_end":392781,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392273,"byte_end":392333,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392334,"byte_end":392337,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392338,"byte_end":392405,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392406,"byte_end":392478,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392479,"byte_end":392536,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392537,"byte_end":392540,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392541,"byte_end":392548,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392549,"byte_end":392590,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392591,"byte_end":392634,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392635,"byte_end":392638,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392639,"byte_end":392674,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392675,"byte_end":392749,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392750,"byte_end":392759,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392760,"byte_end":392767,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14384},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393772,"byte_end":393782,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":14386}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393470,"byte_end":393530,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393531,"byte_end":393583,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393584,"byte_end":393587,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393588,"byte_end":393651,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393652,"byte_end":393687,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393712,"byte_end":393760,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5214},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":396070,"byte_end":396081,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394298,"byte_end":394369,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394370,"byte_end":394437,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394438,"byte_end":394441,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394442,"byte_end":394514,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394515,"byte_end":394518,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394519,"byte_end":394593,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394594,"byte_end":394646,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394647,"byte_end":394650,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394651,"byte_end":394723,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394724,"byte_end":394797,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394798,"byte_end":394835,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394836,"byte_end":394839,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394840,"byte_end":394854,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394855,"byte_end":394858,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394859,"byte_end":394875,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394876,"byte_end":394879,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394880,"byte_end":394887,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394888,"byte_end":394929,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394930,"byte_end":394973,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394974,"byte_end":394977,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394978,"byte_end":395046,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395047,"byte_end":395125,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395126,"byte_end":395157,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395158,"byte_end":395179,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395180,"byte_end":395183,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395184,"byte_end":395218,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395219,"byte_end":395274,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395275,"byte_end":395278,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395279,"byte_end":395332,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395333,"byte_end":395386,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395387,"byte_end":395440,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395441,"byte_end":395450,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395451,"byte_end":395458,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395459,"byte_end":395462,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395463,"byte_end":395499,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395500,"byte_end":395503,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395504,"byte_end":395515,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395516,"byte_end":395557,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395558,"byte_end":395601,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395602,"byte_end":395605,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395606,"byte_end":395655,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395656,"byte_end":395677,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395678,"byte_end":395755,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395756,"byte_end":395789,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395790,"byte_end":395793,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395794,"byte_end":395837,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395838,"byte_end":395881,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395882,"byte_end":395925,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395926,"byte_end":395969,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395970,"byte_end":395973,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":395974,"byte_end":396003,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":396004,"byte_end":396044,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":396045,"byte_end":396054,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":396055,"byte_end":396062,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14393},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396472,"byte_end":396477,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":14395}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396356,"byte_end":396394,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396412,"byte_end":396460,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5248},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396646,"byte_end":396651,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396516,"byte_end":396564,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396565,"byte_end":396568,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396569,"byte_end":396638,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":5300},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397736,"byte_end":397740,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397429,"byte_end":397470,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397471,"byte_end":397474,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397475,"byte_end":397482,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397483,"byte_end":397524,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397525,"byte_end":397568,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397569,"byte_end":397572,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397573,"byte_end":397617,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397618,"byte_end":397673,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397674,"byte_end":397710,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397711,"byte_end":397720,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":397721,"byte_end":397728,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14404},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":398002,"byte_end":398006,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":14406}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14435},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399182,"byte_end":399189,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":14437}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399062,"byte_end":399104,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399122,"byte_end":399170,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5344},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399365,"byte_end":399372,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399233,"byte_end":399287,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399288,"byte_end":399291,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399292,"byte_end":399357,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5386},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400215,"byte_end":400221,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5388}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400114,"byte_end":400154,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400155,"byte_end":400203,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5394},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400909,"byte_end":400916,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400421,"byte_end":400494,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400495,"byte_end":400498,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400499,"byte_end":400558,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400559,"byte_end":400562,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400563,"byte_end":400577,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400578,"byte_end":400581,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400582,"byte_end":400589,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400590,"byte_end":400623,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400624,"byte_end":400652,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400653,"byte_end":400656,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400657,"byte_end":400686,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400687,"byte_end":400690,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400691,"byte_end":400755,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400756,"byte_end":400809,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400810,"byte_end":400831,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400832,"byte_end":400885,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400886,"byte_end":400893,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400894,"byte_end":400901,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14446},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":401677,"byte_end":401690,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":14448}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5435},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403671,"byte_end":403685,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"pub fn poll_immediate<S: Stream>(S) -> PollImmediate<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":402790,"byte_end":402903,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":402904,"byte_end":402907,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":402908,"byte_end":403003,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403004,"byte_end":403007,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403008,"byte_end":403022,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403023,"byte_end":403026,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403027,"byte_end":403034,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403035,"byte_end":403076,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403077,"byte_end":403120,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403121,"byte_end":403149,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403150,"byte_end":403153,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403154,"byte_end":403227,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403228,"byte_end":403281,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403282,"byte_end":403335,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403336,"byte_end":403373,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403374,"byte_end":403377,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403378,"byte_end":403446,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403447,"byte_end":403475,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403476,"byte_end":403489,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403490,"byte_end":403499,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403500,"byte_end":403552,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403553,"byte_end":403607,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403608,"byte_end":403645,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403646,"byte_end":403655,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":403656,"byte_end":403663,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14487},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404218,"byte_end":404224,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":14490}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5478},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405250,"byte_end":405256,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404346,"byte_end":404414,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404415,"byte_end":404491,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404492,"byte_end":404540,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404541,"byte_end":404544,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404545,"byte_end":404620,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404621,"byte_end":404690,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404691,"byte_end":404718,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404719,"byte_end":404722,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404723,"byte_end":404794,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404795,"byte_end":404815,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404816,"byte_end":404819,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404820,"byte_end":404835,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404836,"byte_end":404839,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404840,"byte_end":404851,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404852,"byte_end":404893,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404894,"byte_end":404949,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404950,"byte_end":404953,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404954,"byte_end":404979,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":404980,"byte_end":405006,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405007,"byte_end":405010,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405011,"byte_end":405049,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405050,"byte_end":405053,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405054,"byte_end":405075,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405076,"byte_end":405112,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405113,"byte_end":405165,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405166,"byte_end":405218,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405219,"byte_end":405224,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405225,"byte_end":405234,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405235,"byte_end":405242,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405725,"byte_end":405732,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405617,"byte_end":405691,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405696,"byte_end":405713,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5486},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406060,"byte_end":406067,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405798,"byte_end":405866,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405871,"byte_end":405902,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405907,"byte_end":405910,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405915,"byte_end":405988,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405993,"byte_end":406048,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5487},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406414,"byte_end":406425,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406145,"byte_end":406220,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406225,"byte_end":406256,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406261,"byte_end":406264,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406269,"byte_end":406342,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406347,"byte_end":406402,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5488},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406799,"byte_end":406809,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406563,"byte_end":406626,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406631,"byte_end":406634,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406639,"byte_end":406711,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406716,"byte_end":406787,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14526},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":407751,"byte_end":407755,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":14525},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":407720,"byte_end":407746,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14528},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":407793,"byte_end":407798,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":14525},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":407761,"byte_end":407788,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":14525},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":407705,"byte_end":407713,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"pub enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":14526},{"krate":0,"index":14528}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":407578,"byte_end":407644,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5541},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":407879,"byte_end":407885,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"pub fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":407823,"byte_end":407867,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":14544},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408357,"byte_end":408375,"line_start":40,"line_end":40,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":14549},{"krate":0,"index":14550},{"krate":0,"index":14551},{"krate":0,"index":14552}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5544},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410667,"byte_end":410687,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"pub fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408538,"byte_end":408615,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408616,"byte_end":408696,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408697,"byte_end":408779,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408780,"byte_end":408845,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408846,"byte_end":408849,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408850,"byte_end":408925,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408926,"byte_end":408995,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408996,"byte_end":409023,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409024,"byte_end":409027,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409028,"byte_end":409099,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409100,"byte_end":409120,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409121,"byte_end":409124,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409125,"byte_end":409140,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409141,"byte_end":409144,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409145,"byte_end":409161,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409162,"byte_end":409226,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409227,"byte_end":409230,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409231,"byte_end":409242,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409243,"byte_end":409284,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409285,"byte_end":409364,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409365,"byte_end":409368,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409369,"byte_end":409394,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409395,"byte_end":409421,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409422,"byte_end":409425,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409426,"byte_end":409490,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409491,"byte_end":409565,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409566,"byte_end":409636,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409637,"byte_end":409688,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409689,"byte_end":409748,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409749,"byte_end":409752,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409753,"byte_end":409816,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409817,"byte_end":409820,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409821,"byte_end":409842,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409843,"byte_end":409898,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409899,"byte_end":409951,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409952,"byte_end":409957,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409958,"byte_end":409967,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409968,"byte_end":409975,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409976,"byte_end":409979,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":409980,"byte_end":409999,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410000,"byte_end":410067,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410068,"byte_end":410144,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410145,"byte_end":410148,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410149,"byte_end":410160,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410161,"byte_end":410202,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410203,"byte_end":410282,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410283,"byte_end":410286,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410287,"byte_end":410312,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410313,"byte_end":410339,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410340,"byte_end":410343,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410344,"byte_end":410397,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410398,"byte_end":410401,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410402,"byte_end":410462,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410463,"byte_end":410466,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410467,"byte_end":410488,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410489,"byte_end":410529,"line_start":105,"line_end":105,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410530,"byte_end":410582,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410583,"byte_end":410635,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410636,"byte_end":410641,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410642,"byte_end":410651,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":410652,"byte_end":410659,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5554},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411304,"byte_end":411311,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411196,"byte_end":411270,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411275,"byte_end":411292,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5555},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411667,"byte_end":411674,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411405,"byte_end":411473,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411478,"byte_end":411509,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411514,"byte_end":411517,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411522,"byte_end":411595,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411600,"byte_end":411655,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5556},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":412049,"byte_end":412060,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411780,"byte_end":411855,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411860,"byte_end":411891,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411896,"byte_end":411899,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411904,"byte_end":411977,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411982,"byte_end":412037,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5557},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":412466,"byte_end":412476,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":412230,"byte_end":412293,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":412298,"byte_end":412301,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":412306,"byte_end":412378,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":412383,"byte_end":412454,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":5626},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416154,"byte_end":416160,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":414712,"byte_end":414782,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":414783,"byte_end":414786,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":414787,"byte_end":414856,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":414857,"byte_end":414938,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":414939,"byte_end":414970,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":414971,"byte_end":414974,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":414975,"byte_end":415054,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415055,"byte_end":415134,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415135,"byte_end":415189,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415190,"byte_end":415193,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415194,"byte_end":415274,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415275,"byte_end":415345,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415346,"byte_end":415368,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415369,"byte_end":415372,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415373,"byte_end":415450,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415451,"byte_end":415523,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415524,"byte_end":415601,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415602,"byte_end":415662,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415663,"byte_end":415666,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415667,"byte_end":415680,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415681,"byte_end":415684,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415685,"byte_end":415692,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415693,"byte_end":415734,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415735,"byte_end":415778,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415779,"byte_end":415782,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415783,"byte_end":415838,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415839,"byte_end":415862,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415863,"byte_end":415902,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415903,"byte_end":415940,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415941,"byte_end":415980,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415981,"byte_end":415997,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":415998,"byte_end":416014,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416015,"byte_end":416024,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416025,"byte_end":416032,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416033,"byte_end":416036,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416037,"byte_end":416089,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416090,"byte_end":416128,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416129,"byte_end":416138,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416139,"byte_end":416146,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14613},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416507,"byte_end":416513,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":14617},{"krate":0,"index":14618}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5726},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421564,"byte_end":421578,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":5728},{"krate":0,"index":5729},{"krate":0,"index":5730},{"krate":0,"index":5731}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419498,"byte_end":419532,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419533,"byte_end":419536,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419537,"byte_end":419616,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419617,"byte_end":419688,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419689,"byte_end":419765,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419766,"byte_end":419814,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419815,"byte_end":419818,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419819,"byte_end":419898,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419899,"byte_end":419974,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419975,"byte_end":420053,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420054,"byte_end":420134,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420135,"byte_end":420164,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420165,"byte_end":420168,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420169,"byte_end":420247,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420248,"byte_end":420322,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420323,"byte_end":420398,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420399,"byte_end":420474,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420475,"byte_end":420550,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420551,"byte_end":420609,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420610,"byte_end":420613,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420614,"byte_end":420687,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420688,"byte_end":420766,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420767,"byte_end":420825,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420826,"byte_end":420899,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420900,"byte_end":420968,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":420969,"byte_end":421045,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421046,"byte_end":421114,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421115,"byte_end":421168,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421169,"byte_end":421172,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421173,"byte_end":421239,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421240,"byte_end":421319,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421320,"byte_end":421367,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421368,"byte_end":421371,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421372,"byte_end":421445,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421446,"byte_end":421503,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421504,"byte_end":421552,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5736},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422086,"byte_end":422089,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421866,"byte_end":421910,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421915,"byte_end":421918,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421923,"byte_end":421998,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422003,"byte_end":422074,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5737},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422586,"byte_end":422589,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422313,"byte_end":422370,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422375,"byte_end":422378,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422383,"byte_end":422446,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422451,"byte_end":422515,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422520,"byte_end":422574,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5738},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422747,"byte_end":422755,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422684,"byte_end":422735,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5739},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":423179,"byte_end":423183,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422860,"byte_end":422893,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422898,"byte_end":422901,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422906,"byte_end":422982,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":422987,"byte_end":423061,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":423066,"byte_end":423139,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":423144,"byte_end":423167,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":5766},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":5767},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5774},{"krate":0,"index":5777},{"krate":0,"index":5780},{"krate":0,"index":5781},{"krate":0,"index":5784},{"krate":0,"index":5785},{"krate":0,"index":5787},{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5793},{"krate":0,"index":5796},{"krate":0,"index":5799},{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5812},{"krate":0,"index":5813},{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5818},{"krate":0,"index":5819},{"krate":0,"index":5822},{"krate":0,"index":5825},{"krate":0,"index":5828},{"krate":0,"index":5829},{"krate":0,"index":5832},{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":5839},{"krate":0,"index":5842},{"krate":0,"index":5843},{"krate":0,"index":5846},{"krate":0,"index":5849},{"krate":0,"index":5852},{"krate":0,"index":5855},{"krate":0,"index":5858},{"krate":0,"index":5864},{"krate":0,"index":5931},{"krate":0,"index":5932},{"krate":0,"index":5935},{"krate":0,"index":5936},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5941},{"krate":0,"index":5944},{"krate":0,"index":5947},{"krate":0,"index":6011},{"krate":0,"index":6014},{"krate":0,"index":6070},{"krate":0,"index":6071},{"krate":0,"index":6074},{"krate":0,"index":6077},{"krate":0,"index":6082},{"krate":0,"index":6084},{"krate":0,"index":6086},{"krate":0,"index":6088},{"krate":0,"index":6090},{"krate":0,"index":6092},{"krate":0,"index":6095},{"krate":0,"index":6110},{"krate":0,"index":6123},{"krate":0,"index":6126},{"krate":0,"index":6130},{"krate":0,"index":6133},{"krate":0,"index":6139},{"krate":0,"index":6145},{"krate":0,"index":6150},{"krate":0,"index":6155},{"krate":0,"index":6158}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150686,"byte_end":150720,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150721,"byte_end":150746,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":425548,"byte_end":425580,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":425581,"byte_end":425584,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":425585,"byte_end":425660,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":425661,"byte_end":425718,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14706},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":451906,"byte_end":451916,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":14709},{"krate":0,"index":14710},{"krate":0,"index":14711}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":451818,"byte_end":451877,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14716},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":452153,"byte_end":452160,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":452065,"byte_end":452124,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14725},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":452301,"byte_end":452311,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":14728},{"krate":0,"index":14729},{"krate":0,"index":14730},{"krate":0,"index":14731}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":452211,"byte_end":452272,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":14736},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":452599,"byte_end":452603,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":452505,"byte_end":452570,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":14745},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":452740,"byte_end":452748,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":14747},{"krate":0,"index":14748}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":452654,"byte_end":452711,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6077},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427585,"byte_end":427601,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6079},{"krate":0,"index":6080},{"krate":0,"index":6081}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426490,"byte_end":426543,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426544,"byte_end":426547,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426548,"byte_end":426616,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426617,"byte_end":426690,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426691,"byte_end":426767,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426768,"byte_end":426812,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426813,"byte_end":426816,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426817,"byte_end":426895,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426896,"byte_end":426954,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":426955,"byte_end":427019,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427020,"byte_end":427073,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427074,"byte_end":427153,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427154,"byte_end":427183,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427184,"byte_end":427187,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427188,"byte_end":427258,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427259,"byte_end":427336,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427337,"byte_end":427388,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427389,"byte_end":427392,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427393,"byte_end":427466,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427467,"byte_end":427524,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427525,"byte_end":427573,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6097},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":430218,"byte_end":430221,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":429947,"byte_end":429996,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":430001,"byte_end":430004,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":430009,"byte_end":430076,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":430081,"byte_end":430155,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":430160,"byte_end":430206,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6098},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431216,"byte_end":431219,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431078,"byte_end":431133,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431138,"byte_end":431141,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431146,"byte_end":431204,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6099},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431383,"byte_end":431391,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431321,"byte_end":431371,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6100},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431974,"byte_end":431978,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431604,"byte_end":431635,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431640,"byte_end":431643,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431648,"byte_end":431718,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431723,"byte_end":431809,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431814,"byte_end":431890,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":431895,"byte_end":431962,"line_start":160,"line_end":160,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6101},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":433253,"byte_end":433257,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":433171,"byte_end":433241,"line_start":188,"line_end":188,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6102},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":433455,"byte_end":433467,"line_start":197,"line_end":197,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":433373,"byte_end":433443,"line_start":196,"line_end":196,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6103},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":433796,"byte_end":433804,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":433715,"byte_end":433784,"line_start":204,"line_end":204,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6104},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":434011,"byte_end":434023,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":433930,"byte_end":433999,"line_start":212,"line_end":212,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6128},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":449160,"byte_end":449165,"line_start":558,"line_end":558,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":449107,"byte_end":449148,"line_start":557,"line_end":557,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":6165},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6166},{"krate":0,"index":6167},{"krate":0,"index":6170},{"krate":0,"index":6171},{"krate":0,"index":6173},{"krate":0,"index":6176},{"krate":0,"index":6179},{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6186},{"krate":0,"index":6189},{"krate":0,"index":6190},{"krate":0,"index":6193},{"krate":0,"index":6196},{"krate":0,"index":6199},{"krate":0,"index":6202},{"krate":0,"index":6203},{"krate":0,"index":6206},{"krate":0,"index":6209},{"krate":0,"index":6212},{"krate":0,"index":14752},{"krate":0,"index":14755},{"krate":0,"index":6215},{"krate":0,"index":6218},{"krate":0,"index":6227},{"krate":0,"index":6230},{"krate":0,"index":6234},{"krate":0,"index":6237},{"krate":0,"index":6239},{"krate":0,"index":6243},{"krate":0,"index":6247},{"krate":0,"index":6252},{"krate":0,"index":6258},{"krate":0,"index":14785},{"krate":0,"index":14790},{"krate":0,"index":14794},{"krate":0,"index":14799},{"krate":0,"index":14803},{"krate":0,"index":14807},{"krate":0,"index":6264},{"krate":0,"index":6270},{"krate":0,"index":6272},{"krate":0,"index":6278},{"krate":0,"index":6280},{"krate":0,"index":6285}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150902,"byte_end":150936,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150937,"byte_end":150962,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":464661,"byte_end":464692,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":14752},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":465732,"byte_end":465741,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":14754}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6220},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466223,"byte_end":466226,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466023,"byte_end":466062,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466067,"byte_end":466070,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466075,"byte_end":466145,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466150,"byte_end":466211,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6221},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466436,"byte_end":466439,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466298,"byte_end":466353,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466358,"byte_end":466361,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466366,"byte_end":466424,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6222},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466555,"byte_end":466563,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466494,"byte_end":466543,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6223},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466925,"byte_end":466929,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466622,"byte_end":466653,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466658,"byte_end":466661,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466666,"byte_end":466738,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466743,"byte_end":466817,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466822,"byte_end":466890,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466895,"byte_end":466913,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6224},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":467095,"byte_end":467099,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":467013,"byte_end":467083,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6225},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":467249,"byte_end":467257,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":467168,"byte_end":467237,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6226},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":467393,"byte_end":467398,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":467340,"byte_end":467381,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":6237},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":469105,"byte_end":469115,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468484,"byte_end":468558,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468559,"byte_end":468562,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468563,"byte_end":468642,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468643,"byte_end":468694,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468695,"byte_end":468769,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468770,"byte_end":468829,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468830,"byte_end":468833,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468834,"byte_end":468906,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468907,"byte_end":468957,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468958,"byte_end":468961,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468962,"byte_end":469039,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":469040,"byte_end":469097,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14785},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":470422,"byte_end":470426,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":470332,"byte_end":470393,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":14794},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":470579,"byte_end":470586,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":470491,"byte_end":470550,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":14803},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":470740,"byte_end":470748,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":470654,"byte_end":470711,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":6308},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/abortable.rs","byte_start":472763,"byte_end":472772,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/abortable.rs","byte_start":472393,"byte_end":472480,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/abortable.rs","byte_start":472481,"byte_end":472484,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/abortable.rs","byte_start":472485,"byte_end":472561,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/abortable.rs","byte_start":472562,"byte_end":472615,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/abortable.rs","byte_start":472616,"byte_end":472619,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/abortable.rs","byte_start":472620,"byte_end":472697,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/abortable.rs","byte_start":472698,"byte_end":472755,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6342},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6343},{"krate":0,"index":6344},{"krate":0,"index":6347},{"krate":0,"index":6350},{"krate":0,"index":6353},{"krate":0,"index":6356},{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":6363},{"krate":0,"index":6366},{"krate":0,"index":6369},{"krate":0,"index":6372},{"krate":0,"index":6375},{"krate":0,"index":6378},{"krate":0,"index":6381},{"krate":0,"index":6384},{"krate":0,"index":6387},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6394},{"krate":0,"index":6397},{"krate":0,"index":6400},{"krate":0,"index":6434},{"krate":0,"index":6435},{"krate":0,"index":6438}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473000,"byte_end":473033,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473034,"byte_end":473037,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473038,"byte_end":473063,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473064,"byte_end":473067,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473068,"byte_end":473116,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473117,"byte_end":473170,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473171,"byte_end":473219,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473220,"byte_end":473267,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473268,"byte_end":473271,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473272,"byte_end":473346,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/mod.rs","byte_start":473347,"byte_end":473419,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":6428},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474669,"byte_end":474677,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":6429}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474626,"byte_end":474658,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6429},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475674,"byte_end":475679,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":6428},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474691,"byte_end":474756,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474761,"byte_end":474776,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474781,"byte_end":474784,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474789,"byte_end":474859,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474864,"byte_end":474883,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474888,"byte_end":474891,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474896,"byte_end":474965,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474970,"byte_end":475043,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475048,"byte_end":475087,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475092,"byte_end":475095,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475100,"byte_end":475166,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475171,"byte_end":475237,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475242,"byte_end":475313,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475318,"byte_end":475374,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475379,"byte_end":475382,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475387,"byte_end":475394,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475399,"byte_end":475437,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475442,"byte_end":475474,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475479,"byte_end":475482,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475487,"byte_end":475533,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475538,"byte_end":475541,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475546,"byte_end":475583,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475588,"byte_end":475624,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475629,"byte_end":475636,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":475641,"byte_end":475666,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6431},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477433,"byte_end":477446,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":6432}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477385,"byte_end":477422,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6432},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478489,"byte_end":478500,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":6431},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477465,"byte_end":477530,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477535,"byte_end":477550,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477555,"byte_end":477558,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477563,"byte_end":477633,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477638,"byte_end":477657,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477662,"byte_end":477665,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477670,"byte_end":477739,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477744,"byte_end":477817,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477822,"byte_end":477861,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477866,"byte_end":477869,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477874,"byte_end":477940,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477945,"byte_end":478011,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478016,"byte_end":478087,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478092,"byte_end":478148,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478153,"byte_end":478156,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478161,"byte_end":478168,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478173,"byte_end":478210,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478215,"byte_end":478252,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478257,"byte_end":478260,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478265,"byte_end":478301,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478306,"byte_end":478343,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478348,"byte_end":478351,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478356,"byte_end":478393,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478398,"byte_end":478439,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478444,"byte_end":478451,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":478456,"byte_end":478481,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":6441},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","parent":null,"children":[{"krate":0,"index":6442}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":479905,"byte_end":479947,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":479948,"byte_end":479951,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":479952,"byte_end":480018,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":6442},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480655,"byte_end":480660,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480020,"byte_end":480055,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480056,"byte_end":480059,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480060,"byte_end":480135,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480136,"byte_end":480173,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480174,"byte_end":480177,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480178,"byte_end":480242,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480243,"byte_end":480246,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480247,"byte_end":480318,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480319,"byte_end":480370,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480371,"byte_end":480463,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480464,"byte_end":480467,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480468,"byte_end":480539,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/never.rs","byte_start":480540,"byte_end":480645,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":6443},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":6444},{"krate":0,"index":6447},{"krate":0,"index":6450},{"krate":0,"index":6451},{"krate":0,"index":6454},{"krate":0,"index":6457},{"krate":0,"index":6458},{"krate":0,"index":6461},{"krate":0,"index":6464},{"krate":0,"index":6467},{"krate":0,"index":6470},{"krate":0,"index":6473},{"krate":0,"index":6476},{"krate":0,"index":6477},{"krate":0,"index":6480},{"krate":0,"index":6483},{"krate":0,"index":6486},{"krate":0,"index":6489},{"krate":0,"index":6490},{"krate":0,"index":6492},{"krate":0,"index":6579},{"krate":0,"index":6582},{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":6677},{"krate":0,"index":6680},{"krate":0,"index":6761},{"krate":0,"index":6764},{"krate":0,"index":6812},{"krate":0,"index":6815},{"krate":0,"index":6871},{"krate":0,"index":6874},{"krate":0,"index":6904},{"krate":0,"index":6907},{"krate":0,"index":6952},{"krate":0,"index":6953},{"krate":0,"index":6956},{"krate":0,"index":6959},{"krate":0,"index":6997},{"krate":0,"index":6998},{"krate":0,"index":7001},{"krate":0,"index":7004},{"krate":0,"index":7064},{"krate":0,"index":7067},{"krate":0,"index":7101},{"krate":0,"index":7102},{"krate":0,"index":7105},{"krate":0,"index":7108},{"krate":0,"index":7139},{"krate":0,"index":7142},{"krate":0,"index":7172},{"krate":0,"index":7175},{"krate":0,"index":7214},{"krate":0,"index":7217},{"krate":0,"index":7247},{"krate":0,"index":7250},{"krate":0,"index":7284},{"krate":0,"index":7287},{"krate":0,"index":7323},{"krate":0,"index":7326},{"krate":0,"index":7371},{"krate":0,"index":7374},{"krate":0,"index":7418},{"krate":0,"index":7421},{"krate":0,"index":7470},{"krate":0,"index":7473},{"krate":0,"index":7511},{"krate":0,"index":7514},{"krate":0,"index":7549},{"krate":0,"index":7550},{"krate":0,"index":7553},{"krate":0,"index":7556},{"krate":0,"index":7590},{"krate":0,"index":7593},{"krate":0,"index":7628},{"krate":0,"index":7629},{"krate":0,"index":7632},{"krate":0,"index":7635},{"krate":0,"index":7714},{"krate":0,"index":7715},{"krate":0,"index":7718},{"krate":0,"index":7719},{"krate":0,"index":7721},{"krate":0,"index":7724},{"krate":0,"index":7767},{"krate":0,"index":7770},{"krate":0,"index":7797},{"krate":0,"index":7800},{"krate":0,"index":7830},{"krate":0,"index":7833},{"krate":0,"index":7867},{"krate":0,"index":7870},{"krate":0,"index":7906},{"krate":0,"index":7909},{"krate":0,"index":7924},{"krate":0,"index":7926},{"krate":0,"index":7935},{"krate":0,"index":7937},{"krate":0,"index":7940},{"krate":0,"index":7942},{"krate":0,"index":7950},{"krate":0,"index":7952},{"krate":0,"index":7954}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11542,"byte_end":11564,"line_start":326,"line_end":326,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11611,"byte_end":11634,"line_start":328,"line_end":328,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":480691,"byte_end":480712,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":480713,"byte_end":480716,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":480717,"byte_end":480790,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":480791,"byte_end":480870,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":480871,"byte_end":480944,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":480945,"byte_end":481020,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481021,"byte_end":481100,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481101,"byte_end":481176,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481177,"byte_end":481205,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481206,"byte_end":481209,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481210,"byte_end":481289,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481290,"byte_end":481368,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481369,"byte_end":481445,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481446,"byte_end":481488,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481489,"byte_end":481492,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481493,"byte_end":481557,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":481558,"byte_end":481615,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":14810},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509084,"byte_end":509094,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":508435,"byte_end":508500,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":508501,"byte_end":508550,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":508551,"byte_end":508622,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":508623,"byte_end":508626,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":508627,"byte_end":508703,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":508704,"byte_end":508775,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":508776,"byte_end":508844,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":508845,"byte_end":508913,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":508914,"byte_end":508989,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":508990,"byte_end":509004,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":6537},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509659,"byte_end":509662,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509589,"byte_end":509647,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6538},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509771,"byte_end":509778,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509708,"byte_end":509759,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6539},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509892,"byte_end":509899,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509821,"byte_end":509880,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6540},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":510020,"byte_end":510030,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509954,"byte_end":510008,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":14843},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":515215,"byte_end":515224,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":14845},{"krate":0,"index":14846},{"krate":0,"index":14847},{"krate":0,"index":14848}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6640},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":515519,"byte_end":515522,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":515377,"byte_end":515469,"line_start":43,"line_end":43,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":515474,"byte_end":515507,"line_start":44,"line_end":44,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6641},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":515684,"byte_end":515697,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":515607,"byte_end":515672,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6642},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516203,"byte_end":516209,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516043,"byte_end":516099,"line_start":61,"line_end":61,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516104,"byte_end":516107,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516112,"byte_end":516191,"line_start":63,"line_end":63,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":6646},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516858,"byte_end":516871,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"seek_relative","qualname":"<BufReader<R>>::seek_relative","value":"pub fn seek_relative(Pin<&mut Self>, i64) -> SeeKRelative<, R>","parent":null,"children":[],"decl_id":null,"docs":" Seeks relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Seeks relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516529,"byte_end":516616,"line_start":78,"line_end":78,"column_start":5,"column_end":92}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516621,"byte_end":516691,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516696,"byte_end":516780,"line_start":80,"line_end":80,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516785,"byte_end":516846,"line_start":81,"line_end":81,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6647},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":517341,"byte_end":517359,"line_start":90,"line_end":90,"column_start":12,"column_end":30},"name":"poll_seek_relative","qualname":"<BufReader<R>>::poll_seek_relative","value":"pub fn poll_seek_relative(Pin<&mut Self>, &mut Context, i64)\n-> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to seek relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Attempts to seek relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":517001,"byte_end":517099,"line_start":86,"line_end":86,"column_start":5,"column_end":103}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":517104,"byte_end":517174,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":517179,"byte_end":517263,"line_start":88,"line_end":88,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":517268,"byte_end":517329,"line_start":89,"line_end":89,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":14896},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":523765,"byte_end":523777,"line_start":246,"line_end":246,"column_start":12,"column_end":24},"name":"SeeKRelative","qualname":"::io::buf_reader::SeeKRelative","value":"SeeKRelative {  }","parent":null,"children":[{"krate":0,"index":14899},{"krate":0,"index":14900},{"krate":0,"index":14901}],"decl_id":null,"docs":" Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":523600,"byte_end":523687,"line_start":243,"line_end":243,"column_start":1,"column_end":88}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":523705,"byte_end":523753,"line_start":245,"line_end":245,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":14906},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":525852,"byte_end":525861,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":14908},{"krate":0,"index":14909},{"krate":0,"index":14910}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6734},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":526136,"byte_end":526139,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":525994,"byte_end":526086,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":526091,"byte_end":526124,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6735},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":526301,"byte_end":526314,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":526224,"byte_end":526289,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6737},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":527437,"byte_end":527443,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":527369,"byte_end":527425,"line_start":83,"line_end":83,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":14960},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":532532,"byte_end":532542,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"LineWriter","qualname":"::io::line_writer::LineWriter","value":"LineWriter {  }","parent":null,"children":[{"krate":0,"index":14962}],"decl_id":null,"docs":" Wrap a writer, like [`BufWriter`] does, but prioritizes buffering lines","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6795},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":532797,"byte_end":532800,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<LineWriter<W>>::new","value":"pub fn new(W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LineWriter` with default buffer capacity. The default is currently 1KB\n which was taken from `std::io::LineWriter`\n","sig":null,"attributes":[{"value":"/ Create a new `LineWriter` with default buffer capacity. The default is currently 1KB","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":532646,"byte_end":532734,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ which was taken from `std::io::LineWriter`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":532739,"byte_end":532785,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6796},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":532966,"byte_end":532979,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LineWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LineWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `LineWriter` with the specified buffer capacity.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":532888,"byte_end":532954,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6798},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":533553,"byte_end":533559,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"buffer","qualname":"<LineWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to `buf_writer`'s internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to `buf_writer`'s internally buffered data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":533474,"byte_end":533541,"line_start":46,"line_end":46,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6799},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":533737,"byte_end":533744,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LineWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying sink or stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying sink or stream that this combinator is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":533622,"byte_end":533703,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ pulling from.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":533708,"byte_end":533725,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":14991},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":537647,"byte_end":537652,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":14994},{"krate":0,"index":14995},{"krate":0,"index":14996}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6852},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538018,"byte_end":538025,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":537944,"byte_end":538006,"line_start":32,"line_end":32,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6853},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538357,"byte_end":538364,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538094,"byte_end":538164,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538169,"byte_end":538172,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538177,"byte_end":538250,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538255,"byte_end":538328,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538333,"byte_end":538345,"line_start":41,"line_end":41,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6854},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538723,"byte_end":538734,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538453,"byte_end":538530,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538535,"byte_end":538538,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538543,"byte_end":538616,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538621,"byte_end":538694,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538699,"byte_end":538711,"line_start":50,"line_end":50,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6855},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538937,"byte_end":538947,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":538869,"byte_end":538925,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":15040},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/close.rs","byte_start":541761,"byte_end":541766,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":15043}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/close.rs","byte_start":541599,"byte_end":541664,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/close.rs","byte_start":541682,"byte_end":541749,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":6944},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543319,"byte_end":543323,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542470,"byte_end":542545,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542546,"byte_end":542549,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542550,"byte_end":542633,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542634,"byte_end":542714,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542715,"byte_end":542787,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542788,"byte_end":542801,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542802,"byte_end":542805,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542806,"byte_end":542853,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542854,"byte_end":542857,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542858,"byte_end":542872,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542873,"byte_end":542876,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542877,"byte_end":542884,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542885,"byte_end":542926,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542927,"byte_end":542978,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542979,"byte_end":542982,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":542983,"byte_end":543026,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543027,"byte_end":543074,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543075,"byte_end":543078,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543079,"byte_end":543132,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543133,"byte_end":543159,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543160,"byte_end":543163,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543164,"byte_end":543189,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543190,"byte_end":543243,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543244,"byte_end":543303,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543304,"byte_end":543311,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15057},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543668,"byte_end":543672,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":15061}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6989},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":545072,"byte_end":545080,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544216,"byte_end":544291,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544292,"byte_end":544295,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544296,"byte_end":544382,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544383,"byte_end":544463,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544464,"byte_end":544536,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544537,"byte_end":544550,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544551,"byte_end":544554,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544555,"byte_end":544602,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544603,"byte_end":544606,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544607,"byte_end":544621,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544622,"byte_end":544625,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544626,"byte_end":544633,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544634,"byte_end":544675,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544676,"byte_end":544727,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544728,"byte_end":544731,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544732,"byte_end":544775,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544776,"byte_end":544823,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544824,"byte_end":544827,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544828,"byte_end":544885,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544886,"byte_end":544912,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544913,"byte_end":544916,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544917,"byte_end":544942,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544943,"byte_end":544996,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":544997,"byte_end":545056,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":545057,"byte_end":545064,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15111},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":545413,"byte_end":545420,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":15115},{"krate":0,"index":15116},{"krate":0,"index":15117}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15164},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547342,"byte_end":547348,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":15166}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":546575,"byte_end":546638,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":546639,"byte_end":546672,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":546673,"byte_end":546676,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":546677,"byte_end":546745,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":546746,"byte_end":546828,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":546829,"byte_end":546908,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":546909,"byte_end":546934,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":546935,"byte_end":546938,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":546939,"byte_end":547005,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547006,"byte_end":547073,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547074,"byte_end":547107,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547108,"byte_end":547111,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547112,"byte_end":547151,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547152,"byte_end":547191,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547192,"byte_end":547233,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547234,"byte_end":547297,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7042},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547928,"byte_end":547931,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547407,"byte_end":547482,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547487,"byte_end":547490,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547495,"byte_end":547569,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547574,"byte_end":547642,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547647,"byte_end":547685,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547690,"byte_end":547693,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547698,"byte_end":547712,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547717,"byte_end":547720,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547725,"byte_end":547732,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547737,"byte_end":547765,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547770,"byte_end":547773,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547778,"byte_end":547817,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547822,"byte_end":547870,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547875,"byte_end":547904,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547909,"byte_end":547916,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7043},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548355,"byte_end":548365,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548010,"byte_end":548067,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548072,"byte_end":548075,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548080,"byte_end":548094,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548099,"byte_end":548102,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548107,"byte_end":548114,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548119,"byte_end":548147,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548152,"byte_end":548155,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548160,"byte_end":548199,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548204,"byte_end":548252,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548257,"byte_end":548286,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548291,"byte_end":548294,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548299,"byte_end":548331,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548336,"byte_end":548343,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7044},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548773,"byte_end":548780,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548422,"byte_end":548482,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548487,"byte_end":548490,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548495,"byte_end":548509,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548514,"byte_end":548517,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548522,"byte_end":548529,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548534,"byte_end":548562,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548567,"byte_end":548570,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548575,"byte_end":548614,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548619,"byte_end":548667,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548672,"byte_end":548701,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548706,"byte_end":548709,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548714,"byte_end":548749,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548754,"byte_end":548761,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7045},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549352,"byte_end":549359,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548836,"byte_end":548904,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548909,"byte_end":548912,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548917,"byte_end":548990,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":548995,"byte_end":549057,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549062,"byte_end":549065,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549070,"byte_end":549084,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549089,"byte_end":549092,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549097,"byte_end":549104,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549109,"byte_end":549137,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549142,"byte_end":549145,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549150,"byte_end":549193,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549198,"byte_end":549246,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549251,"byte_end":549280,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549285,"byte_end":549288,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549293,"byte_end":549328,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549333,"byte_end":549340,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7046},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550017,"byte_end":550025,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549423,"byte_end":549471,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549476,"byte_end":549479,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549484,"byte_end":549498,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549503,"byte_end":549506,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549511,"byte_end":549518,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549523,"byte_end":549564,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549569,"byte_end":549623,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549628,"byte_end":549631,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549636,"byte_end":549688,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549693,"byte_end":549696,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549701,"byte_end":549736,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549741,"byte_end":549744,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549749,"byte_end":549792,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549797,"byte_end":549832,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549837,"byte_end":549840,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549845,"byte_end":549889,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549894,"byte_end":549929,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549934,"byte_end":549993,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":549998,"byte_end":550005,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7047},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550493,"byte_end":550505,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550083,"byte_end":550120,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550125,"byte_end":550128,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550133,"byte_end":550147,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550152,"byte_end":550155,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550160,"byte_end":550167,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550172,"byte_end":550200,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550205,"byte_end":550208,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550213,"byte_end":550265,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550270,"byte_end":550273,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550278,"byte_end":550313,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550318,"byte_end":550321,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550326,"byte_end":550351,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550356,"byte_end":550391,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550396,"byte_end":550399,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550404,"byte_end":550429,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550434,"byte_end":550469,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550474,"byte_end":550481,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7091},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553341,"byte_end":553346,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":7092}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553240,"byte_end":553280,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553281,"byte_end":553329,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7093},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553906,"byte_end":553911,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553367,"byte_end":553414,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553415,"byte_end":553418,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553419,"byte_end":553491,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553492,"byte_end":553495,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553496,"byte_end":553510,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553511,"byte_end":553514,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553515,"byte_end":553580,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553581,"byte_end":553584,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553585,"byte_end":553592,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553593,"byte_end":553634,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553635,"byte_end":553677,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553678,"byte_end":553681,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553682,"byte_end":553717,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553718,"byte_end":553751,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553752,"byte_end":553798,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553799,"byte_end":553830,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553831,"byte_end":553890,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553891,"byte_end":553898,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15192},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/fill_buf.rs","byte_start":554979,"byte_end":554986,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":15195}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/fill_buf.rs","byte_start":554809,"byte_end":554882,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/fill_buf.rs","byte_start":554900,"byte_end":554967,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15200},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/flush.rs","byte_start":556758,"byte_end":556763,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":15203}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/flush.rs","byte_start":556596,"byte_end":556661,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/flush.rs","byte_start":556679,"byte_end":556746,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15213},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/lines.rs","byte_start":557683,"byte_end":557688,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":15215},{"krate":0,"index":15216},{"krate":0,"index":15217},{"krate":0,"index":15218}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15256},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read.rs","byte_start":558888,"byte_end":558892,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":15259},{"krate":0,"index":15260}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read.rs","byte_start":558729,"byte_end":558791,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read.rs","byte_start":558809,"byte_end":558876,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15265},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_vectored.rs","byte_start":559784,"byte_end":559796,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":15268},{"krate":0,"index":15269}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_vectored.rs","byte_start":559607,"byte_end":559687,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_vectored.rs","byte_start":559705,"byte_end":559772,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15274},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_exact.rs","byte_start":560762,"byte_end":560771,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":15277},{"krate":0,"index":15278}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_exact.rs","byte_start":560591,"byte_end":560665,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_exact.rs","byte_start":560683,"byte_end":560750,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15283},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_line.rs","byte_start":562111,"byte_end":562119,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":15286},{"krate":0,"index":15287},{"krate":0,"index":15288},{"krate":0,"index":15289}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_line.rs","byte_start":561939,"byte_end":562014,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_line.rs","byte_start":562032,"byte_end":562099,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15294},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":563927,"byte_end":563936,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":15297},{"krate":0,"index":15298},{"krate":0,"index":15299}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":563754,"byte_end":563830,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":563848,"byte_end":563915,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15304},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_string.rs","byte_start":566942,"byte_end":566954,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":15307},{"krate":0,"index":15308},{"krate":0,"index":15309},{"krate":0,"index":15310}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_string.rs","byte_start":566763,"byte_end":566845,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_string.rs","byte_start":566863,"byte_end":566930,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15315},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_until.rs","byte_start":568792,"byte_end":568801,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":15318},{"krate":0,"index":15319},{"krate":0,"index":15320},{"krate":0,"index":15321}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_until.rs","byte_start":568618,"byte_end":568695,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_until.rs","byte_start":568713,"byte_end":568780,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7541},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570580,"byte_end":570586,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7542}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570478,"byte_end":570519,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570520,"byte_end":570568,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7543},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":571143,"byte_end":571149,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570606,"byte_end":570675,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570676,"byte_end":570679,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570680,"byte_end":570760,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570761,"byte_end":570780,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570781,"byte_end":570784,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570785,"byte_end":570799,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570800,"byte_end":570803,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570804,"byte_end":570811,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570812,"byte_end":570853,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570854,"byte_end":570896,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570897,"byte_end":570900,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570901,"byte_end":570929,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570930,"byte_end":570969,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":570970,"byte_end":571020,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":571021,"byte_end":571067,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":571068,"byte_end":571127,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":571128,"byte_end":571135,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15326},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/seek.rs","byte_start":572421,"byte_end":572425,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":15329},{"krate":0,"index":15330}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/seek.rs","byte_start":572258,"byte_end":572324,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/seek.rs","byte_start":572342,"byte_end":572409,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7617},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573195,"byte_end":573199,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":7618}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573095,"byte_end":573134,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573135,"byte_end":573183,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7619},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573807,"byte_end":573811,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573220,"byte_end":573297,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573298,"byte_end":573301,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573302,"byte_end":573397,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573398,"byte_end":573455,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573456,"byte_end":573459,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573460,"byte_end":573474,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573475,"byte_end":573478,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573479,"byte_end":573490,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573491,"byte_end":573532,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573533,"byte_end":573576,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573577,"byte_end":573580,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573581,"byte_end":573618,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573619,"byte_end":573651,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573652,"byte_end":573701,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573702,"byte_end":573731,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573732,"byte_end":573791,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573792,"byte_end":573799,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15335},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":574998,"byte_end":575006,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":15337}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":574901,"byte_end":574969,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":15341},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":575135,"byte_end":575144,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":15343}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":575038,"byte_end":575106,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7680},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":575877,"byte_end":575884,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":575631,"byte_end":575708,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":575713,"byte_end":575784,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":575789,"byte_end":575865,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":7684},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":576386,"byte_end":576393,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":576140,"byte_end":576217,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":576222,"byte_end":576293,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":576298,"byte_end":576374,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7701},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":577981,"byte_end":577993,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":577825,"byte_end":577900,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":577901,"byte_end":577969,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":7704},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":577997,"byte_end":578012,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":7701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7705},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":578014,"byte_end":578030,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":7701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15352},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":578939,"byte_end":578943,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":15354},{"krate":0,"index":15355}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7758},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579888,"byte_end":579893,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579135,"byte_end":579188,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579193,"byte_end":579239,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579244,"byte_end":579247,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579252,"byte_end":579262,"line_start":29,"line_end":29,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579267,"byte_end":579270,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579275,"byte_end":579352,"line_start":31,"line_end":31,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579357,"byte_end":579426,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579431,"byte_end":579434,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579439,"byte_end":579453,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579458,"byte_end":579461,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579466,"byte_end":579473,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579478,"byte_end":579519,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579524,"byte_end":579568,"line_start":38,"line_end":38,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579573,"byte_end":579576,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579581,"byte_end":579628,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579633,"byte_end":579661,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579666,"byte_end":579669,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579674,"byte_end":579708,"line_start":43,"line_end":43,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579713,"byte_end":579755,"line_start":44,"line_end":44,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579760,"byte_end":579763,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579768,"byte_end":579800,"line_start":46,"line_end":46,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579805,"byte_end":579864,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579869,"byte_end":579876,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7759},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580804,"byte_end":580813,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579940,"byte_end":580011,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580016,"byte_end":580090,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580095,"byte_end":580170,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580175,"byte_end":580199,"line_start":56,"line_end":56,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580204,"byte_end":580207,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580212,"byte_end":580226,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580231,"byte_end":580234,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580239,"byte_end":580246,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580251,"byte_end":580292,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580297,"byte_end":580341,"line_start":62,"line_end":62,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580346,"byte_end":580349,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580354,"byte_end":580401,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580406,"byte_end":580434,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580439,"byte_end":580442,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580447,"byte_end":580481,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580486,"byte_end":580528,"line_start":68,"line_end":68,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580533,"byte_end":580536,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580541,"byte_end":580562,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580567,"byte_end":580599,"line_start":71,"line_end":71,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580604,"byte_end":580607,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580612,"byte_end":580635,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580640,"byte_end":580682,"line_start":74,"line_end":74,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580687,"byte_end":580708,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580713,"byte_end":580716,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580721,"byte_end":580780,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580785,"byte_end":580792,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":15391},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583368,"byte_end":583374,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":15393},{"krate":0,"index":15394}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582413,"byte_end":582460,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582461,"byte_end":582464,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582465,"byte_end":582541,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582542,"byte_end":582620,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582621,"byte_end":582697,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582698,"byte_end":582773,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582774,"byte_end":582847,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582848,"byte_end":582879,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582880,"byte_end":582883,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582884,"byte_end":582955,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":582956,"byte_end":583035,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583036,"byte_end":583063,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583064,"byte_end":583067,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583068,"byte_end":583142,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583143,"byte_end":583217,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583218,"byte_end":583297,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583298,"byte_end":583339,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7783},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583683,"byte_end":583686,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583459,"byte_end":583530,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583535,"byte_end":583545,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583550,"byte_end":583553,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583558,"byte_end":583632,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583637,"byte_end":583671,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7784},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583865,"byte_end":583872,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583768,"byte_end":583835,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583840,"byte_end":583853,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7785},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584017,"byte_end":584024,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583919,"byte_end":583987,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583992,"byte_end":584005,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7786},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584155,"byte_end":584165,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584083,"byte_end":584143,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7787},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584306,"byte_end":584311,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584209,"byte_end":584281,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584286,"byte_end":584294,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":7788},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584458,"byte_end":584461,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584366,"byte_end":584433,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584438,"byte_end":584446,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":7789},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584907,"byte_end":584910,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584514,"byte_end":584574,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584579,"byte_end":584582,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584587,"byte_end":584599,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584604,"byte_end":584607,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584612,"byte_end":584685,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584690,"byte_end":584767,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584772,"byte_end":584775,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584780,"byte_end":584837,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":584842,"byte_end":584895,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15398},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write.rs","byte_start":586097,"byte_end":586102,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":15401},{"krate":0,"index":15402}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write.rs","byte_start":585935,"byte_end":586000,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write.rs","byte_start":586018,"byte_end":586085,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15407},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_vectored.rs","byte_start":586993,"byte_end":587006,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":15410},{"krate":0,"index":15411}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_vectored.rs","byte_start":586813,"byte_end":586896,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_vectored.rs","byte_start":586914,"byte_end":586981,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15416},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_all.rs","byte_start":587965,"byte_end":587973,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":15419},{"krate":0,"index":15420}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_all.rs","byte_start":587795,"byte_end":587868,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_all.rs","byte_start":587886,"byte_end":587953,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":7909},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484715,"byte_end":484727,"line_start":155,"line_end":155,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":7910},{"krate":0,"index":7912},{"krate":0,"index":7914},{"krate":0,"index":7916},{"krate":0,"index":7918},{"krate":0,"index":7920},{"krate":0,"index":7922},{"krate":0,"index":7923}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484633,"byte_end":484704,"line_start":154,"line_end":154,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7910},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485580,"byte_end":485585,"line_start":179,"line_end":179,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":7909},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484745,"byte_end":484810,"line_start":156,"line_end":156,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484815,"byte_end":484818,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484823,"byte_end":484903,"line_start":158,"line_end":158,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484908,"byte_end":484980,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484985,"byte_end":485006,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485011,"byte_end":485014,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485019,"byte_end":485033,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485038,"byte_end":485041,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485046,"byte_end":485053,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485058,"byte_end":485099,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485104,"byte_end":485148,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485153,"byte_end":485156,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485161,"byte_end":485205,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485210,"byte_end":485254,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485259,"byte_end":485262,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485267,"byte_end":485311,"line_start":171,"line_end":171,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485316,"byte_end":485348,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485353,"byte_end":485356,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485361,"byte_end":485394,"line_start":174,"line_end":174,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485399,"byte_end":485442,"line_start":175,"line_end":175,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485447,"byte_end":485496,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485501,"byte_end":485560,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485565,"byte_end":485572,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7912},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486638,"byte_end":486642,"line_start":211,"line_end":211,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":7909},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485736,"byte_end":485810,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485815,"byte_end":485851,"line_start":188,"line_end":188,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485856,"byte_end":485859,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485864,"byte_end":485942,"line_start":190,"line_end":190,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485947,"byte_end":485974,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485979,"byte_end":485982,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":485987,"byte_end":486001,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486006,"byte_end":486009,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486014,"byte_end":486021,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486026,"byte_end":486067,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486072,"byte_end":486116,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486121,"byte_end":486124,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486129,"byte_end":486176,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486181,"byte_end":486211,"line_start":200,"line_end":200,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486216,"byte_end":486219,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486224,"byte_end":486276,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486281,"byte_end":486284,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486289,"byte_end":486360,"line_start":204,"line_end":204,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486365,"byte_end":486429,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486434,"byte_end":486479,"line_start":206,"line_end":206,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486484,"byte_end":486509,"line_start":207,"line_end":207,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486514,"byte_end":486554,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486559,"byte_end":486618,"line_start":209,"line_end":209,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486623,"byte_end":486630,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7914},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487048,"byte_end":487061,"line_start":223,"line_end":223,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":7909},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486810,"byte_end":486894,"line_start":218,"line_end":218,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486899,"byte_end":486917,"line_start":219,"line_end":219,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486922,"byte_end":486925,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":486930,"byte_end":487008,"line_start":221,"line_end":221,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487013,"byte_end":487040,"line_start":222,"line_end":222,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7916},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488472,"byte_end":488482,"line_start":267,"line_end":267,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":7909},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487259,"byte_end":487331,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487336,"byte_end":487394,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487399,"byte_end":487402,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487407,"byte_end":487481,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487486,"byte_end":487489,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487494,"byte_end":487571,"line_start":235,"line_end":235,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487576,"byte_end":487598,"line_start":236,"line_end":236,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487603,"byte_end":487606,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487611,"byte_end":487625,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487630,"byte_end":487633,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487638,"byte_end":487645,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487650,"byte_end":487691,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487696,"byte_end":487740,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487745,"byte_end":487748,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487753,"byte_end":487800,"line_start":244,"line_end":244,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487805,"byte_end":487835,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487840,"byte_end":487843,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487848,"byte_end":487890,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487895,"byte_end":487898,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487903,"byte_end":487940,"line_start":249,"line_end":249,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":487945,"byte_end":488004,"line_start":250,"line_end":250,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488009,"byte_end":488016,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488021,"byte_end":488024,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488029,"byte_end":488069,"line_start":253,"line_end":253,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488074,"byte_end":488077,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488082,"byte_end":488089,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488094,"byte_end":488135,"line_start":256,"line_end":256,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488140,"byte_end":488190,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488195,"byte_end":488198,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488203,"byte_end":488250,"line_start":259,"line_end":259,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488255,"byte_end":488285,"line_start":260,"line_end":260,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488290,"byte_end":488293,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488298,"byte_end":488352,"line_start":262,"line_end":262,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488357,"byte_end":488360,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488365,"byte_end":488438,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488443,"byte_end":488452,"line_start":265,"line_end":265,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488457,"byte_end":488464,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7918},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489287,"byte_end":489298,"line_start":293,"line_end":293,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":7909},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488657,"byte_end":488730,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488735,"byte_end":488738,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488743,"byte_end":488801,"line_start":276,"line_end":276,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488806,"byte_end":488809,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488814,"byte_end":488828,"line_start":278,"line_end":278,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488833,"byte_end":488836,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488841,"byte_end":488848,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488853,"byte_end":488894,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488899,"byte_end":488943,"line_start":282,"line_end":282,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488948,"byte_end":488951,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":488956,"byte_end":489003,"line_start":284,"line_end":284,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489008,"byte_end":489051,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489056,"byte_end":489059,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489064,"byte_end":489119,"line_start":287,"line_end":287,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489124,"byte_end":489127,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489132,"byte_end":489157,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489162,"byte_end":489203,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489208,"byte_end":489267,"line_start":291,"line_end":291,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489272,"byte_end":489279,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7920},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490119,"byte_end":490133,"line_start":319,"line_end":319,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":7909},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489479,"byte_end":489552,"line_start":300,"line_end":300,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489557,"byte_end":489560,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489565,"byte_end":489623,"line_start":302,"line_end":302,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489628,"byte_end":489631,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489636,"byte_end":489650,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489655,"byte_end":489658,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489663,"byte_end":489670,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489675,"byte_end":489716,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489721,"byte_end":489765,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489770,"byte_end":489773,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489778,"byte_end":489825,"line_start":310,"line_end":310,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489830,"byte_end":489876,"line_start":311,"line_end":311,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489881,"byte_end":489884,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489889,"byte_end":489947,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489952,"byte_end":489955,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489960,"byte_end":489985,"line_start":315,"line_end":315,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":489990,"byte_end":490035,"line_start":316,"line_end":316,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490040,"byte_end":490099,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490104,"byte_end":490111,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7922},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491476,"byte_end":491481,"line_start":355,"line_end":355,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":7909},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490319,"byte_end":490390,"line_start":326,"line_end":326,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490395,"byte_end":490398,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490403,"byte_end":490473,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490478,"byte_end":490503,"line_start":329,"line_end":329,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490508,"byte_end":490511,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490516,"byte_end":490530,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490535,"byte_end":490538,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490543,"byte_end":490550,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490555,"byte_end":490596,"line_start":334,"line_end":334,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490601,"byte_end":490651,"line_start":335,"line_end":335,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490656,"byte_end":490659,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490664,"byte_end":490734,"line_start":337,"line_end":337,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490739,"byte_end":490809,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490814,"byte_end":490865,"line_start":339,"line_end":339,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490870,"byte_end":490873,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490878,"byte_end":490921,"line_start":341,"line_end":341,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490926,"byte_end":490989,"line_start":342,"line_end":342,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":490994,"byte_end":491041,"line_start":343,"line_end":343,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491046,"byte_end":491049,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491054,"byte_end":491059,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491064,"byte_end":491135,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491140,"byte_end":491192,"line_start":347,"line_end":347,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491197,"byte_end":491249,"line_start":348,"line_end":348,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491254,"byte_end":491259,"line_start":349,"line_end":349,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491264,"byte_end":491267,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491272,"byte_end":491334,"line_start":351,"line_end":351,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491339,"byte_end":491392,"line_start":352,"line_end":352,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491397,"byte_end":491456,"line_start":353,"line_end":353,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491461,"byte_end":491468,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7923},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492262,"byte_end":492266,"line_start":382,"line_end":382,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":7909},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491669,"byte_end":491739,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491744,"byte_end":491775,"line_start":364,"line_end":364,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491780,"byte_end":491783,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491788,"byte_end":491802,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491807,"byte_end":491810,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491815,"byte_end":491822,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491827,"byte_end":491868,"line_start":369,"line_end":369,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491873,"byte_end":491917,"line_start":370,"line_end":370,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491922,"byte_end":491925,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491930,"byte_end":491977,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":491982,"byte_end":492010,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492015,"byte_end":492018,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492023,"byte_end":492057,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492062,"byte_end":492104,"line_start":376,"line_end":376,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492109,"byte_end":492112,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492117,"byte_end":492138,"line_start":378,"line_end":378,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492143,"byte_end":492178,"line_start":379,"line_end":379,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492183,"byte_end":492242,"line_start":380,"line_end":380,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492247,"byte_end":492254,"line_start":381,"line_end":381,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":7926},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493075,"byte_end":493088,"line_start":408,"line_end":408,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":7927},{"krate":0,"index":7928},{"krate":0,"index":7929},{"krate":0,"index":7931},{"krate":0,"index":7933}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492992,"byte_end":493064,"line_start":407,"line_end":407,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7927},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493829,"byte_end":493834,"line_start":431,"line_end":431,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":7926},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493107,"byte_end":493172,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493177,"byte_end":493180,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493185,"byte_end":493199,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493204,"byte_end":493207,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493212,"byte_end":493219,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493224,"byte_end":493265,"line_start":414,"line_end":414,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493270,"byte_end":493319,"line_start":415,"line_end":415,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493324,"byte_end":493361,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493366,"byte_end":493369,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493374,"byte_end":493408,"line_start":418,"line_end":418,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493413,"byte_end":493416,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493421,"byte_end":493426,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493431,"byte_end":493477,"line_start":421,"line_end":421,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493482,"byte_end":493549,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493554,"byte_end":493597,"line_start":423,"line_end":423,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493602,"byte_end":493645,"line_start":424,"line_end":424,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493650,"byte_end":493682,"line_start":425,"line_end":425,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493687,"byte_end":493692,"line_start":426,"line_end":426,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493697,"byte_end":493700,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493705,"byte_end":493745,"line_start":428,"line_end":428,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493750,"byte_end":493809,"line_start":429,"line_end":429,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493814,"byte_end":493821,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7928},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494043,"byte_end":494048,"line_start":439,"line_end":439,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":7926},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493970,"byte_end":494035,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7929},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494390,"byte_end":494395,"line_start":450,"line_end":450,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":7926},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494184,"byte_end":494255,"line_start":446,"line_end":446,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494260,"byte_end":494263,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494268,"byte_end":494350,"line_start":448,"line_end":448,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494355,"byte_end":494382,"line_start":449,"line_end":449,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7931},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494805,"byte_end":494819,"line_start":462,"line_end":462,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":7926},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494561,"byte_end":494647,"line_start":457,"line_end":457,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494652,"byte_end":494670,"line_start":458,"line_end":458,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494675,"byte_end":494678,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494683,"byte_end":494765,"line_start":460,"line_end":460,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":494770,"byte_end":494797,"line_start":461,"line_end":461,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7933},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495665,"byte_end":495674,"line_start":489,"line_end":489,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":7926},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495012,"byte_end":495044,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495049,"byte_end":495052,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495057,"byte_end":495138,"line_start":471,"line_end":471,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495143,"byte_end":495165,"line_start":472,"line_end":472,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495170,"byte_end":495173,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495178,"byte_end":495256,"line_start":474,"line_end":474,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495261,"byte_end":495264,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495269,"byte_end":495283,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495288,"byte_end":495291,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495296,"byte_end":495303,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495308,"byte_end":495349,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495354,"byte_end":495399,"line_start":480,"line_end":480,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495404,"byte_end":495407,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495412,"byte_end":495459,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495464,"byte_end":495467,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495472,"byte_end":495515,"line_start":484,"line_end":484,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495520,"byte_end":495523,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495528,"byte_end":495581,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495586,"byte_end":495645,"line_start":487,"line_end":487,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":495650,"byte_end":495657,"line_start":488,"line_end":488,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":7937},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499530,"byte_end":499542,"line_start":602,"line_end":602,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":7938},{"krate":0,"index":7939}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499448,"byte_end":499519,"line_start":601,"line_end":601,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7938},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499812,"byte_end":499816,"line_start":608,"line_end":608,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":7937},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499560,"byte_end":499629,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499634,"byte_end":499687,"line_start":604,"line_end":604,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499692,"byte_end":499695,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499700,"byte_end":499777,"line_start":606,"line_end":606,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499782,"byte_end":499804,"line_start":607,"line_end":607,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7939},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500154,"byte_end":500169,"line_start":619,"line_end":619,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":7937},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499971,"byte_end":500044,"line_start":615,"line_end":615,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500049,"byte_end":500073,"line_start":616,"line_end":616,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500078,"byte_end":500081,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500086,"byte_end":500146,"line_start":618,"line_end":618,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":7942},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500421,"byte_end":500436,"line_start":630,"line_end":630,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":7943},{"krate":0,"index":7944},{"krate":0,"index":7945},{"krate":0,"index":7947},{"krate":0,"index":7949}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500336,"byte_end":500410,"line_start":629,"line_end":629,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":7943},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501390,"byte_end":501398,"line_start":654,"line_end":654,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":7942},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500457,"byte_end":500546,"line_start":631,"line_end":631,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500551,"byte_end":500583,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500588,"byte_end":500591,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500596,"byte_end":500689,"line_start":634,"line_end":634,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500694,"byte_end":500697,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500702,"byte_end":500713,"line_start":636,"line_end":636,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500718,"byte_end":500759,"line_start":637,"line_end":637,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500764,"byte_end":500843,"line_start":638,"line_end":638,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500848,"byte_end":500851,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500856,"byte_end":500944,"line_start":640,"line_end":640,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500949,"byte_end":500952,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500957,"byte_end":501013,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501018,"byte_end":501046,"line_start":643,"line_end":643,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501051,"byte_end":501054,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501059,"byte_end":501109,"line_start":645,"line_end":645,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501114,"byte_end":501142,"line_start":646,"line_end":646,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501147,"byte_end":501150,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501155,"byte_end":501211,"line_start":648,"line_end":648,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501216,"byte_end":501244,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501249,"byte_end":501252,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501257,"byte_end":501306,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501311,"byte_end":501370,"line_start":652,"line_end":652,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501375,"byte_end":501382,"line_start":653,"line_end":653,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7944},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502199,"byte_end":502212,"line_start":678,"line_end":678,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":7942},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501541,"byte_end":501619,"line_start":661,"line_end":661,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501624,"byte_end":501627,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501632,"byte_end":501643,"line_start":663,"line_end":663,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501648,"byte_end":501689,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501694,"byte_end":501773,"line_start":665,"line_end":665,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501778,"byte_end":501781,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501786,"byte_end":501855,"line_start":667,"line_end":667,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501860,"byte_end":501863,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501868,"byte_end":501924,"line_start":669,"line_end":669,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501929,"byte_end":501957,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501962,"byte_end":501965,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":501970,"byte_end":502020,"line_start":672,"line_end":672,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502025,"byte_end":502053,"line_start":673,"line_end":673,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502058,"byte_end":502061,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502066,"byte_end":502115,"line_start":675,"line_end":675,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502120,"byte_end":502179,"line_start":676,"line_end":676,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502184,"byte_end":502191,"line_start":677,"line_end":677,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7945},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503903,"byte_end":503913,"line_start":726,"line_end":726,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":7942},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502320,"byte_end":502395,"line_start":685,"line_end":685,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502400,"byte_end":502467,"line_start":686,"line_end":686,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502472,"byte_end":502569,"line_start":687,"line_end":687,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502574,"byte_end":502577,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502582,"byte_end":502652,"line_start":689,"line_end":689,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502657,"byte_end":502731,"line_start":690,"line_end":690,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502736,"byte_end":502791,"line_start":691,"line_end":691,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502796,"byte_end":502799,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502804,"byte_end":502882,"line_start":693,"line_end":693,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502887,"byte_end":502914,"line_start":694,"line_end":694,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502919,"byte_end":502922,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":502927,"byte_end":503004,"line_start":696,"line_end":696,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503009,"byte_end":503031,"line_start":697,"line_end":697,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503036,"byte_end":503039,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503044,"byte_end":503058,"line_start":699,"line_end":699,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503063,"byte_end":503066,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503071,"byte_end":503078,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503083,"byte_end":503124,"line_start":702,"line_end":702,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503129,"byte_end":503176,"line_start":703,"line_end":703,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503181,"byte_end":503184,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503189,"byte_end":503238,"line_start":705,"line_end":705,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503243,"byte_end":503268,"line_start":706,"line_end":706,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503273,"byte_end":503276,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503281,"byte_end":503304,"line_start":708,"line_end":708,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503309,"byte_end":503370,"line_start":709,"line_end":709,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503375,"byte_end":503404,"line_start":710,"line_end":710,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503409,"byte_end":503440,"line_start":711,"line_end":711,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503445,"byte_end":503461,"line_start":712,"line_end":712,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503466,"byte_end":503469,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503474,"byte_end":503497,"line_start":714,"line_end":714,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503502,"byte_end":503563,"line_start":715,"line_end":715,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503568,"byte_end":503597,"line_start":716,"line_end":716,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503602,"byte_end":503632,"line_start":717,"line_end":717,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503637,"byte_end":503653,"line_start":718,"line_end":718,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503658,"byte_end":503661,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503666,"byte_end":503689,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503694,"byte_end":503755,"line_start":721,"line_end":721,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503760,"byte_end":503789,"line_start":722,"line_end":722,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503794,"byte_end":503819,"line_start":723,"line_end":723,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503824,"byte_end":503883,"line_start":724,"line_end":724,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":503888,"byte_end":503895,"line_start":725,"line_end":725,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7947},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506092,"byte_end":506101,"line_start":784,"line_end":784,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":7942},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504110,"byte_end":504185,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504190,"byte_end":504261,"line_start":734,"line_end":734,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504266,"byte_end":504361,"line_start":735,"line_end":735,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504366,"byte_end":504369,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504374,"byte_end":504444,"line_start":737,"line_end":737,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504449,"byte_end":504524,"line_start":738,"line_end":738,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504529,"byte_end":504599,"line_start":739,"line_end":739,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504604,"byte_end":504614,"line_start":740,"line_end":740,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504619,"byte_end":504622,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504627,"byte_end":504705,"line_start":742,"line_end":742,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504710,"byte_end":504737,"line_start":743,"line_end":743,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504742,"byte_end":504745,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504750,"byte_end":504827,"line_start":745,"line_end":745,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504832,"byte_end":504854,"line_start":746,"line_end":746,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504859,"byte_end":504862,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504867,"byte_end":504879,"line_start":748,"line_end":748,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504884,"byte_end":504887,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504892,"byte_end":504965,"line_start":750,"line_end":750,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":504970,"byte_end":505043,"line_start":751,"line_end":751,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505048,"byte_end":505122,"line_start":752,"line_end":752,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505127,"byte_end":505183,"line_start":753,"line_end":753,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505188,"byte_end":505191,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505196,"byte_end":505243,"line_start":755,"line_end":755,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505248,"byte_end":505251,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505256,"byte_end":505270,"line_start":757,"line_end":757,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505275,"byte_end":505278,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505283,"byte_end":505290,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505295,"byte_end":505336,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505341,"byte_end":505388,"line_start":761,"line_end":761,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505393,"byte_end":505396,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505401,"byte_end":505447,"line_start":763,"line_end":763,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505452,"byte_end":505484,"line_start":764,"line_end":764,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505489,"byte_end":505492,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505497,"byte_end":505520,"line_start":766,"line_end":766,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505525,"byte_end":505579,"line_start":767,"line_end":767,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505584,"byte_end":505613,"line_start":768,"line_end":768,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505618,"byte_end":505647,"line_start":769,"line_end":769,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505652,"byte_end":505668,"line_start":770,"line_end":770,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505673,"byte_end":505676,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505681,"byte_end":505704,"line_start":772,"line_end":772,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505709,"byte_end":505763,"line_start":773,"line_end":773,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505768,"byte_end":505797,"line_start":774,"line_end":774,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505802,"byte_end":505829,"line_start":775,"line_end":775,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505834,"byte_end":505850,"line_start":776,"line_end":776,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505855,"byte_end":505858,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505863,"byte_end":505886,"line_start":778,"line_end":778,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505891,"byte_end":505945,"line_start":779,"line_end":779,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505950,"byte_end":505979,"line_start":780,"line_end":780,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":505984,"byte_end":506008,"line_start":781,"line_end":781,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506013,"byte_end":506072,"line_start":782,"line_end":782,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506077,"byte_end":506084,"line_start":783,"line_end":783,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7949},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507625,"byte_end":507630,"line_start":823,"line_end":823,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":7942},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506279,"byte_end":506330,"line_start":791,"line_end":791,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506335,"byte_end":506422,"line_start":792,"line_end":792,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506427,"byte_end":506430,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506435,"byte_end":506501,"line_start":794,"line_end":794,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506506,"byte_end":506588,"line_start":795,"line_end":795,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506593,"byte_end":506653,"line_start":796,"line_end":796,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506658,"byte_end":506661,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506666,"byte_end":506701,"line_start":798,"line_end":798,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506706,"byte_end":506728,"line_start":799,"line_end":799,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506733,"byte_end":506736,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506741,"byte_end":506753,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506758,"byte_end":506761,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506766,"byte_end":506857,"line_start":803,"line_end":803,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506862,"byte_end":506865,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506870,"byte_end":506932,"line_start":805,"line_end":805,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506937,"byte_end":506940,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506945,"byte_end":506959,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506964,"byte_end":506967,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506972,"byte_end":506979,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":506984,"byte_end":507025,"line_start":810,"line_end":810,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507030,"byte_end":507077,"line_start":811,"line_end":811,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507082,"byte_end":507117,"line_start":812,"line_end":812,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507122,"byte_end":507125,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507130,"byte_end":507185,"line_start":814,"line_end":814,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507190,"byte_end":507193,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507198,"byte_end":507260,"line_start":816,"line_end":816,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507265,"byte_end":507336,"line_start":817,"line_end":817,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507341,"byte_end":507412,"line_start":818,"line_end":818,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507417,"byte_end":507488,"line_start":819,"line_end":819,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507493,"byte_end":507541,"line_start":820,"line_end":820,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507546,"byte_end":507605,"line_start":821,"line_end":821,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507610,"byte_end":507617,"line_start":822,"line_end":822,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7981},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":7982},{"krate":0,"index":8164},{"krate":0,"index":8165},{"krate":0,"index":8168},{"krate":0,"index":8171},{"krate":0,"index":8174},{"krate":0,"index":8177},{"krate":0,"index":8259}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11853,"byte_end":11878,"line_start":338,"line_end":338,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mod.rs","byte_start":588889,"byte_end":588936,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mod.rs","byte_start":588937,"byte_end":588940,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mod.rs","byte_start":588941,"byte_end":589016,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mod.rs","byte_start":589017,"byte_end":589074,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":8036},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590497,"byte_end":590502,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":8038},{"krate":0,"index":8039},{"krate":0,"index":8040}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590170,"byte_end":590196,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590197,"byte_end":590200,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590201,"byte_end":590215,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590216,"byte_end":590219,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590220,"byte_end":590299,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590300,"byte_end":590382,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590383,"byte_end":590467,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590468,"byte_end":590485,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8063},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591728,"byte_end":591731,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591678,"byte_end":591716,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":8064},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592158,"byte_end":592168,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591912,"byte_end":591967,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591972,"byte_end":591975,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591980,"byte_end":591994,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591999,"byte_end":592002,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592007,"byte_end":592014,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592019,"byte_end":592048,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592053,"byte_end":592056,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592061,"byte_end":592091,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592096,"byte_end":592134,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592139,"byte_end":592146,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8067},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592382,"byte_end":592390,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592254,"byte_end":592298,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592303,"byte_end":592306,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592311,"byte_end":592370,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8068},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592811,"byte_end":592815,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592646,"byte_end":592682,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592687,"byte_end":592690,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592695,"byte_end":592768,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592773,"byte_end":592799,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":8069},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593443,"byte_end":593450,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592933,"byte_end":592988,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592993,"byte_end":592996,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593001,"byte_end":593076,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593081,"byte_end":593155,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593160,"byte_end":593163,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593168,"byte_end":593182,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593187,"byte_end":593190,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593195,"byte_end":593202,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593207,"byte_end":593248,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593253,"byte_end":593282,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593287,"byte_end":593290,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593295,"byte_end":593329,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593334,"byte_end":593360,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593365,"byte_end":593405,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593410,"byte_end":593419,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":593424,"byte_end":593431,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8073},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":595172,"byte_end":595187,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":8076},{"krate":0,"index":8077}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":595079,"byte_end":595160,"line_start":178,"line_end":178,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":8092},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597722,"byte_end":597732,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":8095}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597558,"byte_end":597622,"line_start":252,"line_end":252,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597623,"byte_end":597696,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597697,"byte_end":597710,"line_start":254,"line_end":254,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8099},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598301,"byte_end":598304,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597822,"byte_end":597882,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597887,"byte_end":597890,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597895,"byte_end":597908,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597913,"byte_end":597916,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597921,"byte_end":597928,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597933,"byte_end":597974,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597979,"byte_end":598022,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598027,"byte_end":598030,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598035,"byte_end":598088,"line_start":268,"line_end":268,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598093,"byte_end":598098,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598103,"byte_end":598192,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598197,"byte_end":598239,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598244,"byte_end":598249,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598254,"byte_end":598263,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598268,"byte_end":598275,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598280,"byte_end":598289,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8115},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599596,"byte_end":599612,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8119},{"krate":0,"index":8120},{"krate":0,"index":8121}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599412,"byte_end":599500,"line_start":314,"line_end":314,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599501,"byte_end":599584,"line_start":315,"line_end":315,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8126},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600378,"byte_end":600381,"line_start":340,"line_end":340,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599789,"byte_end":599849,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599854,"byte_end":599857,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599862,"byte_end":599875,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599880,"byte_end":599883,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599888,"byte_end":599895,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599900,"byte_end":599941,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599946,"byte_end":600007,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600012,"byte_end":600015,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600020,"byte_end":600073,"line_start":331,"line_end":331,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600078,"byte_end":600083,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600088,"byte_end":600177,"line_start":333,"line_end":333,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600182,"byte_end":600272,"line_start":334,"line_end":334,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600277,"byte_end":600316,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600321,"byte_end":600326,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600331,"byte_end":600340,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600345,"byte_end":600352,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600357,"byte_end":600366,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":15451},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613435,"byte_end":613444,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":15453},{"krate":0,"index":15454}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":12951013,"byte_end":12951022,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8300},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614854,"byte_end":614857,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613550,"byte_end":613632,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613637,"byte_end":613705,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613710,"byte_end":613713,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613718,"byte_end":613790,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613795,"byte_end":613878,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613883,"byte_end":613908,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613913,"byte_end":613916,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613921,"byte_end":613936,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613941,"byte_end":613944,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613949,"byte_end":613972,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613977,"byte_end":613980,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613985,"byte_end":613992,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613997,"byte_end":614038,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614043,"byte_end":614102,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614107,"byte_end":614110,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614115,"byte_end":614184,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614189,"byte_end":614254,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614259,"byte_end":614284,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614289,"byte_end":614332,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614337,"byte_end":614346,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614351,"byte_end":614358,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614363,"byte_end":614366,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614371,"byte_end":614394,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614399,"byte_end":614402,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614407,"byte_end":614414,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614419,"byte_end":614460,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614465,"byte_end":614517,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614522,"byte_end":614567,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614572,"byte_end":614575,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614580,"byte_end":614649,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614654,"byte_end":614739,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614744,"byte_end":614769,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614774,"byte_end":614816,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614821,"byte_end":614830,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614835,"byte_end":614842,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8301},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615362,"byte_end":615372,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":614952,"byte_end":615016,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615021,"byte_end":615089,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615094,"byte_end":615144,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615149,"byte_end":615203,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615208,"byte_end":615300,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615305,"byte_end":615350,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":15489},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615640,"byte_end":615657,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":15490}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615450,"byte_end":615500,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615501,"byte_end":615577,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615578,"byte_end":615611,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":15493},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615763,"byte_end":615774,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":15494}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615691,"byte_end":615727,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":8303},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":616045,"byte_end":616053,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615831,"byte_end":615905,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615910,"byte_end":615950,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615955,"byte_end":615958,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615963,"byte_end":616033,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":15504},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":616575,"byte_end":616582,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":616466,"byte_end":616518,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8323},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618716,"byte_end":618721,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618349,"byte_end":618417,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618422,"byte_end":618425,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618430,"byte_end":618497,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618502,"byte_end":618570,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618575,"byte_end":618649,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618654,"byte_end":618704,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":8335},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":618904,"byte_end":618911,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8337},{"krate":0,"index":8338}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8337},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":618926,"byte_end":618932,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":8335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8338},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":618941,"byte_end":618950,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8345},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":619143,"byte_end":619149,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8347}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8347},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":619174,"byte_end":619182,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":8345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8362},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":620488,"byte_end":620492,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15535},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":620848,"byte_end":620855,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15556},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":621589,"byte_end":621602,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15572},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":621944,"byte_end":621953,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15587},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":622908,"byte_end":622915,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15602},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":623626,"byte_end":623634,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15617},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":624354,"byte_end":624365,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15629},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":625250,"byte_end":625262,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15641},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":626410,"byte_end":626424,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8526},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":627189,"byte_end":627195,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":35908,"byte_end":35915,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":36045,"byte_end":36052,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":36277,"byte_end":36284,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":37058,"byte_end":37065,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":37290,"byte_end":37297,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40311,"byte_end":40315,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40422,"byte_end":40426,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":42155,"byte_end":42159,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":42272,"byte_end":42276,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/map.rs","byte_start":43254,"byte_end":43257,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/map.rs","byte_start":43426,"byte_end":43429,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/map.rs","byte_start":43691,"byte_end":43694,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/catch_unwind.rs","byte_start":44900,"byte_end":44911,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/catch_unwind.rs","byte_start":45054,"byte_end":45065,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46292,"byte_end":46302,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46503,"byte_end":46509,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46552,"byte_end":46558,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46816,"byte_end":46821,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46975,"byte_end":46985,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":47217,"byte_end":47222,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":47319,"byte_end":47324,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":47568,"byte_end":47574,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":47998,"byte_end":48004,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":50070,"byte_end":50075,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":51771,"byte_end":51777,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":51929,"byte_end":51935,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":53524,"byte_end":53529,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":55236,"byte_end":55242,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":55401,"byte_end":55407,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":55835,"byte_end":55843,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":56202,"byte_end":56212,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19059,"byte_end":19060,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/into_future.rs","byte_start":78638,"byte_end":78648,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/into_future.rs","byte_start":78799,"byte_end":78809,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/into_future.rs","byte_start":78932,"byte_end":78942,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":79651,"byte_end":79661,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":79791,"byte_end":79801,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":80044,"byte_end":80054,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":81007,"byte_end":81017,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":81260,"byte_end":81270,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten_err.rs","byte_start":84594,"byte_end":84607,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten_err.rs","byte_start":84737,"byte_end":84750,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten_err.rs","byte_start":84993,"byte_end":85006,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":61184,"byte_end":61187,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86315,"byte_end":86319,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86915,"byte_end":86919,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":87063,"byte_end":87067,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87670,"byte_end":87677,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88238,"byte_end":88245,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88390,"byte_end":88397,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88423,"byte_end":88430,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89184,"byte_end":89193,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89796,"byte_end":89805,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":90903,"byte_end":90912,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":91113,"byte_end":91122,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92442,"byte_end":92454,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92680,"byte_end":92692,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":93805,"byte_end":93817,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":94021,"byte_end":94033,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/option.rs","byte_start":95683,"byte_end":95695,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/option.rs","byte_start":95793,"byte_end":95805,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/option.rs","byte_start":96119,"byte_end":96131,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/option.rs","byte_start":96318,"byte_end":96330,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96768,"byte_end":96774,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97468,"byte_end":97474,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97616,"byte_end":97622,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":98350,"byte_end":98363,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":98929,"byte_end":98942,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":99962,"byte_end":99975,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102147,"byte_end":102152,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102331,"byte_end":102336,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102368,"byte_end":102373,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102470,"byte_end":102475,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":110462,"byte_end":110469,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":113230,"byte_end":113237,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":114225,"byte_end":114232,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":114728,"byte_end":114734,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":117170,"byte_end":117176,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":117880,"byte_end":117886,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118449,"byte_end":118458,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119465,"byte_end":119474,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119657,"byte_end":119666,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":120336,"byte_end":120345,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":128953,"byte_end":128963,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130793,"byte_end":130803,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":131951,"byte_end":131961,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132443,"byte_end":132452,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":134291,"byte_end":134300,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":135662,"byte_end":135670,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136748,"byte_end":136756,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":138187,"byte_end":138195,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139174,"byte_end":139180,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139519,"byte_end":139525,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139910,"byte_end":139916,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140297,"byte_end":140303,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140544,"byte_end":140550,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140889,"byte_end":140895,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":141171,"byte_end":141177,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":141712,"byte_end":141718,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":143464,"byte_end":143470,"line_start":193,"line_end":193,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":144525,"byte_end":144531,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":145838,"byte_end":145844,"line_start":271,"line_end":271,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":146274,"byte_end":146280,"line_start":288,"line_end":288,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chain.rs","byte_start":204609,"byte_end":204614,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chain.rs","byte_start":204840,"byte_end":204845,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chain.rs","byte_start":205054,"byte_end":205059,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/collect.rs","byte_start":206655,"byte_end":206662,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/collect.rs","byte_start":206927,"byte_end":206934,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/collect.rs","byte_start":207112,"byte_end":207119,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/unzip.rs","byte_start":208145,"byte_end":208150,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/unzip.rs","byte_start":208544,"byte_end":208549,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/unzip.rs","byte_start":208799,"byte_end":208804,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2061}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/concat.rs","byte_start":209929,"byte_end":209935,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/concat.rs","byte_start":210155,"byte_end":210161,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/concat.rs","byte_start":210869,"byte_end":210875,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/cycle.rs","byte_start":211538,"byte_end":211543,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/cycle.rs","byte_start":211699,"byte_end":211704,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/cycle.rs","byte_start":212453,"byte_end":212458,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/enumerate.rs","byte_start":213206,"byte_end":213215,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":11288},{"krate":0,"index":11289},{"krate":0,"index":11290},{"krate":0,"index":11291}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/enumerate.rs","byte_start":213401,"byte_end":213410,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/enumerate.rs","byte_start":213528,"byte_end":213537,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter.rs","byte_start":214978,"byte_end":214984,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter.rs","byte_start":215457,"byte_end":215463,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":11353},{"krate":0,"index":11354},{"krate":0,"index":11355},{"krate":0,"index":11356}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter.rs","byte_start":215786,"byte_end":215792,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter.rs","byte_start":216129,"byte_end":216135,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter_map.rs","byte_start":218307,"byte_end":218316,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2285}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter_map.rs","byte_start":218613,"byte_end":218622,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2290},{"krate":0,"index":11414},{"krate":0,"index":11415},{"krate":0,"index":11416},{"krate":0,"index":11417}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter_map.rs","byte_start":218889,"byte_end":218898,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter_map.rs","byte_start":219165,"byte_end":219174,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/flatten.rs","byte_start":221276,"byte_end":221283,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":11467},{"krate":0,"index":11468},{"krate":0,"index":11469},{"krate":0,"index":11470}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/flatten.rs","byte_start":221452,"byte_end":221459,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2338}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/flatten.rs","byte_start":221651,"byte_end":221658,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":2342}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fold.rs","byte_start":223172,"byte_end":223176,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2378}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fold.rs","byte_start":223532,"byte_end":223536,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2384}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fold.rs","byte_start":223797,"byte_end":223801,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fold.rs","byte_start":224036,"byte_end":224040,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/any.rs","byte_start":225629,"byte_end":225632,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/any.rs","byte_start":225962,"byte_end":225965,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/any.rs","byte_start":226218,"byte_end":226221,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/any.rs","byte_start":226450,"byte_end":226453,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2451}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/all.rs","byte_start":228205,"byte_end":228208,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/all.rs","byte_start":228538,"byte_end":228541,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/all.rs","byte_start":228793,"byte_end":228796,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2499}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/all.rs","byte_start":229025,"byte_end":229028,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each.rs","byte_start":230782,"byte_end":230789,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each.rs","byte_start":231082,"byte_end":231089,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each.rs","byte_start":231320,"byte_end":231327,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each.rs","byte_start":231566,"byte_end":231573,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2562},{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":232674,"byte_end":232678,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":11814},{"krate":0,"index":11815},{"krate":0,"index":11816},{"krate":0,"index":11817}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":233175,"byte_end":233179,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2597}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":233277,"byte_end":233281,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234483,"byte_end":234495,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236985,"byte_end":236997,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":237117,"byte_end":237129,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2645},{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/map.rs","byte_start":238014,"byte_end":238017,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/map.rs","byte_start":238206,"byte_end":238209,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2687},{"krate":0,"index":11938},{"krate":0,"index":11939},{"krate":0,"index":11940},{"krate":0,"index":11941}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/map.rs","byte_start":238378,"byte_end":238381,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2691}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/map.rs","byte_start":238549,"byte_end":238552,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":239664,"byte_end":239668,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":239719,"byte_end":239723,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":239874,"byte_end":239878,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":240017,"byte_end":240021,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2741},{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/select_next_some.rs","byte_start":240672,"byte_end":240686,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/select_next_some.rs","byte_start":240837,"byte_end":240851,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/select_next_some.rs","byte_start":240995,"byte_end":241009,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2782},{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242320,"byte_end":242328,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2836},{"krate":0,"index":12081},{"krate":0,"index":12082},{"krate":0,"index":12083},{"krate":0,"index":12084},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2843}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247825,"byte_end":247833,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2848}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247975,"byte_end":247983,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2853}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":249142,"byte_end":249146,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":249391,"byte_end":249395,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2859}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":249506,"byte_end":249510,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":250207,"byte_end":250214,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":250462,"byte_end":250469,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":250580,"byte_end":250587,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2874},{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":251307,"byte_end":251313,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":251665,"byte_end":251671,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":251940,"byte_end":251946,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2890},{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":253207,"byte_end":253215,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2895}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":253535,"byte_end":253543,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":253727,"byte_end":253735,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2904},{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":254106,"byte_end":254116,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2915},{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip.rs","byte_start":254781,"byte_end":254785,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2959},{"krate":0,"index":12305},{"krate":0,"index":12306},{"krate":0,"index":12307},{"krate":0,"index":12308}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip.rs","byte_start":254976,"byte_end":254980,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip.rs","byte_start":255098,"byte_end":255102,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip_while.rs","byte_start":256699,"byte_end":256708,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip_while.rs","byte_start":257160,"byte_end":257169,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":12374},{"krate":0,"index":12375},{"krate":0,"index":12376},{"krate":0,"index":12377}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip_while.rs","byte_start":257495,"byte_end":257504,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip_while.rs","byte_start":257752,"byte_end":257761,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take.rs","byte_start":260061,"byte_end":260065,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":12418},{"krate":0,"index":12419},{"krate":0,"index":12420},{"krate":0,"index":12421}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take.rs","byte_start":260238,"byte_end":260242,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take.rs","byte_start":261214,"byte_end":261218,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_while.rs","byte_start":262241,"byte_end":262250,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3102}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_while.rs","byte_start":262698,"byte_end":262707,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3107},{"krate":0,"index":12487},{"krate":0,"index":12488},{"krate":0,"index":12489},{"krate":0,"index":12490}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_while.rs","byte_start":263026,"byte_end":263035,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_while.rs","byte_start":264554,"byte_end":264563,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":265947,"byte_end":265956,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3156}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":266244,"byte_end":266253,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3160},{"krate":0,"index":12544},{"krate":0,"index":12545},{"krate":0,"index":12546},{"krate":0,"index":12547},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":268370,"byte_end":268379,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":269411,"byte_end":269420,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/then.rs","byte_start":270362,"byte_end":270366,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/then.rs","byte_start":270617,"byte_end":270621,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3216},{"krate":0,"index":12605},{"krate":0,"index":12606},{"krate":0,"index":12607},{"krate":0,"index":12608}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/then.rs","byte_start":270867,"byte_end":270871,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/then.rs","byte_start":271097,"byte_end":271101,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":272983,"byte_end":272986,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":274572,"byte_end":274575,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3274}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":274770,"byte_end":274773,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chunks.rs","byte_start":277468,"byte_end":277474,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":12710},{"krate":0,"index":12711},{"krate":0,"index":12712},{"krate":0,"index":12713}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chunks.rs","byte_start":277982,"byte_end":277988,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chunks.rs","byte_start":279604,"byte_end":279610,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3328}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/ready_chunks.rs","byte_start":280582,"byte_end":280593,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":12758},{"krate":0,"index":12759},{"krate":0,"index":12760},{"krate":0,"index":12761}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/ready_chunks.rs","byte_start":280945,"byte_end":280956,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/ready_chunks.rs","byte_start":283125,"byte_end":283136,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3372}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":284134,"byte_end":284138,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3416}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":284624,"byte_end":284628,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":284792,"byte_end":284796,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3430},{"krate":0,"index":12827},{"krate":0,"index":12828},{"krate":0,"index":12829},{"krate":0,"index":12830}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":285158,"byte_end":285162,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":286389,"byte_end":286393,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3446}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffer_unordered.rs","byte_start":287574,"byte_end":287589,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffer_unordered.rs","byte_start":287921,"byte_end":287936,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3492},{"krate":0,"index":12872},{"krate":0,"index":12873},{"krate":0,"index":12874},{"krate":0,"index":12875}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffer_unordered.rs","byte_start":288323,"byte_end":288338,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffer_unordered.rs","byte_start":289792,"byte_end":289807,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3500}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffered.rs","byte_start":290917,"byte_end":290925,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffered.rs","byte_start":291272,"byte_end":291280,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":12917},{"krate":0,"index":12918},{"krate":0,"index":12919},{"krate":0,"index":12920}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffered.rs","byte_start":291560,"byte_end":291568,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each_concurrent.rs","byte_start":293905,"byte_end":293922,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3595}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each_concurrent.rs","byte_start":294268,"byte_end":294285,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each_concurrent.rs","byte_start":294718,"byte_end":294735,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3605}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each_concurrent.rs","byte_start":294965,"byte_end":294982,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3610},{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/catch_unwind.rs","byte_start":297342,"byte_end":297353,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3652},{"krate":0,"index":13022},{"krate":0,"index":13023},{"krate":0,"index":13024},{"krate":0,"index":13025}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/catch_unwind.rs","byte_start":297545,"byte_end":297556,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/catch_unwind.rs","byte_start":298408,"byte_end":298419,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3662}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158436,"byte_end":158437,"line_start":222,"line_end":222,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/and_then.rs","byte_start":337536,"byte_end":337543,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3976}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/and_then.rs","byte_start":337836,"byte_end":337843,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3981},{"krate":0,"index":13083},{"krate":0,"index":13084},{"krate":0,"index":13085},{"krate":0,"index":13086}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/and_then.rs","byte_start":338124,"byte_end":338131,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3988}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/and_then.rs","byte_start":339274,"byte_end":339281,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3993}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_stream.rs","byte_start":340199,"byte_end":340209,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":13330},{"krate":0,"index":13331},{"krate":0,"index":13332},{"krate":0,"index":13333}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_stream.rs","byte_start":340402,"byte_end":340412,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_stream.rs","byte_start":340533,"byte_end":340543,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4029},{"krate":0,"index":4030},{"krate":0,"index":4031}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/or_else.rs","byte_start":341642,"byte_end":341648,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/or_else.rs","byte_start":341940,"byte_end":341946,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4077},{"krate":0,"index":13529},{"krate":0,"index":13530},{"krate":0,"index":13531},{"krate":0,"index":13532}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/or_else.rs","byte_start":342224,"byte_end":342230,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4084}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/or_else.rs","byte_start":343507,"byte_end":343513,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4089}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344417,"byte_end":344424,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344478,"byte_end":344485,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4126}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344648,"byte_end":344655,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4129}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344797,"byte_end":344804,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4132},{"krate":0,"index":4133}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each.rs","byte_start":345580,"byte_end":345590,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each.rs","byte_start":345886,"byte_end":345896,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each.rs","byte_start":346141,"byte_end":346151,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter.rs","byte_start":347550,"byte_end":347559,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4223}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter.rs","byte_start":347955,"byte_end":347964,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4228},{"krate":0,"index":13659},{"krate":0,"index":13660},{"krate":0,"index":13661},{"krate":0,"index":13662}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter.rs","byte_start":348207,"byte_end":348216,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter.rs","byte_start":348473,"byte_end":348482,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4240}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter_map.rs","byte_start":350623,"byte_end":350635,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4281}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter_map.rs","byte_start":350935,"byte_end":350947,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":13720},{"krate":0,"index":13721},{"krate":0,"index":13722},{"krate":0,"index":13723}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter_map.rs","byte_start":351144,"byte_end":351156,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter_map.rs","byte_start":351434,"byte_end":351446,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4300}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_flatten.rs","byte_start":353630,"byte_end":353640,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":13764},{"krate":0,"index":13765},{"krate":0,"index":13766},{"krate":0,"index":13767}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_flatten.rs","byte_start":353905,"byte_end":353915,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4336}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_flatten.rs","byte_start":354161,"byte_end":354171,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4339},{"krate":0,"index":4340}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_collect.rs","byte_start":355780,"byte_end":355790,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4381}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_collect.rs","byte_start":355930,"byte_end":355940,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4385}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_collect.rs","byte_start":356128,"byte_end":356138,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4389},{"krate":0,"index":4390}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_concat.rs","byte_start":357136,"byte_end":357145,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4419}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_concat.rs","byte_start":357364,"byte_end":357373,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4422},{"krate":0,"index":4423}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":358757,"byte_end":358766,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4476},{"krate":0,"index":4477},{"krate":0,"index":13901},{"krate":0,"index":13902},{"krate":0,"index":13903},{"krate":0,"index":13904}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":359261,"byte_end":359270,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4480},{"krate":0,"index":4481},{"krate":0,"index":4482}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":361218,"byte_end":361227,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4485}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":361886,"byte_end":361900,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4489}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":362045,"byte_end":362059,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4493}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":362246,"byte_end":362260,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_fold.rs","byte_start":362870,"byte_end":362877,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4542}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_fold.rs","byte_start":363236,"byte_end":363243,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4548}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_fold.rs","byte_start":363523,"byte_end":363530,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4554}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_fold.rs","byte_start":363784,"byte_end":363791,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4560},{"krate":0,"index":4561}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":367654,"byte_end":367663,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4603}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":367925,"byte_end":367934,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4609},{"krate":0,"index":4610}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_skip_while.rs","byte_start":369680,"byte_end":369692,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4655}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_skip_while.rs","byte_start":370148,"byte_end":370160,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4660},{"krate":0,"index":14117},{"krate":0,"index":14118},{"krate":0,"index":14119},{"krate":0,"index":14120}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_skip_while.rs","byte_start":370500,"byte_end":370512,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_skip_while.rs","byte_start":372011,"byte_end":372023,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4672}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_take_while.rs","byte_start":373251,"byte_end":373263,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4713}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_take_while.rs","byte_start":373715,"byte_end":373727,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4718},{"krate":0,"index":14186},{"krate":0,"index":14187},{"krate":0,"index":14188},{"krate":0,"index":14189}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_take_while.rs","byte_start":374065,"byte_end":374077,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_take_while.rs","byte_start":375684,"byte_end":375696,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4730}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_buffer_unordered.rs","byte_start":376984,"byte_end":377002,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4780},{"krate":0,"index":14234},{"krate":0,"index":14235},{"krate":0,"index":14236},{"krate":0,"index":14237}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_buffer_unordered.rs","byte_start":377341,"byte_end":377359,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4783},{"krate":0,"index":4784}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_buffered.rs","byte_start":379565,"byte_end":379576,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4834},{"krate":0,"index":14282},{"krate":0,"index":14283},{"krate":0,"index":14284},{"krate":0,"index":14285}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_buffered.rs","byte_start":379913,"byte_end":379924,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4837},{"krate":0,"index":4838}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":382082,"byte_end":382102,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4886}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":382467,"byte_end":382487,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4891}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":382726,"byte_end":382746,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4896}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":383194,"byte_end":383214,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4901},{"krate":0,"index":4902}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":386315,"byte_end":386328,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":386544,"byte_end":386557,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4951}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":386769,"byte_end":386782,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4954}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":388403,"byte_end":388416,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4957},{"krate":0,"index":4958},{"krate":0,"index":4959}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":389023,"byte_end":389036,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4962},{"krate":0,"index":4963}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":303819,"byte_end":303820,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391072,"byte_end":391076,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391698,"byte_end":391702,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5130},{"krate":0,"index":5131},{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392893,"byte_end":392899,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392926,"byte_end":392932,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5167},{"krate":0,"index":5168},{"krate":0,"index":5169}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":393240,"byte_end":393246,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5172}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393843,"byte_end":393853,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393897,"byte_end":393907,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5207},{"krate":0,"index":5208},{"krate":0,"index":5209}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394221,"byte_end":394231,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5213}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396751,"byte_end":396756,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396788,"byte_end":396793,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5254}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396878,"byte_end":396883,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":397132,"byte_end":397137,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5262}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":398076,"byte_end":398080,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5304}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":398209,"byte_end":398213,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":398818,"byte_end":398822,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5312}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399481,"byte_end":399488,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399520,"byte_end":399527,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5350}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399612,"byte_end":399619,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5353},{"krate":0,"index":5354},{"krate":0,"index":5355}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399864,"byte_end":399871,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5358}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400258,"byte_end":400264,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400295,"byte_end":400301,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5393}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":401066,"byte_end":401072,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5400},{"krate":0,"index":5401}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":401768,"byte_end":401781,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5429},{"krate":0,"index":5430},{"krate":0,"index":5431}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":402694,"byte_end":402707,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5434}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405594,"byte_end":405600,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5485},{"krate":0,"index":5486},{"krate":0,"index":5487},{"krate":0,"index":5488}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406904,"byte_end":406910,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5492}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":407089,"byte_end":407095,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5496},{"krate":0,"index":5497}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":407808,"byte_end":407816,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5541}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408113,"byte_end":408121,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5543}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411148,"byte_end":411166,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5554},{"krate":0,"index":5555},{"krate":0,"index":5556},{"krate":0,"index":5557}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":412615,"byte_end":412633,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5563}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":412913,"byte_end":412931,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5569},{"krate":0,"index":5570}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":414043,"byte_end":414061,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5579}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416632,"byte_end":416638,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5635}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416878,"byte_end":416884,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5641}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":417164,"byte_end":417170,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5647},{"krate":0,"index":5648}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":418718,"byte_end":418730,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5712}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":418835,"byte_end":418847,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":418878,"byte_end":418890,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5717}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419013,"byte_end":419025,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5720}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419206,"byte_end":419218,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5723},{"krate":0,"index":5724}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421800,"byte_end":421814,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421840,"byte_end":421854,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5736},{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":5739}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":423420,"byte_end":423434,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5742}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":423527,"byte_end":423541,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5745},{"krate":0,"index":5746},{"krate":0,"index":5747}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":424703,"byte_end":424717,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5750}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":424883,"byte_end":424897,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5753}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":425177,"byte_end":425191,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5758}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":425361,"byte_end":425375,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5761}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/abort.rs","byte_start":451498,"byte_end":451509,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5863}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":452868,"byte_end":452876,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5884}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":453950,"byte_end":453958,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":453995,"byte_end":454005,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":454857,"byte_end":454867,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":454915,"byte_end":454922,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":5900}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":455185,"byte_end":455192,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":455233,"byte_end":455243,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5908}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456112,"byte_end":456122,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456170,"byte_end":456174,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5914},{"krate":0,"index":5915},{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456433,"byte_end":456437,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456606,"byte_end":456616,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456661,"byte_end":456671,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456717,"byte_end":456727,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456772,"byte_end":456782,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456836,"byte_end":456844,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456893,"byte_end":456901,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/task.rs","byte_start":458386,"byte_end":458390,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/task.rs","byte_start":458425,"byte_end":458429,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/task.rs","byte_start":458461,"byte_end":458465,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6003}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/task.rs","byte_start":459542,"byte_end":459546,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6006},{"krate":0,"index":6007}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/task.rs","byte_start":460546,"byte_end":460550,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6010}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":462000,"byte_end":462015,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427762,"byte_end":427778,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427819,"byte_end":427835,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427864,"byte_end":427880,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427905,"byte_end":427921,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6089}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":428106,"byte_end":428122,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6091}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":429829,"byte_end":429845,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6094}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":429919,"byte_end":429935,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6097},{"krate":0,"index":6098},{"krate":0,"index":6099},{"krate":0,"index":6100},{"krate":0,"index":6101},{"krate":0,"index":6102},{"krate":0,"index":6103},{"krate":0,"index":6104},{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":441466,"byte_end":441482,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":6122}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":446666,"byte_end":446670,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6121}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":448925,"byte_end":448941,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6125}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":449079,"byte_end":449095,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6128},{"krate":0,"index":6129}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":449655,"byte_end":449671,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":450314,"byte_end":450330,"line_start":602,"line_end":602,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6147},{"krate":0,"index":6148},{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":450800,"byte_end":450816,"line_start":616,"line_end":616,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6152}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":451092,"byte_end":451108,"line_start":629,"line_end":629,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6157}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":451230,"byte_end":451246,"line_start":635,"line_end":635,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6160}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":465849,"byte_end":465858,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466003,"byte_end":466012,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6220},{"krate":0,"index":6221},{"krate":0,"index":6222},{"krate":0,"index":6223},{"krate":0,"index":6224},{"krate":0,"index":6225},{"krate":0,"index":6226}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":467485,"byte_end":467494,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6229}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":467593,"byte_end":467602,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6232},{"krate":0,"index":6233}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468386,"byte_end":468395,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6236}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":469413,"byte_end":469422,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6241}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":469567,"byte_end":469576,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6245}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":469759,"byte_end":469768,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":6251}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":470851,"byte_end":470855,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6267},{"krate":0,"index":6268},{"krate":0,"index":6269}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":471288,"byte_end":471292,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":471347,"byte_end":471354,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6275},{"krate":0,"index":6276},{"krate":0,"index":6277}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":471791,"byte_end":471798,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":471849,"byte_end":471857,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6282},{"krate":0,"index":6283},{"krate":0,"index":6284}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":472285,"byte_end":472293,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474541,"byte_end":474543,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474598,"byte_end":474600,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509121,"byte_end":509131,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509569,"byte_end":509579,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6537},{"krate":0,"index":6538},{"krate":0,"index":6539},{"krate":0,"index":6540}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":510090,"byte_end":510100,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6543},{"krate":0,"index":6544},{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6547}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":510645,"byte_end":510655,"line_start":84,"line_end":84,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6550},{"krate":0,"index":6551},{"krate":0,"index":6552},{"krate":0,"index":6553}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":511447,"byte_end":511457,"line_start":114,"line_end":114,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6556},{"krate":0,"index":6557},{"krate":0,"index":6558},{"krate":0,"index":6559},{"krate":0,"index":6560}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":512182,"byte_end":512192,"line_start":139,"line_end":139,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6563},{"krate":0,"index":6564}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":512823,"byte_end":512833,"line_start":165,"line_end":165,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6567}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":512977,"byte_end":512987,"line_start":174,"line_end":174,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6570}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":513249,"byte_end":513259,"line_start":187,"line_end":187,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6573},{"krate":0,"index":6574}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":513475,"byte_end":513485,"line_start":199,"line_end":199,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6577},{"krate":0,"index":6578}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":515358,"byte_end":515367,"line_start":42,"line_end":42,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":14888},{"krate":0,"index":14889},{"krate":0,"index":14890},{"krate":0,"index":14891},{"krate":0,"index":6642},{"krate":0,"index":6643}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516510,"byte_end":516519,"line_start":77,"line_end":77,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6646},{"krate":0,"index":6647}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":518080,"byte_end":518089,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6652},{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":519701,"byte_end":519710,"line_start":155,"line_end":155,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6657},{"krate":0,"index":6658}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":520540,"byte_end":520549,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":14892},{"krate":0,"index":14893},{"krate":0,"index":14894},{"krate":0,"index":14895}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":520627,"byte_end":520636,"line_start":180,"line_end":180,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6663}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":520952,"byte_end":520961,"line_start":189,"line_end":189,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6666}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":523881,"byte_end":523893,"line_start":252,"line_end":252,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6669},{"krate":0,"index":6670}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":525975,"byte_end":525984,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6734},{"krate":0,"index":6735},{"krate":0,"index":6736},{"krate":0,"index":14947},{"krate":0,"index":14948},{"krate":0,"index":14949},{"krate":0,"index":14950},{"krate":0,"index":6737},{"krate":0,"index":6738},{"krate":0,"index":6739},{"krate":0,"index":6740},{"krate":0,"index":6741},{"krate":0,"index":6742},{"krate":0,"index":6743}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":529583,"byte_end":529592,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6749},{"krate":0,"index":6750}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":531015,"byte_end":531024,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":14951},{"krate":0,"index":14952}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":531105,"byte_end":531114,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":14953},{"krate":0,"index":14954}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":531195,"byte_end":531204,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6757}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":531563,"byte_end":531572,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":532626,"byte_end":532636,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6795},{"krate":0,"index":6796},{"krate":0,"index":6797},{"krate":0,"index":6798},{"krate":0,"index":6799}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":533838,"byte_end":533848,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6802},{"krate":0,"index":6803},{"krate":0,"index":6810},{"krate":0,"index":6811}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":537774,"byte_end":537779,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6851},{"krate":0,"index":6852},{"krate":0,"index":6853},{"krate":0,"index":6854},{"krate":0,"index":6855}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":539035,"byte_end":539040,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6859}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":539370,"byte_end":539375,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6863},{"krate":0,"index":6864}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":540728,"byte_end":540733,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6869},{"krate":0,"index":6870}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/close.rs","byte_start":541844,"byte_end":541849,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/close.rs","byte_start":541902,"byte_end":541907,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6899}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/close.rs","byte_start":542049,"byte_end":542054,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6902},{"krate":0,"index":6903}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543824,"byte_end":543828,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":6950},{"krate":0,"index":6951}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":545551,"byte_end":545558,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6995},{"krate":0,"index":6996}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547391,"byte_end":547397,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7042},{"krate":0,"index":7043},{"krate":0,"index":7044},{"krate":0,"index":7045},{"krate":0,"index":7046},{"krate":0,"index":7047}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550597,"byte_end":550603,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7050}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550890,"byte_end":550896,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7053},{"krate":0,"index":7054}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":551528,"byte_end":551534,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7057},{"krate":0,"index":7058}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":552738,"byte_end":552744,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15176},{"krate":0,"index":15177},{"krate":0,"index":15178},{"krate":0,"index":15179}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":552819,"byte_end":552825,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15180},{"krate":0,"index":15181},{"krate":0,"index":15182},{"krate":0,"index":15183}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":552903,"byte_end":552909,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15184},{"krate":0,"index":15185},{"krate":0,"index":15186},{"krate":0,"index":15187}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":552982,"byte_end":552988,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15188},{"krate":0,"index":15189},{"krate":0,"index":15190},{"krate":0,"index":15191}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553971,"byte_end":553976,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7095}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":554324,"byte_end":554329,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7097},{"krate":0,"index":7098}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":554561,"byte_end":554566,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7100}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/fill_buf.rs","byte_start":555064,"byte_end":555071,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/fill_buf.rs","byte_start":555126,"byte_end":555133,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7133}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/fill_buf.rs","byte_start":555264,"byte_end":555271,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7137},{"krate":0,"index":7138}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/flush.rs","byte_start":556841,"byte_end":556846,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/flush.rs","byte_start":556899,"byte_end":556904,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7167}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/flush.rs","byte_start":557017,"byte_end":557022,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7170},{"krate":0,"index":7171}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/lines.rs","byte_start":557825,"byte_end":557830,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7209}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/lines.rs","byte_start":557993,"byte_end":557998,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7212},{"krate":0,"index":7213}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read.rs","byte_start":558993,"byte_end":558997,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read.rs","byte_start":559049,"byte_end":559053,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7242}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read.rs","byte_start":559218,"byte_end":559222,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7245},{"krate":0,"index":7246}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_vectored.rs","byte_start":559910,"byte_end":559922,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_vectored.rs","byte_start":559974,"byte_end":559986,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7279}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_vectored.rs","byte_start":560165,"byte_end":560177,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7282},{"krate":0,"index":7283}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_exact.rs","byte_start":560872,"byte_end":560881,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_exact.rs","byte_start":560933,"byte_end":560942,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7318}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_exact.rs","byte_start":561107,"byte_end":561116,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7321},{"krate":0,"index":7322}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_line.rs","byte_start":562259,"byte_end":562267,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_line.rs","byte_start":562322,"byte_end":562330,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7363}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_line.rs","byte_start":563299,"byte_end":563307,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7370}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":564062,"byte_end":564071,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":564123,"byte_end":564132,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7405}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":564377,"byte_end":564382,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7411}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":566217,"byte_end":566226,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7416},{"krate":0,"index":7417}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_string.rs","byte_start":567099,"byte_end":567111,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_string.rs","byte_start":567163,"byte_end":567175,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7462}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_string.rs","byte_start":568104,"byte_end":568116,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7468},{"krate":0,"index":7469}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_until.rs","byte_start":568936,"byte_end":568945,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_until.rs","byte_start":569000,"byte_end":569009,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7504}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_until.rs","byte_start":569981,"byte_end":569990,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7509},{"krate":0,"index":7510}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":571214,"byte_end":571220,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7545},{"krate":0,"index":7546}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":572000,"byte_end":572006,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7548}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/seek.rs","byte_start":572520,"byte_end":572524,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/seek.rs","byte_start":572576,"byte_end":572580,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7585}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/seek.rs","byte_start":572737,"byte_end":572741,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7588},{"krate":0,"index":7589}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573870,"byte_end":573874,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7621},{"krate":0,"index":7622},{"krate":0,"index":7624},{"krate":0,"index":7625}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":574592,"byte_end":574596,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7627}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":575613,"byte_end":575621,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7680}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":576121,"byte_end":576130,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7684}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":576522,"byte_end":576530,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7687},{"krate":0,"index":7689}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":577033,"byte_end":577042,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7693},{"krate":0,"index":7695},{"krate":0,"index":7697},{"krate":0,"index":7699}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":578057,"byte_end":578069,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7708}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":578233,"byte_end":578245,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7711}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":578479,"byte_end":578491,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579030,"byte_end":579034,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7757},{"krate":0,"index":7758},{"krate":0,"index":7759},{"krate":0,"index":15387},{"krate":0,"index":15388},{"krate":0,"index":15389},{"krate":0,"index":15390}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580951,"byte_end":580955,"line_start":86,"line_end":86,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7762}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":581596,"byte_end":581600,"line_start":110,"line_end":110,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7765},{"krate":0,"index":7766}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583443,"byte_end":583449,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7783},{"krate":0,"index":7784},{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7787},{"krate":0,"index":7788},{"krate":0,"index":7789}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":585519,"byte_end":585525,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7793}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":585672,"byte_end":585678,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7796}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write.rs","byte_start":586199,"byte_end":586204,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write.rs","byte_start":586257,"byte_end":586262,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7825}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write.rs","byte_start":586424,"byte_end":586429,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7828},{"krate":0,"index":7829}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_vectored.rs","byte_start":587113,"byte_end":587126,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_vectored.rs","byte_start":587179,"byte_end":587192,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7862}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_vectored.rs","byte_start":587365,"byte_end":587378,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7865},{"krate":0,"index":7866}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_all.rs","byte_start":588070,"byte_end":588078,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_all.rs","byte_start":588131,"byte_end":588139,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7901}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_all.rs","byte_start":588301,"byte_end":588309,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7904},{"krate":0,"index":7905}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492986,"byte_end":492987,"line_start":405,"line_end":405,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499442,"byte_end":499443,"line_start":599,"line_end":599,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500330,"byte_end":500331,"line_start":627,"line_end":627,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507810,"byte_end":507811,"line_start":831,"line_end":831,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590637,"byte_end":590642,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8043}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590975,"byte_end":590980,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8046}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591073,"byte_end":591078,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8049}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591211,"byte_end":591217,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8057},{"krate":0,"index":8058}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591663,"byte_end":591668,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8063},{"krate":0,"index":8064}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592239,"byte_end":592244,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8067},{"krate":0,"index":8068},{"krate":0,"index":8069},{"krate":0,"index":8070},{"krate":0,"index":8071}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":595359,"byte_end":595374,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8080}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":595805,"byte_end":595820,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8083}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":595937,"byte_end":595952,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8087},{"krate":0,"index":8088}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597181,"byte_end":597196,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8091}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597798,"byte_end":597808,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8099}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598820,"byte_end":598830,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8104}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599036,"byte_end":599046,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8107}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599144,"byte_end":599154,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8110},{"krate":0,"index":8111}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599295,"byte_end":599305,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8114}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599756,"byte_end":599772,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8126}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600902,"byte_end":600918,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8132}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601183,"byte_end":601199,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8136}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601311,"byte_end":601327,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8140},{"krate":0,"index":8141}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601470,"byte_end":601486,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8145}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601763,"byte_end":601768,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601814,"byte_end":601819,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601986,"byte_end":602001,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":602105,"byte_end":602120,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":602324,"byte_end":602334,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":602384,"byte_end":602394,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":602462,"byte_end":602478,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":602549,"byte_end":602565,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":604569,"byte_end":604574,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":604611,"byte_end":604616,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":604632,"byte_end":604638,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8222},{"krate":0,"index":8223},{"krate":0,"index":8225},{"krate":0,"index":8226}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":610258,"byte_end":610263,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8229}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":610385,"byte_end":610390,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8232}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":610718,"byte_end":610730,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8240}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":610894,"byte_end":610906,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8243}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":611127,"byte_end":611139,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":611521,"byte_end":611532,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8248},{"krate":0,"index":8249}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":611695,"byte_end":611706,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8252}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":611844,"byte_end":611855,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8255}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":612207,"byte_end":612218,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8258}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613531,"byte_end":613540,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8300},{"krate":0,"index":8301}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615813,"byte_end":615824,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8303}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":616607,"byte_end":616614,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8305}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":616797,"byte_end":616804,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":616817,"byte_end":616826,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8309}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":617815,"byte_end":617824,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8314},{"krate":0,"index":8315}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618063,"byte_end":618072,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8319},{"krate":0,"index":8320}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618331,"byte_end":618342,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8323}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":619014,"byte_end":619015,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8343},{"krate":0,"index":8344}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":619250,"byte_end":619251,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8352}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":619521,"byte_end":619522,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8360}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":620538,"byte_end":620542,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8368}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":620636,"byte_end":620640,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8372},{"krate":0,"index":8373}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":620899,"byte_end":620906,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8378},{"krate":0,"index":8379}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":621129,"byte_end":621136,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8384}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":621327,"byte_end":621334,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8389}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":621639,"byte_end":621652,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8395},{"krate":0,"index":8396}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":622069,"byte_end":622078,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8401},{"krate":0,"index":8402}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":622362,"byte_end":622371,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8407}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":622633,"byte_end":622642,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8412}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":622964,"byte_end":622971,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8419},{"krate":0,"index":8420}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":623190,"byte_end":623197,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8426}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":623375,"byte_end":623382,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8432}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":623683,"byte_end":623691,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8440},{"krate":0,"index":8441}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":623914,"byte_end":623922,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8447}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":624104,"byte_end":624112,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8453}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":624422,"byte_end":624433,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8462},{"krate":0,"index":8463}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":624693,"byte_end":624704,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8469}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":624941,"byte_end":624952,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8475}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":625319,"byte_end":625331,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8483},{"krate":0,"index":8484}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":625592,"byte_end":625604,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8490}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":625842,"byte_end":625854,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8496}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":626473,"byte_end":626487,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8509},{"krate":0,"index":8510}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":626710,"byte_end":626724,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8516}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":626925,"byte_end":626939,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8522}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":627245,"byte_end":627251,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8532}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":627344,"byte_end":627350,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8536},{"krate":0,"index":8537}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/unfold_state.rs","byte_start":627955,"byte_end":627966,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8548},{"krate":0,"index":8549}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11048,"byte_end":11054,"line_start":303,"line_end":303,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11152,"byte_end":11158,"line_start":307,"line_end":307,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1845}},{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150755,"byte_end":150772,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":5766}},{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/mod.rs","byte_start":150971,"byte_end":150981,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6165}},{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11425,"byte_end":11429,"line_start":318,"line_end":318,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6342}},{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11440,"byte_end":11445,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6441}},{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11643,"byte_end":11645,"line_start":329,"line_end":329,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":6443}},{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lib.rs","byte_start":11887,"byte_end":11891,"line_start":339,"line_end":339,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7981}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":35908,"byte_end":35915,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":8554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":36045,"byte_end":36052,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":8554},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":36277,"byte_end":36284,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":8554},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":37058,"byte_end":37065,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":8554},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/flatten.rs","byte_start":37290,"byte_end":37297,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":8554},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40311,"byte_end":40315,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":8602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":40422,"byte_end":40426,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":8602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":42155,"byte_end":42159,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":8602},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/fuse.rs","byte_start":42272,"byte_end":42276,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":8602},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/map.rs","byte_start":43254,"byte_end":43257,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":8637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/map.rs","byte_start":43426,"byte_end":43429,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":8637},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/map.rs","byte_start":43691,"byte_end":43694,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":8637},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/catch_unwind.rs","byte_start":44900,"byte_end":44911,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":9190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/catch_unwind.rs","byte_start":45054,"byte_end":45065,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":9190},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46292,"byte_end":46302,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46503,"byte_end":46509,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46552,"byte_end":46558,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46816,"byte_end":46821,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":46975,"byte_end":46985,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":47217,"byte_end":47222,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":47319,"byte_end":47324,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":47568,"byte_end":47574,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":47998,"byte_end":48004,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":50070,"byte_end":50075,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":51771,"byte_end":51777,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":337},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":51929,"byte_end":51935,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":53524,"byte_end":53529,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":55236,"byte_end":55242,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":55401,"byte_end":55407,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":55835,"byte_end":55843,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":345},"to":{"krate":22,"index":94}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/shared.rs","byte_start":56202,"byte_end":56212,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19059,"byte_end":19060,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":435},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/future/mod.rs","byte_start":19191,"byte_end":19197,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12560},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/into_future.rs","byte_start":78638,"byte_end":78648,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":9226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/into_future.rs","byte_start":78799,"byte_end":78809,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9226},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/into_future.rs","byte_start":78932,"byte_end":78942,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":9226},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":79651,"byte_end":79661,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":9261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":79791,"byte_end":79801,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":9261},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":80044,"byte_end":80054,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":9261},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":81007,"byte_end":81017,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":9261},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten.rs","byte_start":81260,"byte_end":81270,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":9261},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten_err.rs","byte_start":84594,"byte_end":84607,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":9308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten_err.rs","byte_start":84737,"byte_end":84750,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":9308},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/try_flatten_err.rs","byte_start":84993,"byte_end":85006,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":9308},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":61184,"byte_end":61187,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":714},"to":{"krate":0,"index":715}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_future/mod.rs","byte_start":61270,"byte_end":61279,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":44},"to":{"krate":0,"index":715}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86315,"byte_end":86319,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":86915,"byte_end":86919,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":10171},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/lazy.rs","byte_start":87063,"byte_end":87067,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":87670,"byte_end":87677,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":10177},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88238,"byte_end":88245,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":10177},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88390,"byte_end":88397,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":10177},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/pending.rs","byte_start":88423,"byte_end":88430,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":10177},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89184,"byte_end":89193,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":10183},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":89796,"byte_end":89805,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":10183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":90903,"byte_end":90912,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":10183},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/maybe_done.rs","byte_start":91113,"byte_end":91122,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":10183},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92442,"byte_end":92454,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":10196},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":92680,"byte_end":92692,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":10196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":93805,"byte_end":93817,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":10196},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_maybe_done.rs","byte_start":94021,"byte_end":94033,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":10196},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/option.rs","byte_start":95683,"byte_end":95695,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":10214},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/option.rs","byte_start":95793,"byte_end":95805,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":10214},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/option.rs","byte_start":96119,"byte_end":96131,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":10214},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/option.rs","byte_start":96318,"byte_end":96330,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":10214},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":96768,"byte_end":96774,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97468,"byte_end":97474,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_fn.rs","byte_start":97616,"byte_end":97622,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":98350,"byte_end":98363,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":10253},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":98929,"byte_end":98942,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":10253},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/poll_immediate.rs","byte_start":99962,"byte_end":99975,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":10253},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102147,"byte_end":102152,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":10287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102331,"byte_end":102336,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10287},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102368,"byte_end":102373,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10287},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/ready.rs","byte_start":102470,"byte_end":102475,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10287},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":110462,"byte_end":110469,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":113230,"byte_end":113237,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/join_all.rs","byte_start":114225,"byte_end":114232,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":114728,"byte_end":114734,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10641},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":117170,"byte_end":117176,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":10641},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select.rs","byte_start":117880,"byte_end":117886,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":10641},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":118449,"byte_end":118458,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":10649},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119465,"byte_end":119474,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":10649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":119657,"byte_end":119666,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":10649},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_all.rs","byte_start":120336,"byte_end":120345,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":10649},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":128953,"byte_end":128963,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":130793,"byte_end":130803,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_join_all.rs","byte_start":131951,"byte_end":131961,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":132443,"byte_end":132452,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":10977},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/try_select.rs","byte_start":134291,"byte_end":134300,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":10977},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":135662,"byte_end":135670,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":10985},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":136748,"byte_end":136756,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":10985},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/select_ok.rs","byte_start":138187,"byte_end":138195,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":10985},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139174,"byte_end":139180,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":10991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139519,"byte_end":139525,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":10991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":139910,"byte_end":139916,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":10991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140297,"byte_end":140303,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":10991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140544,"byte_end":140550,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":10991},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":140889,"byte_end":140895,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10991},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":141171,"byte_end":141177,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10991},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":141712,"byte_end":141718,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10991},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":143464,"byte_end":143470,"line_start":193,"line_end":193,"column_start":30,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10991},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":144525,"byte_end":144531,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10991},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":145838,"byte_end":145844,"line_start":271,"line_end":271,"column_start":30,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10991},"to":{"krate":25,"index":47}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/future/either.rs","byte_start":146274,"byte_end":146280,"line_start":288,"line_end":288,"column_start":33,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10991},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chain.rs","byte_start":204609,"byte_end":204614,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":11015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chain.rs","byte_start":204840,"byte_end":204845,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":11015},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chain.rs","byte_start":205054,"byte_end":205059,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":11015},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/collect.rs","byte_start":206655,"byte_end":206662,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":11064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/collect.rs","byte_start":206927,"byte_end":206934,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":11064},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/collect.rs","byte_start":207112,"byte_end":207119,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":11064},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/unzip.rs","byte_start":208145,"byte_end":208150,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":11115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/unzip.rs","byte_start":208544,"byte_end":208549,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":11115},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/unzip.rs","byte_start":208799,"byte_end":208804,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":11115},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/concat.rs","byte_start":209929,"byte_end":209935,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":11173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/concat.rs","byte_start":210155,"byte_end":210161,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":11173},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/concat.rs","byte_start":210869,"byte_end":210875,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":11173},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/cycle.rs","byte_start":211538,"byte_end":211543,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":11213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/cycle.rs","byte_start":211699,"byte_end":211704,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":11213},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/cycle.rs","byte_start":212453,"byte_end":212458,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":11213},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/enumerate.rs","byte_start":213206,"byte_end":213215,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":11253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/enumerate.rs","byte_start":213401,"byte_end":213410,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":11253},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/enumerate.rs","byte_start":213528,"byte_end":213537,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":11253},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter.rs","byte_start":214978,"byte_end":214984,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":11292},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter.rs","byte_start":215457,"byte_end":215463,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":11292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter.rs","byte_start":215786,"byte_end":215792,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":11292},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter.rs","byte_start":216129,"byte_end":216135,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":11292},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter_map.rs","byte_start":218307,"byte_end":218316,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":11357},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter_map.rs","byte_start":218613,"byte_end":218622,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":11357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter_map.rs","byte_start":218889,"byte_end":218898,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":11357},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/filter_map.rs","byte_start":219165,"byte_end":219174,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":11357},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/flatten.rs","byte_start":221276,"byte_end":221283,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":11425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/flatten.rs","byte_start":221452,"byte_end":221459,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":11425},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/flatten.rs","byte_start":221651,"byte_end":221658,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":11425},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fold.rs","byte_start":223172,"byte_end":223176,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11526},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fold.rs","byte_start":223532,"byte_end":223536,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":11526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fold.rs","byte_start":223797,"byte_end":223801,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":11526},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fold.rs","byte_start":224036,"byte_end":224040,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11526},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/any.rs","byte_start":225629,"byte_end":225632,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11595},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/any.rs","byte_start":225962,"byte_end":225965,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/any.rs","byte_start":226218,"byte_end":226221,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11595},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/any.rs","byte_start":226450,"byte_end":226453,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11595},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/all.rs","byte_start":228205,"byte_end":228208,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11656},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/all.rs","byte_start":228538,"byte_end":228541,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/all.rs","byte_start":228793,"byte_end":228796,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11656},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/all.rs","byte_start":229025,"byte_end":229028,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11656},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each.rs","byte_start":230782,"byte_end":230789,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":11717},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each.rs","byte_start":231082,"byte_end":231089,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":11717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each.rs","byte_start":231320,"byte_end":231327,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":11717},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each.rs","byte_start":231566,"byte_end":231573,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":11717},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":232674,"byte_end":232678,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":11779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":233175,"byte_end":233179,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":11779},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/fuse.rs","byte_start":233277,"byte_end":233281,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":11779},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":234483,"byte_end":234495,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":11818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":236985,"byte_end":236997,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":11818},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/into_future.rs","byte_start":237117,"byte_end":237129,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":11818},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/map.rs","byte_start":238014,"byte_end":238017,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":11893},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/map.rs","byte_start":238206,"byte_end":238209,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":11893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/map.rs","byte_start":238378,"byte_end":238381,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":11893},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/map.rs","byte_start":238549,"byte_end":238552,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":11893},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":239664,"byte_end":239668,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":12025},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":239719,"byte_end":239723,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":12025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":239874,"byte_end":239878,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":12025},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/next.rs","byte_start":240017,"byte_end":240021,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":12025},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/select_next_some.rs","byte_start":240672,"byte_end":240686,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":12033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/select_next_some.rs","byte_start":240837,"byte_end":240851,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":12033},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/select_next_some.rs","byte_start":240995,"byte_end":241009,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":12033},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":242320,"byte_end":242328,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":12046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247825,"byte_end":247833,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":12046},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":247975,"byte_end":247983,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":12046},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":249142,"byte_end":249146,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":12085},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":249391,"byte_end":249395,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":12085},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":249506,"byte_end":249510,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":12085},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":250207,"byte_end":250214,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":12126},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":250462,"byte_end":250469,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":12126},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":250580,"byte_end":250587,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":12126},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":251307,"byte_end":251313,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":12167},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":251665,"byte_end":251671,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":12167},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":251940,"byte_end":251946,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":12167},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":253207,"byte_end":253215,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":12216},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":253535,"byte_end":253543,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":12216},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":253727,"byte_end":253735,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":12216},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/peek.rs","byte_start":254106,"byte_end":254116,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2906},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip.rs","byte_start":254781,"byte_end":254785,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":12270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip.rs","byte_start":254976,"byte_end":254980,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":12270},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip.rs","byte_start":255098,"byte_end":255102,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":12270},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip_while.rs","byte_start":256699,"byte_end":256708,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":12309},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip_while.rs","byte_start":257160,"byte_end":257169,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":12309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip_while.rs","byte_start":257495,"byte_end":257504,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":12309},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/skip_while.rs","byte_start":257752,"byte_end":257761,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":12309},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take.rs","byte_start":260061,"byte_end":260065,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":12383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take.rs","byte_start":260238,"byte_end":260242,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":12383},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take.rs","byte_start":261214,"byte_end":261218,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":12383},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_while.rs","byte_start":262241,"byte_end":262250,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":12422},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_while.rs","byte_start":262698,"byte_end":262707,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":12422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_while.rs","byte_start":263026,"byte_end":263035,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":12422},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_while.rs","byte_start":264554,"byte_end":264563,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":12422},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":265947,"byte_end":265956,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":12491},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":266244,"byte_end":266253,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":12491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":268370,"byte_end":268379,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":12491},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/take_until.rs","byte_start":269411,"byte_end":269420,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":12491},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/then.rs","byte_start":270362,"byte_end":270366,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":12548},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/then.rs","byte_start":270617,"byte_end":270621,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":12548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/then.rs","byte_start":270867,"byte_end":270871,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":12548},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/then.rs","byte_start":271097,"byte_end":271101,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":12548},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":272983,"byte_end":272986,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":12616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":274572,"byte_end":274575,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":12616},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/zip.rs","byte_start":274770,"byte_end":274773,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":12616},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chunks.rs","byte_start":277468,"byte_end":277474,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":12671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chunks.rs","byte_start":277982,"byte_end":277988,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":12671},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/chunks.rs","byte_start":279604,"byte_end":279610,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":12671},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/ready_chunks.rs","byte_start":280582,"byte_end":280593,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":12719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/ready_chunks.rs","byte_start":280945,"byte_end":280956,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":12719},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/ready_chunks.rs","byte_start":283125,"byte_end":283136,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":12719},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":284134,"byte_end":284138,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":12762},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":284624,"byte_end":284628,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":12762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":284792,"byte_end":284796,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":12762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":285158,"byte_end":285162,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":12762},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/scan.rs","byte_start":286389,"byte_end":286393,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":12762},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffer_unordered.rs","byte_start":287574,"byte_end":287589,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":12831},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffer_unordered.rs","byte_start":287921,"byte_end":287936,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":12831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffer_unordered.rs","byte_start":288323,"byte_end":288338,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":12831},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffer_unordered.rs","byte_start":289792,"byte_end":289807,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":12831},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffered.rs","byte_start":290917,"byte_end":290925,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":12876},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffered.rs","byte_start":291272,"byte_end":291280,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":12876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/buffered.rs","byte_start":291560,"byte_end":291568,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":12876},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each_concurrent.rs","byte_start":293905,"byte_end":293922,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":12921},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each_concurrent.rs","byte_start":294268,"byte_end":294285,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":12921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each_concurrent.rs","byte_start":294718,"byte_end":294735,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":12921},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/for_each_concurrent.rs","byte_start":294965,"byte_end":294982,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":12921},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/catch_unwind.rs","byte_start":297342,"byte_end":297353,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":12987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/catch_unwind.rs","byte_start":297545,"byte_end":297556,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":12987},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/catch_unwind.rs","byte_start":298408,"byte_end":298419,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":12987},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158436,"byte_end":158437,"line_start":222,"line_end":222,"column_start":31,"column_end":32},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3667},"to":{"krate":0,"index":3668}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/stream/mod.rs","byte_start":158580,"byte_end":158586,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":96},"to":{"krate":0,"index":3668}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/and_then.rs","byte_start":337536,"byte_end":337543,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":13026},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/and_then.rs","byte_start":337836,"byte_end":337843,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":13026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/and_then.rs","byte_start":338124,"byte_end":338131,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":13026},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/and_then.rs","byte_start":339274,"byte_end":339281,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":13026},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_stream.rs","byte_start":340199,"byte_end":340209,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":13299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_stream.rs","byte_start":340402,"byte_end":340412,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":13299},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_stream.rs","byte_start":340533,"byte_end":340543,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":13299},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/or_else.rs","byte_start":341642,"byte_end":341648,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":13472},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/or_else.rs","byte_start":341940,"byte_end":341946,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":13472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/or_else.rs","byte_start":342224,"byte_end":342230,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":13472},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/or_else.rs","byte_start":343507,"byte_end":343513,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":13472},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344417,"byte_end":344424,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":13533},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344478,"byte_end":344485,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":13533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344648,"byte_end":344655,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":13533},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_next.rs","byte_start":344797,"byte_end":344804,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":13533},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each.rs","byte_start":345580,"byte_end":345590,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":13541},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each.rs","byte_start":345886,"byte_end":345896,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":13541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each.rs","byte_start":346141,"byte_end":346151,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":13541},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter.rs","byte_start":347550,"byte_end":347559,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":13598},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter.rs","byte_start":347955,"byte_end":347964,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":13598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter.rs","byte_start":348207,"byte_end":348216,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":13598},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter.rs","byte_start":348473,"byte_end":348482,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":13598},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter_map.rs","byte_start":350623,"byte_end":350635,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":13663},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter_map.rs","byte_start":350935,"byte_end":350947,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":13663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter_map.rs","byte_start":351144,"byte_end":351156,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":13663},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_filter_map.rs","byte_start":351434,"byte_end":351446,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":13663},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_flatten.rs","byte_start":353630,"byte_end":353640,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":13729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_flatten.rs","byte_start":353905,"byte_end":353915,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":13729},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_flatten.rs","byte_start":354161,"byte_end":354171,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":13729},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_collect.rs","byte_start":355780,"byte_end":355790,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":13775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_collect.rs","byte_start":355930,"byte_end":355940,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":13775},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_collect.rs","byte_start":356128,"byte_end":356138,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":13775},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_concat.rs","byte_start":357136,"byte_end":357145,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":13822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_concat.rs","byte_start":357364,"byte_end":357373,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":13822},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":358757,"byte_end":358766,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":13862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":359261,"byte_end":359270,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":13862},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":361218,"byte_end":361227,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":13862},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":361886,"byte_end":361900,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":13905},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":362045,"byte_end":362059,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":13905},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_chunks.rs","byte_start":362246,"byte_end":362260,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":13905},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_fold.rs","byte_start":362870,"byte_end":362877,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":13926},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_fold.rs","byte_start":363236,"byte_end":363243,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":13926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_fold.rs","byte_start":363523,"byte_end":363530,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":13926},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_fold.rs","byte_start":363784,"byte_end":363791,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":13926},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":367654,"byte_end":367663,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":13995},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_unfold.rs","byte_start":367925,"byte_end":367934,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":13995},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_skip_while.rs","byte_start":369680,"byte_end":369692,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":14052},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_skip_while.rs","byte_start":370148,"byte_end":370160,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":14052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_skip_while.rs","byte_start":370500,"byte_end":370512,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":14052},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_skip_while.rs","byte_start":372011,"byte_end":372023,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":14052},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_take_while.rs","byte_start":373251,"byte_end":373263,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":14121},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_take_while.rs","byte_start":373715,"byte_end":373727,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":14121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_take_while.rs","byte_start":374065,"byte_end":374077,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":14121},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_take_while.rs","byte_start":375684,"byte_end":375696,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":14121},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_buffer_unordered.rs","byte_start":376984,"byte_end":377002,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":14195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_buffer_unordered.rs","byte_start":377341,"byte_end":377359,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":14195},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_buffered.rs","byte_start":379565,"byte_end":379576,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":14243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_buffered.rs","byte_start":379913,"byte_end":379924,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":14243},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":382082,"byte_end":382102,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":14286},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":382467,"byte_end":382487,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":14286},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":382726,"byte_end":382746,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":14286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":383194,"byte_end":383214,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":14286},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":386315,"byte_end":386328,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":14347},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":386544,"byte_end":386557,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":14347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":386769,"byte_end":386782,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":14347},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":388403,"byte_end":388416,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":14347},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/into_async_read.rs","byte_start":389023,"byte_end":389036,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":14347},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":303819,"byte_end":303820,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4968},"to":{"krate":0,"index":4969}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/try_stream/mod.rs","byte_start":303901,"byte_end":303910,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":127},"to":{"krate":0,"index":4969}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391072,"byte_end":391076,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":14366},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/iter.rs","byte_start":391698,"byte_end":391702,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":14366},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392893,"byte_end":392899,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":14375},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":392926,"byte_end":392932,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":14375},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat.rs","byte_start":393240,"byte_end":393246,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":14375},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393843,"byte_end":393853,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":14384},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":393897,"byte_end":393907,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":14384},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/repeat_with.rs","byte_start":394221,"byte_end":394231,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":14384},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396751,"byte_end":396756,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":14393},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396788,"byte_end":396793,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":14393},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":396878,"byte_end":396883,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":14393},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/empty.rs","byte_start":397132,"byte_end":397137,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":14393},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":398076,"byte_end":398080,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":14404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":398209,"byte_end":398213,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":14404},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/once.rs","byte_start":398818,"byte_end":398822,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":14404},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399481,"byte_end":399488,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":14435},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399520,"byte_end":399527,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":14435},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399612,"byte_end":399619,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":14435},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/pending.rs","byte_start":399864,"byte_end":399871,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":14435},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400258,"byte_end":400264,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":5386},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":400295,"byte_end":400301,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":5386},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_fn.rs","byte_start":401066,"byte_end":401072,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":5386},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":401768,"byte_end":401781,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":14446},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/poll_immediate.rs","byte_start":402694,"byte_end":402707,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":14446},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":405594,"byte_end":405600,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":14487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":406904,"byte_end":406910,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":14487},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select.rs","byte_start":407089,"byte_end":407095,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":14487},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":407808,"byte_end":407816,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":14525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":408113,"byte_end":408121,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":14525},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":411148,"byte_end":411166,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":14544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":412615,"byte_end":412633,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":14544},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":412913,"byte_end":412931,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":14544},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_with_strategy.rs","byte_start":414043,"byte_end":414061,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":14544},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416632,"byte_end":416638,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":14613},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":416878,"byte_end":416884,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":14613},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/unfold.rs","byte_start":417164,"byte_end":417170,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":14613},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":418718,"byte_end":418730,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":14671},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":418835,"byte_end":418847,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":14671},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":418878,"byte_end":418890,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":14671},"to":{"krate":2,"index":2687}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419013,"byte_end":419025,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":14671},"to":{"krate":2,"index":2676}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":419206,"byte_end":419218,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":14671},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421800,"byte_end":421814,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":5726},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":421840,"byte_end":421854,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":5726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":423420,"byte_end":423434,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":5726},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":423527,"byte_end":423541,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5726},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":424703,"byte_end":424717,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5726},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":424883,"byte_end":424897,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5726},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":425177,"byte_end":425191,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5726},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_ordered.rs","byte_start":425361,"byte_end":425375,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5726},"to":{"krate":2,"index":7388}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/abort.rs","byte_start":451498,"byte_end":451509,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5860},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":452868,"byte_end":452876,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":14745},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":453950,"byte_end":453958,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":14745},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":453995,"byte_end":454005,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":14706},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":454857,"byte_end":454867,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":14706},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":454915,"byte_end":454922,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":14716},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":455185,"byte_end":455192,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":14716},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":455233,"byte_end":455243,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":14725},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456112,"byte_end":456122,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":14725},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456170,"byte_end":456174,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":14736},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456433,"byte_end":456437,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":14736},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456606,"byte_end":456616,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":14725},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456661,"byte_end":456671,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":14725},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456717,"byte_end":456727,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":14706},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456772,"byte_end":456782,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":14706},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456836,"byte_end":456844,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":14745},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/iter.rs","byte_start":456893,"byte_end":456901,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":14745},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/task.rs","byte_start":458386,"byte_end":458390,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5988},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/task.rs","byte_start":458425,"byte_end":458429,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5988},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/task.rs","byte_start":458461,"byte_end":458465,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5988},"to":{"krate":22,"index":94}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/task.rs","byte_start":459542,"byte_end":459546,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/task.rs","byte_start":460546,"byte_end":460550,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5988},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":462000,"byte_end":462015,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":6058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427762,"byte_end":427778,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6077},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427819,"byte_end":427835,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6077},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427864,"byte_end":427880,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6077},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":427905,"byte_end":427921,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6077},"to":{"krate":22,"index":15}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":428106,"byte_end":428122,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6077},"to":{"krate":22,"index":18}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":429829,"byte_end":429845,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6077},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":429919,"byte_end":429935,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":441466,"byte_end":441482,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6077},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":446666,"byte_end":446670,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6114},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":448925,"byte_end":448941,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":6077},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":449079,"byte_end":449095,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":449655,"byte_end":449671,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6077},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":450314,"byte_end":450330,"line_start":602,"line_end":602,"column_start":35,"column_end":51},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6077},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":450800,"byte_end":450816,"line_start":616,"line_end":616,"column_start":33,"column_end":49},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6077},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":451092,"byte_end":451108,"line_start":629,"line_end":629,"column_start":35,"column_end":51},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6077},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/futures_unordered/mod.rs","byte_start":451230,"byte_end":451246,"line_start":635,"line_end":635,"column_start":27,"column_end":43},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6077},"to":{"krate":2,"index":7388}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":465849,"byte_end":465858,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":14752},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":466003,"byte_end":466012,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":14752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":467485,"byte_end":467494,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":14752},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":467593,"byte_end":467602,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":14752},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":468386,"byte_end":468395,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":14752},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":469413,"byte_end":469422,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":14752},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":469567,"byte_end":469576,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":14752},"to":{"krate":2,"index":7388}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":469759,"byte_end":469768,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":14752},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":470851,"byte_end":470855,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":14785},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":471288,"byte_end":471292,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":14785},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":471347,"byte_end":471354,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":14794},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":471791,"byte_end":471798,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":14794},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":471849,"byte_end":471857,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":14803},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/stream/select_all.rs","byte_start":472285,"byte_end":472293,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":14803},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474541,"byte_end":474543,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6425},"to":{"krate":0,"index":6428}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474598,"byte_end":474600,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6427},"to":{"krate":0,"index":6431}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":474679,"byte_end":474684,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":22,"index":15},"to":{"krate":0,"index":6428}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/task/spawn.rs","byte_start":477448,"byte_end":477458,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":18},"to":{"krate":0,"index":6431}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509121,"byte_end":509131,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":14810},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":509569,"byte_end":509579,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":14810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":510090,"byte_end":510100,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":14810},"to":{"krate":1,"index":4395}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":510645,"byte_end":510655,"line_start":84,"line_end":84,"column_start":24,"column_end":34},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":14810},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":511447,"byte_end":511457,"line_start":114,"line_end":114,"column_start":22,"column_end":32},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":14810},"to":{"krate":1,"index":4334}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":512182,"byte_end":512192,"line_start":139,"line_end":139,"column_start":23,"column_end":33},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":14810},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":512823,"byte_end":512833,"line_start":165,"line_end":165,"column_start":22,"column_end":32},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":14810},"to":{"krate":1,"index":4413}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":512977,"byte_end":512987,"line_start":174,"line_end":174,"column_start":23,"column_end":33},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":14810},"to":{"krate":25,"index":47}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":513249,"byte_end":513259,"line_start":187,"line_end":187,"column_start":25,"column_end":35},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":14810},"to":{"krate":1,"index":4420}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/allow_std.rs","byte_start":513475,"byte_end":513485,"line_start":199,"line_end":199,"column_start":26,"column_end":36},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":14810},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":515358,"byte_end":515367,"line_start":42,"line_end":42,"column_start":20,"column_end":29},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":14843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":516510,"byte_end":516519,"line_start":77,"line_end":77,"column_start":32,"column_end":41},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":14843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":518080,"byte_end":518089,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":14843},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":519701,"byte_end":519710,"line_start":155,"line_end":155,"column_start":37,"column_end":46},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":14843},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":520540,"byte_end":520549,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":14843},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":520627,"byte_end":520636,"line_start":180,"line_end":180,"column_start":36,"column_end":45},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":14843},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":520952,"byte_end":520961,"line_start":189,"line_end":189,"column_start":46,"column_end":55},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":14843},"to":{"krate":25,"index":47}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_reader.rs","byte_start":523881,"byte_end":523893,"line_start":252,"line_end":252,"column_start":20,"column_end":32},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":14896},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":525975,"byte_end":525984,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":14906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":529583,"byte_end":529592,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":14906},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":531015,"byte_end":531024,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":14906},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":531105,"byte_end":531114,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":14906},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":531195,"byte_end":531204,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":14906},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/buf_writer.rs","byte_start":531563,"byte_end":531572,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":14906},"to":{"krate":25,"index":47}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":532626,"byte_end":532636,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":14960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/line_writer.rs","byte_start":533838,"byte_end":533848,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":14960},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":537774,"byte_end":537779,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":14991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":539035,"byte_end":539040,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":14991},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":539370,"byte_end":539375,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":14991},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/chain.rs","byte_start":540728,"byte_end":540733,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":14991},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/close.rs","byte_start":541844,"byte_end":541849,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":15040},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/close.rs","byte_start":541902,"byte_end":541907,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":15040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/close.rs","byte_start":542049,"byte_end":542054,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":15040},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy.rs","byte_start":543824,"byte_end":543828,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":15057},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/copy_buf.rs","byte_start":545551,"byte_end":545558,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":15111},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":547391,"byte_end":547397,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":15164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550597,"byte_end":550603,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":15164},"to":{"krate":25,"index":47}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":550890,"byte_end":550896,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":15164},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":551528,"byte_end":551534,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":15164},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":552738,"byte_end":552744,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":15164},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":552819,"byte_end":552825,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":15164},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":552903,"byte_end":552909,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":15164},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/cursor.rs","byte_start":552982,"byte_end":552988,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":15164},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":553971,"byte_end":553976,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":7091},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":554324,"byte_end":554329,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":7091},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/empty.rs","byte_start":554561,"byte_end":554566,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7091},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/fill_buf.rs","byte_start":555064,"byte_end":555071,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":15192},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/fill_buf.rs","byte_start":555126,"byte_end":555133,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":15192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/fill_buf.rs","byte_start":555264,"byte_end":555271,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":15192},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/flush.rs","byte_start":556841,"byte_end":556846,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":15200},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/flush.rs","byte_start":556899,"byte_end":556904,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":15200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/flush.rs","byte_start":557017,"byte_end":557022,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":15200},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/lines.rs","byte_start":557825,"byte_end":557830,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":15213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/lines.rs","byte_start":557993,"byte_end":557998,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":15213},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read.rs","byte_start":558993,"byte_end":558997,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":15256},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read.rs","byte_start":559049,"byte_end":559053,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":15256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read.rs","byte_start":559218,"byte_end":559222,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":15256},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_vectored.rs","byte_start":559910,"byte_end":559922,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":15265},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_vectored.rs","byte_start":559974,"byte_end":559986,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":15265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_vectored.rs","byte_start":560165,"byte_end":560177,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":15265},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_exact.rs","byte_start":560872,"byte_end":560881,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":15274},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_exact.rs","byte_start":560933,"byte_end":560942,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":15274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_exact.rs","byte_start":561107,"byte_end":561116,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":15274},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_line.rs","byte_start":562259,"byte_end":562267,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":15283},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_line.rs","byte_start":562322,"byte_end":562330,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":15283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_line.rs","byte_start":563299,"byte_end":563307,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":15283},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":564062,"byte_end":564071,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":15294},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":564123,"byte_end":564132,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":15294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":564377,"byte_end":564382,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":7406},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_end.rs","byte_start":566217,"byte_end":566226,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":15294},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_string.rs","byte_start":567099,"byte_end":567111,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":15304},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_string.rs","byte_start":567163,"byte_end":567175,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":15304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_to_string.rs","byte_start":568104,"byte_end":568116,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":15304},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_until.rs","byte_start":568936,"byte_end":568945,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":15315},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_until.rs","byte_start":569000,"byte_end":569009,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":15315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/read_until.rs","byte_start":569981,"byte_end":569990,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":15315},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":571214,"byte_end":571220,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":7541},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/repeat.rs","byte_start":572000,"byte_end":572006,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":7541},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/seek.rs","byte_start":572520,"byte_end":572524,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":15326},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/seek.rs","byte_start":572576,"byte_end":572580,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":15326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/seek.rs","byte_start":572737,"byte_end":572741,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":15326},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":573870,"byte_end":573874,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":7617},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/sink.rs","byte_start":574592,"byte_end":574596,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":7617},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":575613,"byte_end":575621,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":15335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":576121,"byte_end":576130,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":15341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":576522,"byte_end":576530,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":15335},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":577033,"byte_end":577042,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":15341},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":578057,"byte_end":578069,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7701},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":578233,"byte_end":578245,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":7701},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/split.rs","byte_start":578479,"byte_end":578491,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":7701},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":579030,"byte_end":579034,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":15352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":580951,"byte_end":580955,"line_start":86,"line_end":86,"column_start":34,"column_end":38},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":15352},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/take.rs","byte_start":581596,"byte_end":581600,"line_start":110,"line_end":110,"column_start":40,"column_end":44},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":15352},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":583443,"byte_end":583449,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":15391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":585519,"byte_end":585525,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":15391},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/window.rs","byte_start":585672,"byte_end":585678,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":15391},"to":{"krate":2,"index":2889}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write.rs","byte_start":586199,"byte_end":586204,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":15398},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write.rs","byte_start":586257,"byte_end":586262,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":15398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write.rs","byte_start":586424,"byte_end":586429,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":15398},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_vectored.rs","byte_start":587113,"byte_end":587126,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":15407},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_vectored.rs","byte_start":587179,"byte_end":587192,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":15407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_vectored.rs","byte_start":587365,"byte_end":587378,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":15407},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_all.rs","byte_start":588070,"byte_end":588078,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":15416},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_all.rs","byte_start":588131,"byte_end":588139,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":15416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/write_all.rs","byte_start":588301,"byte_end":588309,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":15416},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":484729,"byte_end":484738,"line_start":155,"line_end":155,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":25,"index":39},"to":{"krate":0,"index":7909}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":492986,"byte_end":492987,"line_start":405,"line_end":405,"column_start":46,"column_end":47},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":7925},"to":{"krate":0,"index":7909}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":493090,"byte_end":493100,"line_start":408,"line_end":408,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":25,"index":42},"to":{"krate":0,"index":7926}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499442,"byte_end":499443,"line_start":599,"line_end":599,"column_start":48,"column_end":49},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7936},"to":{"krate":0,"index":7926}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":499544,"byte_end":499553,"line_start":602,"line_end":602,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":25,"index":47},"to":{"krate":0,"index":7937}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500330,"byte_end":500331,"line_start":627,"line_end":627,"column_start":46,"column_end":47},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":7941},"to":{"krate":0,"index":7937}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":500438,"byte_end":500450,"line_start":630,"line_end":630,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":25,"index":49},"to":{"krate":0,"index":7942}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/io/mod.rs","byte_start":507810,"byte_end":507811,"line_start":831,"line_end":831,"column_start":52,"column_end":53},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7951},"to":{"krate":0,"index":7942}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590637,"byte_end":590642,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":8036},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":590975,"byte_end":590980,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":8036},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591073,"byte_end":591078,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":8036},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591211,"byte_end":591217,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":8050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":591663,"byte_end":591668,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":8036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":592239,"byte_end":592244,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":8036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":595359,"byte_end":595374,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":8073},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":595805,"byte_end":595820,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":8073},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":595937,"byte_end":595952,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":8073},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597181,"byte_end":597196,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":8073},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":597798,"byte_end":597808,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":8092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":598820,"byte_end":598830,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8092},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599036,"byte_end":599046,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8092},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599144,"byte_end":599154,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8092},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599295,"byte_end":599305,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8092},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":599756,"byte_end":599772,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":8115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":600902,"byte_end":600918,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":8115},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601183,"byte_end":601199,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":8115},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601311,"byte_end":601327,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":8115},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601470,"byte_end":601486,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":8115},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601763,"byte_end":601768,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":8036},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601814,"byte_end":601819,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":8036},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":601986,"byte_end":602001,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":8073},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":602105,"byte_end":602120,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":8073},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":602324,"byte_end":602334,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":8092},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":602384,"byte_end":602394,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":8092},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":602462,"byte_end":602478,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":8115},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/mutex.rs","byte_start":602549,"byte_end":602565,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":8115},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":604569,"byte_end":604574,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":15431},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":604611,"byte_end":604616,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":15431},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":604632,"byte_end":604638,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":15425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":610258,"byte_end":610263,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":15431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":610385,"byte_end":610390,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":15431},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":610718,"byte_end":610730,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":8233},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":610894,"byte_end":610906,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":8233},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":611127,"byte_end":611139,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":8233},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":611521,"byte_end":611532,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":15438},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":611695,"byte_end":611706,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":15438},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":611844,"byte_end":611855,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":15438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/lock/bilock.rs","byte_start":612207,"byte_end":612218,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":15438},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":613531,"byte_end":613540,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":15451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":615813,"byte_end":615824,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":15493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":616607,"byte_end":616614,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":15504},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":616797,"byte_end":616804,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":15504},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":616817,"byte_end":616826,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":15451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":617815,"byte_end":617824,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":15451},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618063,"byte_end":618072,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":15451},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/abortable.rs","byte_start":618331,"byte_end":618342,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":15493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":619014,"byte_end":619015,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8340},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":619154,"byte_end":619161,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":8335},"to":{"krate":0,"index":8345}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":619250,"byte_end":619251,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":8349},"to":{"krate":0,"index":8345}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":619437,"byte_end":619443,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":8345},"to":{"krate":0,"index":8353}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":619521,"byte_end":619522,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":8357},"to":{"krate":0,"index":8353}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":620538,"byte_end":620542,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":8362},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":620636,"byte_end":620640,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":8362},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":620899,"byte_end":620906,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":15535},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":621129,"byte_end":621136,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":15535},"to":{"krate":0,"index":8345}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":621327,"byte_end":621334,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":15535},"to":{"krate":0,"index":8353}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":621639,"byte_end":621652,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":15556},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":622069,"byte_end":622078,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":15572},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":622362,"byte_end":622371,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":15572},"to":{"krate":0,"index":8345}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":622633,"byte_end":622642,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":15572},"to":{"krate":0,"index":8353}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":622964,"byte_end":622971,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":15587},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":623190,"byte_end":623197,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":15587},"to":{"krate":0,"index":8345}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":623375,"byte_end":623382,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":15587},"to":{"krate":0,"index":8353}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":623683,"byte_end":623691,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":15602},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":623914,"byte_end":623922,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":15602},"to":{"krate":0,"index":8345}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":624104,"byte_end":624112,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":15602},"to":{"krate":0,"index":8353}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":624422,"byte_end":624433,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":15617},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":624693,"byte_end":624704,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":15617},"to":{"krate":0,"index":8345}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":624941,"byte_end":624952,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":15617},"to":{"krate":0,"index":8353}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":625319,"byte_end":625331,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":15629},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":625592,"byte_end":625604,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":15629},"to":{"krate":0,"index":8345}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":625842,"byte_end":625854,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":15629},"to":{"krate":0,"index":8353}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":626473,"byte_end":626487,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":15641},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":626710,"byte_end":626724,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":15641},"to":{"krate":0,"index":8345}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":626925,"byte_end":626939,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":15641},"to":{"krate":0,"index":8353}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":627245,"byte_end":627251,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":8526},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/fns.rs","byte_start":627344,"byte_end":627350,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":8526},"to":{"krate":0,"index":8335}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.18/src/unfold_state.rs","byte_start":627955,"byte_end":627966,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":15678},"to":{"krate":4294967295,"index":4294967295}}]}