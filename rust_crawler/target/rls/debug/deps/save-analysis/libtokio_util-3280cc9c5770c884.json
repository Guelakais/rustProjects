{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9","program":"/home/stevenhgf/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=3280cc9c5770c884","-C","extra-filename=-3280cc9c5770c884","--out-dir","/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps","-L","dependency=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps","--extern","bytes=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libbytes-e4e0b36ef57b32f8.rmeta","--extern","futures_core=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libfutures_core-b173df42d37db44b.rmeta","--extern","futures_sink=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libfutures_sink-b7e282d6b0839f87.rmeta","--extern","log=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/liblog-0524069f13f0a6be.rmeta","--extern","pin_project_lite=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libpin_project_lite-bbcf54b6e6c34e32.rmeta","--extern","tokio=/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libtokio-c5e91275045ee331.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/stevenhgf/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/stevenhgf/rustProjects/rust_crawler/target/rls/debug/deps/libtokio_util-3280cc9c5770c884.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[18307114918740841422,0]},"crate_root":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src","external_crates":[{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":20,"id":{"name":"futures_core","disambiguator":[1440762160621440629,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[1764707849844810966,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[2867766710845485785,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":23,"id":{"name":"mio","disambiguator":[18225732165820515700,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","num":24,"id":{"name":"log","disambiguator":[5356710319542037041,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":25,"id":{"name":"cfg_if","disambiguator":[12658019734257768631,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":26,"id":{"name":"libc","disambiguator":[4488837743860974715,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[9610653905832003084,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":28,"id":{"name":"bytes","disambiguator":[10719620052733837254,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":29,"id":{"name":"memchr","disambiguator":[9335573667902768237,0]}},{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":30,"id":{"name":"num_cpus","disambiguator":[6772717972532261484,0]}}],"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1191},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247212,"byte_end":14247222,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247261,"byte_end":14247268,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247307,"byte_end":14247314,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247476,"byte_end":14247482,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247484,"byte_end":14247495,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1472},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247543,"byte_end":14247553,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1431},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247602,"byte_end":14247613,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1251},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247675,"byte_end":14247695,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1008},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247697,"byte_end":14247722,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1269},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247771,"byte_end":14247781,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247783,"byte_end":14247798,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1299},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247863,"byte_end":14247880,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247882,"byte_end":14247904,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6970,"byte_end":6979,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6981,"byte_end":6998,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7000,"byte_end":7025,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1406},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7088,"byte_end":7098,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7145,"byte_end":7158,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7201,"byte_end":7218,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":511},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1188}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14236940,"byte_end":14236993,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14236994,"byte_end":14236997,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14236998,"byte_end":14237073,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237074,"byte_end":14237139,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237140,"byte_end":14237143,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237144,"byte_end":14237224,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237225,"byte_end":14237300,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237301,"byte_end":14237349,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237350,"byte_end":14237353,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237354,"byte_end":14237377,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237378,"byte_end":14237381,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237382,"byte_end":14237461,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237462,"byte_end":14237541,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237542,"byte_end":14237613,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237614,"byte_end":14237684,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237685,"byte_end":14237763,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237764,"byte_end":14237840,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237841,"byte_end":14237874,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237875,"byte_end":14237878,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237879,"byte_end":14237959,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14237960,"byte_end":14238040,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238041,"byte_end":14238091,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238092,"byte_end":14238095,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238096,"byte_end":14238147,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238148,"byte_end":14238197,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238198,"byte_end":14238249,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238250,"byte_end":14238253,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238254,"byte_end":14238319,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238320,"byte_end":14238323,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238324,"byte_end":14238401,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238402,"byte_end":14238443,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238444,"byte_end":14238447,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238448,"byte_end":14238528,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238529,"byte_end":14238608,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238609,"byte_end":14238687,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238688,"byte_end":14238767,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238768,"byte_end":14238782,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238783,"byte_end":14238786,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238787,"byte_end":14238866,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238867,"byte_end":14238946,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238947,"byte_end":14238964,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238965,"byte_end":14238968,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14238969,"byte_end":14239046,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239047,"byte_end":14239126,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239127,"byte_end":14239204,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239205,"byte_end":14239275,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239276,"byte_end":14239325,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239326,"byte_end":14239329,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239330,"byte_end":14239343,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239344,"byte_end":14239376,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239377,"byte_end":14239444,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239445,"byte_end":14239559,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239560,"byte_end":14239597,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239598,"byte_end":14239659,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239660,"byte_end":14239709,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239710,"byte_end":14239713,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239714,"byte_end":14239755,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239756,"byte_end":14239766,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239767,"byte_end":14239851,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239852,"byte_end":14239908,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239909,"byte_end":14239912,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239913,"byte_end":14239934,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14239935,"byte_end":14240002,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240003,"byte_end":14240031,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240032,"byte_end":14240045,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240046,"byte_end":14240064,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240065,"byte_end":14240074,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240075,"byte_end":14240078,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240079,"byte_end":14240138,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240139,"byte_end":14240163,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240164,"byte_end":14240173,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240174,"byte_end":14240179,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240180,"byte_end":14240188,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240189,"byte_end":14240196,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240197,"byte_end":14240271,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240272,"byte_end":14240275,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240276,"byte_end":14240298,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240299,"byte_end":14240302,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240303,"byte_end":14240380,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240381,"byte_end":14240457,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240458,"byte_end":14240537,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240538,"byte_end":14240592,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240593,"byte_end":14240596,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240597,"byte_end":14240641,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240642,"byte_end":14240649,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240650,"byte_end":14240685,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240686,"byte_end":14240717,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240718,"byte_end":14240721,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240722,"byte_end":14240751,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240752,"byte_end":14240755,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240756,"byte_end":14240795,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240796,"byte_end":14240799,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240800,"byte_end":14240838,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240839,"byte_end":14240866,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240867,"byte_end":14240903,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240904,"byte_end":14240907,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240908,"byte_end":14240926,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240927,"byte_end":14240949,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240950,"byte_end":14240980,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14240981,"byte_end":14241035,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241036,"byte_end":14241066,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241067,"byte_end":14241124,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241125,"byte_end":14241157,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241158,"byte_end":14241171,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241172,"byte_end":14241175,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241176,"byte_end":14241210,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241211,"byte_end":14241255,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241256,"byte_end":14241308,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241309,"byte_end":14241376,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241377,"byte_end":14241380,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241381,"byte_end":14241455,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241456,"byte_end":14241522,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241523,"byte_end":14241552,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241553,"byte_end":14241600,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241601,"byte_end":14241653,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241654,"byte_end":14241725,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241726,"byte_end":14241745,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241746,"byte_end":14241759,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241760,"byte_end":14241763,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241764,"byte_end":14241803,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241804,"byte_end":14241859,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241860,"byte_end":14241878,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241879,"byte_end":14241955,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14241956,"byte_end":14242022,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242023,"byte_end":14242075,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242076,"byte_end":14242079,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242080,"byte_end":14242160,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242161,"byte_end":14242186,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242187,"byte_end":14242219,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242220,"byte_end":14242233,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242234,"byte_end":14242237,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242238,"byte_end":14242310,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242311,"byte_end":14242337,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242338,"byte_end":14242389,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242390,"byte_end":14242426,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242427,"byte_end":14242430,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242431,"byte_end":14242509,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242510,"byte_end":14242553,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242554,"byte_end":14242601,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242602,"byte_end":14242638,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242639,"byte_end":14242683,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242684,"byte_end":14242740,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242741,"byte_end":14242789,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242790,"byte_end":14242812,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242813,"byte_end":14242831,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242832,"byte_end":14242845,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242846,"byte_end":14242855,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242856,"byte_end":14242861,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242862,"byte_end":14242869,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242870,"byte_end":14242873,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242874,"byte_end":14242897,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242898,"byte_end":14242901,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242902,"byte_end":14242980,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14242981,"byte_end":14243054,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243055,"byte_end":14243131,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243132,"byte_end":14243212,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243213,"byte_end":14243229,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243230,"byte_end":14243233,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243234,"byte_end":14243314,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243315,"byte_end":14243394,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243395,"byte_end":14243475,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243476,"byte_end":14243548,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243549,"byte_end":14243552,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243553,"byte_end":14243630,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243631,"byte_end":14243709,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243710,"byte_end":14243783,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243784,"byte_end":14243850,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243851,"byte_end":14243854,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243855,"byte_end":14243868,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243869,"byte_end":14243902,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243903,"byte_end":14243937,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243938,"byte_end":14243975,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14243976,"byte_end":14244043,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244044,"byte_end":14244079,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244080,"byte_end":14244141,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244142,"byte_end":14244188,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244189,"byte_end":14244250,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244251,"byte_end":14244254,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244255,"byte_end":14244283,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244284,"byte_end":14244287,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244288,"byte_end":14244329,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244330,"byte_end":14244340,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244341,"byte_end":14244365,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244366,"byte_end":14244440,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244441,"byte_end":14244483,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244484,"byte_end":14244498,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244499,"byte_end":14244556,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244557,"byte_end":14244606,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244607,"byte_end":14244621,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244622,"byte_end":14244659,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244660,"byte_end":14244711,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244712,"byte_end":14244758,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244759,"byte_end":14244789,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244790,"byte_end":14244804,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244805,"byte_end":14244814,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244815,"byte_end":14244820,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244821,"byte_end":14244828,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244829,"byte_end":14244836,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244837,"byte_end":14244912,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244913,"byte_end":14244986,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14244987,"byte_end":14245029,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245030,"byte_end":14245033,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245034,"byte_end":14245056,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245057,"byte_end":14245060,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245061,"byte_end":14245138,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245139,"byte_end":14245215,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245216,"byte_end":14245292,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245293,"byte_end":14245316,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245317,"byte_end":14245320,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245321,"byte_end":14245366,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245367,"byte_end":14245374,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245375,"byte_end":14245410,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245411,"byte_end":14245435,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245436,"byte_end":14245439,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245440,"byte_end":14245469,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245470,"byte_end":14245473,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245474,"byte_end":14245513,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245514,"byte_end":14245517,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245518,"byte_end":14245564,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245565,"byte_end":14245601,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245602,"byte_end":14245605,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245606,"byte_end":14245697,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245698,"byte_end":14245772,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245773,"byte_end":14245795,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245796,"byte_end":14245829,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245830,"byte_end":14245877,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245878,"byte_end":14245930,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14245931,"byte_end":14246006,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246007,"byte_end":14246026,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246027,"byte_end":14246040,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246041,"byte_end":14246044,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246045,"byte_end":14246097,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246098,"byte_end":14246175,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246176,"byte_end":14246240,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246241,"byte_end":14246244,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246245,"byte_end":14246288,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246289,"byte_end":14246329,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246330,"byte_end":14246333,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246334,"byte_end":14246391,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246392,"byte_end":14246438,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246439,"byte_end":14246490,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246491,"byte_end":14246509,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246510,"byte_end":14246519,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246520,"byte_end":14246525,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246526,"byte_end":14246533,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246534,"byte_end":14246537,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246538,"byte_end":14246577,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246578,"byte_end":14246619,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246620,"byte_end":14246656,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246657,"byte_end":14246689,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246690,"byte_end":14246786,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246787,"byte_end":14246838,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246839,"byte_end":14246892,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246893,"byte_end":14246936,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246937,"byte_end":14246981,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14246982,"byte_end":14247030,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247031,"byte_end":14247079,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247080,"byte_end":14247126,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247127,"byte_end":14247166,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249190,"byte_end":14249200,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248033,"byte_end":14248118,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248119,"byte_end":14248122,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248123,"byte_end":14248161,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248162,"byte_end":14248200,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248201,"byte_end":14248204,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248205,"byte_end":14248218,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248219,"byte_end":14248222,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248223,"byte_end":14248304,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248305,"byte_end":14248308,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248309,"byte_end":14248348,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248349,"byte_end":14248382,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248383,"byte_end":14248412,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248413,"byte_end":14248416,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248417,"byte_end":14248424,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248425,"byte_end":14248443,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248444,"byte_end":14248474,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248475,"byte_end":14248499,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248500,"byte_end":14248507,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248508,"byte_end":14248537,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248538,"byte_end":14248590,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248591,"byte_end":14248594,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248595,"byte_end":14248613,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248614,"byte_end":14248631,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248632,"byte_end":14248712,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248713,"byte_end":14248747,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248748,"byte_end":14248801,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248802,"byte_end":14248813,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248814,"byte_end":14248821,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248822,"byte_end":14248827,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248828,"byte_end":14248875,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248876,"byte_end":14248929,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248930,"byte_end":14248988,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14248989,"byte_end":14249068,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249069,"byte_end":14249081,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249082,"byte_end":14249089,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249090,"byte_end":14249097,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249098,"byte_end":14249101,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249302,"byte_end":14249305,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249229,"byte_end":14249290,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251306,"byte_end":14251313,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250020,"byte_end":14250055,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250056,"byte_end":14250059,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250060,"byte_end":14250129,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250130,"byte_end":14250209,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250210,"byte_end":14250282,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250283,"byte_end":14250307,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250308,"byte_end":14250311,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250312,"byte_end":14250380,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250381,"byte_end":14250458,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250459,"byte_end":14250520,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250521,"byte_end":14250524,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250525,"byte_end":14250586,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250587,"byte_end":14250649,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250650,"byte_end":14250653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250654,"byte_end":14250717,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250718,"byte_end":14250781,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250782,"byte_end":14250861,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250862,"byte_end":14250936,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250937,"byte_end":14250956,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250957,"byte_end":14250960,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14250961,"byte_end":14251029,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251030,"byte_end":14251092,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251093,"byte_end":14251168,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251169,"byte_end":14251209,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251210,"byte_end":14251213,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251214,"byte_end":14251250,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251251,"byte_end":14251295,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251361,"byte_end":14251365,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251320,"byte_end":14251351,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252131,"byte_end":14252136,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251372,"byte_end":14251424,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251429,"byte_end":14251432,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251437,"byte_end":14251506,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251511,"byte_end":14251581,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251586,"byte_end":14251632,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251637,"byte_end":14251640,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251645,"byte_end":14251721,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251726,"byte_end":14251801,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251806,"byte_end":14251881,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251886,"byte_end":14251926,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251931,"byte_end":14251934,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14251939,"byte_end":14252013,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252018,"byte_end":14252064,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252069,"byte_end":14252072,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252077,"byte_end":14252121,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255072,"byte_end":14255078,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252160,"byte_end":14252225,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252230,"byte_end":14252233,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252238,"byte_end":14252312,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252317,"byte_end":14252389,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252394,"byte_end":14252467,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252472,"byte_end":14252515,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252520,"byte_end":14252523,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252528,"byte_end":14252601,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252606,"byte_end":14252669,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252674,"byte_end":14252749,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252754,"byte_end":14252829,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252834,"byte_end":14252857,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252862,"byte_end":14252865,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252870,"byte_end":14252942,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14252947,"byte_end":14253021,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253026,"byte_end":14253096,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253101,"byte_end":14253104,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253109,"byte_end":14253177,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253182,"byte_end":14253253,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253258,"byte_end":14253338,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253343,"byte_end":14253355,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253360,"byte_end":14253363,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253368,"byte_end":14253438,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253443,"byte_end":14253518,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253523,"byte_end":14253560,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253565,"byte_end":14253568,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253573,"byte_end":14253609,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253614,"byte_end":14253658,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253663,"byte_end":14253666,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253671,"byte_end":14253694,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253699,"byte_end":14253702,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253707,"byte_end":14253781,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253786,"byte_end":14253860,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253865,"byte_end":14253918,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253923,"byte_end":14253926,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14253931,"byte_end":14254002,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254007,"byte_end":14254077,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254082,"byte_end":14254098,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254103,"byte_end":14254106,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254111,"byte_end":14254124,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254129,"byte_end":14254147,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254152,"byte_end":14254157,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254162,"byte_end":14254188,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254193,"byte_end":14254230,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254235,"byte_end":14254240,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254245,"byte_end":14254266,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254271,"byte_end":14254276,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254281,"byte_end":14254311,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254316,"byte_end":14254330,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254335,"byte_end":14254366,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254371,"byte_end":14254404,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254409,"byte_end":14254412,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254417,"byte_end":14254510,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254515,"byte_end":14254533,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254538,"byte_end":14254541,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254546,"byte_end":14254618,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254623,"byte_end":14254683,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254688,"byte_end":14254740,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254745,"byte_end":14254807,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254812,"byte_end":14254879,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254884,"byte_end":14254887,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254892,"byte_end":14254920,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254925,"byte_end":14254934,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254939,"byte_end":14254944,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254949,"byte_end":14254956,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254961,"byte_end":14254964,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14254969,"byte_end":14255038,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255043,"byte_end":14255064,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14256244,"byte_end":14256254,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255159,"byte_end":14255231,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255236,"byte_end":14255285,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255290,"byte_end":14255293,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255298,"byte_end":14255366,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255371,"byte_end":14255438,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255443,"byte_end":14255511,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255516,"byte_end":14255592,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255597,"byte_end":14255663,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255668,"byte_end":14255671,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255676,"byte_end":14255744,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255749,"byte_end":14255824,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255829,"byte_end":14255904,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255909,"byte_end":14255981,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14255986,"byte_end":14256028,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14256033,"byte_end":14256036,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14256041,"byte_end":14256116,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14256121,"byte_end":14256199,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14256204,"byte_end":14256236,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257862,"byte_end":14257868,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14256672,"byte_end":14256752,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14256757,"byte_end":14256833,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14256838,"byte_end":14256841,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14256846,"byte_end":14256921,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14256926,"byte_end":14256996,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257001,"byte_end":14257072,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257077,"byte_end":14257149,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257154,"byte_end":14257212,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257217,"byte_end":14257220,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257225,"byte_end":14257294,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257299,"byte_end":14257374,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257379,"byte_end":14257455,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257460,"byte_end":14257482,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257487,"byte_end":14257490,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257495,"byte_end":14257568,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257573,"byte_end":14257646,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257651,"byte_end":14257727,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257732,"byte_end":14257735,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257740,"byte_end":14257776,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257781,"byte_end":14257813,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14257818,"byte_end":14257854,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258202,"byte_end":14258209,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258047,"byte_end":14258119,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258120,"byte_end":14258140,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258141,"byte_end":14258144,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258145,"byte_end":14258191,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258474,"byte_end":14258479,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258222,"byte_end":14258254,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258259,"byte_end":14258262,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258267,"byte_end":14258344,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258349,"byte_end":14258405,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258410,"byte_end":14258413,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258418,"byte_end":14258464,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258830,"byte_end":14258836,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258503,"byte_end":14258548,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258553,"byte_end":14258556,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258561,"byte_end":14258635,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258640,"byte_end":14258720,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258725,"byte_end":14258763,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258768,"byte_end":14258771,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14258776,"byte_end":14258822,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14272473,"byte_end":14272479,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1516}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274252,"byte_end":14274255,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14272621,"byte_end":14272701,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14272706,"byte_end":14272787,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14272792,"byte_end":14272795,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14272800,"byte_end":14272875,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14272880,"byte_end":14272950,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14272955,"byte_end":14273024,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273029,"byte_end":14273101,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273106,"byte_end":14273164,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273169,"byte_end":14273172,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273177,"byte_end":14273248,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273253,"byte_end":14273330,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273335,"byte_end":14273411,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273416,"byte_end":14273438,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273443,"byte_end":14273446,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273451,"byte_end":14273524,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273529,"byte_end":14273602,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273607,"byte_end":14273683,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273688,"byte_end":14273691,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273696,"byte_end":14273772,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273777,"byte_end":14273853,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273858,"byte_end":14273933,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273938,"byte_end":14273973,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273978,"byte_end":14273981,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14273986,"byte_end":14274022,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274027,"byte_end":14274059,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274064,"byte_end":14274101,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274106,"byte_end":14274144,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274149,"byte_end":14274240,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275863,"byte_end":14275876,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274468,"byte_end":14274548,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274553,"byte_end":14274634,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274639,"byte_end":14274688,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274693,"byte_end":14274696,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274701,"byte_end":14274776,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274781,"byte_end":14274851,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274856,"byte_end":14274925,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14274930,"byte_end":14275002,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275007,"byte_end":14275065,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275070,"byte_end":14275073,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275078,"byte_end":14275149,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275154,"byte_end":14275231,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275236,"byte_end":14275312,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275317,"byte_end":14275339,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275344,"byte_end":14275347,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275352,"byte_end":14275425,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275430,"byte_end":14275503,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275508,"byte_end":14275584,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275589,"byte_end":14275592,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275597,"byte_end":14275633,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275638,"byte_end":14275670,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275675,"byte_end":14275712,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275717,"byte_end":14275755,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14275760,"byte_end":14275851,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278023,"byte_end":14278033,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276446,"byte_end":14276526,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276531,"byte_end":14276612,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276617,"byte_end":14276620,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276625,"byte_end":14276700,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276705,"byte_end":14276775,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276780,"byte_end":14276851,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276856,"byte_end":14276928,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276933,"byte_end":14276991,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276996,"byte_end":14276999,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277004,"byte_end":14277075,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277080,"byte_end":14277157,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277162,"byte_end":14277238,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277243,"byte_end":14277265,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277270,"byte_end":14277273,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277278,"byte_end":14277357,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277362,"byte_end":14277439,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277444,"byte_end":14277447,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277452,"byte_end":14277525,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277530,"byte_end":14277603,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277608,"byte_end":14277684,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277689,"byte_end":14277692,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277697,"byte_end":14277733,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277738,"byte_end":14277770,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277775,"byte_end":14277813,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277818,"byte_end":14277856,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277861,"byte_end":14277915,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14277920,"byte_end":14278011,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278668,"byte_end":14278675,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278385,"byte_end":14278448,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278453,"byte_end":14278466,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278471,"byte_end":14278474,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278479,"byte_end":14278554,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278559,"byte_end":14278629,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278634,"byte_end":14278656,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279019,"byte_end":14279026,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278728,"byte_end":14278799,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278804,"byte_end":14278817,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278822,"byte_end":14278825,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278830,"byte_end":14278905,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278910,"byte_end":14278980,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14278985,"byte_end":14279007,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279389,"byte_end":14279400,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279091,"byte_end":14279169,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279174,"byte_end":14279187,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279192,"byte_end":14279195,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279200,"byte_end":14279275,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279280,"byte_end":14279350,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279355,"byte_end":14279377,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279747,"byte_end":14279752,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279496,"byte_end":14279554,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279559,"byte_end":14279572,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279577,"byte_end":14279580,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279585,"byte_end":14279659,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279664,"byte_end":14279735,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280064,"byte_end":14280073,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279805,"byte_end":14279871,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279876,"byte_end":14279889,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279894,"byte_end":14279897,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279902,"byte_end":14279976,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14279981,"byte_end":14280052,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280193,"byte_end":14280204,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280138,"byte_end":14280181,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280339,"byte_end":14280354,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280276,"byte_end":14280327,"line_start":212,"line_end":212,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280494,"byte_end":14280506,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280438,"byte_end":14280482,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280643,"byte_end":14280659,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280579,"byte_end":14280631,"line_start":222,"line_end":222,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14281009,"byte_end":14281019,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280744,"byte_end":14280807,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280812,"byte_end":14280815,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280820,"byte_end":14280895,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280900,"byte_end":14280970,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14280975,"byte_end":14280997,"line_start":231,"line_end":231,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14281391,"byte_end":14281401,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14281069,"byte_end":14281143,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14281148,"byte_end":14281189,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14281194,"byte_end":14281197,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14281202,"byte_end":14281277,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14281282,"byte_end":14281352,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14281357,"byte_end":14281379,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283375,"byte_end":14283386,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283060,"byte_end":14283131,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283132,"byte_end":14283204,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283205,"byte_end":14283265,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283266,"byte_end":14283269,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283270,"byte_end":14283306,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283324,"byte_end":14283363,"line_start":311,"line_end":311,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1230},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283472,"byte_end":14283474,"line_start":314,"line_end":314,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283399,"byte_end":14283463,"line_start":313,"line_end":313,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283506,"byte_end":14283511,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283484,"byte_end":14283497,"line_start":316,"line_end":316,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283576,"byte_end":14283584,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283521,"byte_end":14283567,"line_start":319,"line_end":319,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1233},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283671,"byte_end":14283680,"line_start":323,"line_end":323,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283601,"byte_end":14283662,"line_start":322,"line_end":322,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283913,"byte_end":14283916,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283861,"byte_end":14283901,"line_start":331,"line_end":331,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1472},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14284645,"byte_end":14284655,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1475}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14284906,"byte_end":14284909,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14284838,"byte_end":14284894,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285257,"byte_end":14285270,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285141,"byte_end":14285223,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285228,"byte_end":14285245,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286024,"byte_end":14286031,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285737,"byte_end":14285800,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285805,"byte_end":14285822,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285827,"byte_end":14285830,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285835,"byte_end":14285910,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285915,"byte_end":14285985,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285990,"byte_end":14286012,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286379,"byte_end":14286386,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286084,"byte_end":14286155,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286160,"byte_end":14286177,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286182,"byte_end":14286185,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286190,"byte_end":14286265,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286270,"byte_end":14286340,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286345,"byte_end":14286367,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286753,"byte_end":14286764,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286451,"byte_end":14286529,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286534,"byte_end":14286551,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286556,"byte_end":14286559,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286564,"byte_end":14286639,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286644,"byte_end":14286714,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286719,"byte_end":14286741,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287129,"byte_end":14287139,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286860,"byte_end":14286927,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286932,"byte_end":14286935,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14286940,"byte_end":14287015,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287020,"byte_end":14287090,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287095,"byte_end":14287117,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287251,"byte_end":14287258,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287189,"byte_end":14287239,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287381,"byte_end":14287392,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287311,"byte_end":14287369,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287512,"byte_end":14287523,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287457,"byte_end":14287500,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287653,"byte_end":14287668,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287590,"byte_end":14287641,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1431},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14289769,"byte_end":14289780,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1434}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14289987,"byte_end":14289990,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14289918,"byte_end":14289975,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290548,"byte_end":14290555,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290260,"byte_end":14290323,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290328,"byte_end":14290346,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290351,"byte_end":14290354,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290359,"byte_end":14290434,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290439,"byte_end":14290509,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290514,"byte_end":14290536,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290904,"byte_end":14290911,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290608,"byte_end":14290679,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290684,"byte_end":14290702,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290707,"byte_end":14290710,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290715,"byte_end":14290790,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290795,"byte_end":14290865,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290870,"byte_end":14290892,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291279,"byte_end":14291290,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290976,"byte_end":14291054,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291059,"byte_end":14291077,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291082,"byte_end":14291085,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291090,"byte_end":14291165,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291170,"byte_end":14291240,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291245,"byte_end":14291267,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291656,"byte_end":14291666,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291386,"byte_end":14291454,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291459,"byte_end":14291462,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291467,"byte_end":14291542,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291547,"byte_end":14291617,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291622,"byte_end":14291644,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291778,"byte_end":14291785,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291716,"byte_end":14291766,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291908,"byte_end":14291919,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291838,"byte_end":14291896,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14292040,"byte_end":14292052,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14291984,"byte_end":14292028,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14292183,"byte_end":14292199,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14292119,"byte_end":14292171,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":954},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1239},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1008},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1010},{"krate":0,"index":1017},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14293726,"byte_end":14293778,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14293779,"byte_end":14293782,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14293783,"byte_end":14293853,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14293854,"byte_end":14293912,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14293913,"byte_end":14293985,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14293986,"byte_end":14294056,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294057,"byte_end":14294124,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294125,"byte_end":14294128,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294129,"byte_end":14294150,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294151,"byte_end":14294154,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294155,"byte_end":14294230,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294231,"byte_end":14294302,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294303,"byte_end":14294374,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294375,"byte_end":14294445,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294446,"byte_end":14294486,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294487,"byte_end":14294490,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294491,"byte_end":14294498,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294499,"byte_end":14294542,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294543,"byte_end":14294601,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294602,"byte_end":14294605,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294606,"byte_end":14294661,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294662,"byte_end":14294704,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294705,"byte_end":14294710,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294711,"byte_end":14294763,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294764,"byte_end":14294769,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294770,"byte_end":14294792,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294793,"byte_end":14294800,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294801,"byte_end":14294804,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294805,"byte_end":14294877,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294878,"byte_end":14294949,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294950,"byte_end":14294969,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294970,"byte_end":14294973,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294974,"byte_end":14294985,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14294986,"byte_end":14295035,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295036,"byte_end":14295085,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295086,"byte_end":14295135,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295136,"byte_end":14295143,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295144,"byte_end":14295147,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295148,"byte_end":14295186,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295187,"byte_end":14295190,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295191,"byte_end":14295198,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295199,"byte_end":14295242,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295243,"byte_end":14295301,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295302,"byte_end":14295305,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295306,"byte_end":14295331,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295332,"byte_end":14295353,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295354,"byte_end":14295357,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295358,"byte_end":14295434,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295435,"byte_end":14295444,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295445,"byte_end":14295487,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295488,"byte_end":14295493,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295494,"byte_end":14295567,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295568,"byte_end":14295615,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295616,"byte_end":14295619,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295620,"byte_end":14295657,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295658,"byte_end":14295672,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295673,"byte_end":14295678,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295679,"byte_end":14295686,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295687,"byte_end":14295690,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295691,"byte_end":14295733,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295734,"byte_end":14295737,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295738,"byte_end":14295749,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295750,"byte_end":14295789,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295790,"byte_end":14295829,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295830,"byte_end":14295869,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295870,"byte_end":14295877,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295878,"byte_end":14295881,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295882,"byte_end":14295896,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295897,"byte_end":14295900,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295901,"byte_end":14295976,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14295977,"byte_end":14296050,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296051,"byte_end":14296117,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296118,"byte_end":14296187,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296188,"byte_end":14296253,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296254,"byte_end":14296257,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296258,"byte_end":14296274,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296275,"byte_end":14296278,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296279,"byte_end":14296355,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296356,"byte_end":14296397,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296398,"byte_end":14296401,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296402,"byte_end":14296409,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296410,"byte_end":14296441,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296442,"byte_end":14296492,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296493,"byte_end":14296534,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296535,"byte_end":14296570,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296571,"byte_end":14296619,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296620,"byte_end":14296651,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296652,"byte_end":14296700,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296701,"byte_end":14296750,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296751,"byte_end":14296773,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296774,"byte_end":14296781,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296782,"byte_end":14296804,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296805,"byte_end":14296812,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296813,"byte_end":14296816,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296817,"byte_end":14296865,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296866,"byte_end":14296869,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296870,"byte_end":14296881,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296882,"byte_end":14296934,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14296935,"byte_end":14297000,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297001,"byte_end":14297066,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297067,"byte_end":14297132,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297133,"byte_end":14297140,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297141,"byte_end":14297144,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297145,"byte_end":14297221,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297222,"byte_end":14297296,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297297,"byte_end":14297369,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297370,"byte_end":14297446,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297447,"byte_end":14297489,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297490,"byte_end":14297493,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297494,"byte_end":14297510,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297511,"byte_end":14297514,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297515,"byte_end":14297590,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297591,"byte_end":14297632,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297633,"byte_end":14297636,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297637,"byte_end":14297644,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297645,"byte_end":14297676,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297677,"byte_end":14297727,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297728,"byte_end":14297769,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297770,"byte_end":14297805,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297806,"byte_end":14297854,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297855,"byte_end":14297886,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297887,"byte_end":14297935,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297936,"byte_end":14297995,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14297996,"byte_end":14298018,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298019,"byte_end":14298026,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298027,"byte_end":14298049,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298050,"byte_end":14298057,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298058,"byte_end":14298061,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298062,"byte_end":14298110,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298111,"byte_end":14298114,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298115,"byte_end":14298126,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298127,"byte_end":14298176,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298177,"byte_end":14298231,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298232,"byte_end":14298286,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298287,"byte_end":14298341,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298342,"byte_end":14298349,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298350,"byte_end":14298353,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298354,"byte_end":14298427,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298428,"byte_end":14298495,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298496,"byte_end":14298499,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298500,"byte_end":14298516,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298517,"byte_end":14298520,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298521,"byte_end":14298597,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298598,"byte_end":14298670,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298671,"byte_end":14298710,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298711,"byte_end":14298714,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298715,"byte_end":14298722,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298723,"byte_end":14298754,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298755,"byte_end":14298805,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298806,"byte_end":14298847,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298848,"byte_end":14298883,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298884,"byte_end":14298932,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298933,"byte_end":14298964,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14298965,"byte_end":14299012,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299013,"byte_end":14299033,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299034,"byte_end":14299056,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299057,"byte_end":14299064,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299065,"byte_end":14299087,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299088,"byte_end":14299095,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299096,"byte_end":14299099,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299100,"byte_end":14299148,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299149,"byte_end":14299152,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299153,"byte_end":14299164,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299165,"byte_end":14299217,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299218,"byte_end":14299283,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299284,"byte_end":14299349,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299350,"byte_end":14299415,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299416,"byte_end":14299423,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299424,"byte_end":14299427,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299428,"byte_end":14299500,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299501,"byte_end":14299576,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299577,"byte_end":14299649,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299650,"byte_end":14299726,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299727,"byte_end":14299800,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299801,"byte_end":14299804,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299805,"byte_end":14299821,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299822,"byte_end":14299825,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299826,"byte_end":14299900,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299901,"byte_end":14299968,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299969,"byte_end":14299972,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299973,"byte_end":14299980,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14299981,"byte_end":14300012,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300013,"byte_end":14300063,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300064,"byte_end":14300105,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300106,"byte_end":14300141,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300142,"byte_end":14300190,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300191,"byte_end":14300222,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300223,"byte_end":14300271,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300272,"byte_end":14300292,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300293,"byte_end":14300315,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300316,"byte_end":14300323,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300324,"byte_end":14300346,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300347,"byte_end":14300354,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300355,"byte_end":14300358,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300359,"byte_end":14300407,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300408,"byte_end":14300411,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300412,"byte_end":14300423,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300424,"byte_end":14300450,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300451,"byte_end":14300496,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300497,"byte_end":14300542,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300543,"byte_end":14300588,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300589,"byte_end":14300592,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300593,"byte_end":14300621,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300622,"byte_end":14300667,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300668,"byte_end":14300713,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300714,"byte_end":14300759,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300760,"byte_end":14300767,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300768,"byte_end":14300771,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300772,"byte_end":14300844,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300845,"byte_end":14300921,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300922,"byte_end":14300992,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14300993,"byte_end":14301062,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301063,"byte_end":14301100,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301101,"byte_end":14301104,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301105,"byte_end":14301179,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301180,"byte_end":14301234,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301235,"byte_end":14301238,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301239,"byte_end":14301255,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301256,"byte_end":14301259,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301260,"byte_end":14301333,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301334,"byte_end":14301410,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301411,"byte_end":14301485,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301486,"byte_end":14301499,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301500,"byte_end":14301503,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301504,"byte_end":14301511,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301512,"byte_end":14301543,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301544,"byte_end":14301594,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301595,"byte_end":14301636,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301637,"byte_end":14301672,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301673,"byte_end":14301722,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301723,"byte_end":14301754,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301755,"byte_end":14301803,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301804,"byte_end":14301848,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301849,"byte_end":14301871,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301872,"byte_end":14301879,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301880,"byte_end":14301902,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301903,"byte_end":14301910,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301911,"byte_end":14301914,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301915,"byte_end":14301963,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301964,"byte_end":14301967,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301968,"byte_end":14301979,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14301980,"byte_end":14302006,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302007,"byte_end":14302057,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302058,"byte_end":14302108,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302109,"byte_end":14302159,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302160,"byte_end":14302163,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302164,"byte_end":14302184,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302185,"byte_end":14302215,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302216,"byte_end":14302246,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302247,"byte_end":14302277,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302278,"byte_end":14302285,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302286,"byte_end":14302289,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302290,"byte_end":14302363,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302364,"byte_end":14302439,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302440,"byte_end":14302512,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302513,"byte_end":14302551,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302552,"byte_end":14302555,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302556,"byte_end":14302630,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302631,"byte_end":14302707,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302708,"byte_end":14302781,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302782,"byte_end":14302810,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302811,"byte_end":14302814,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302815,"byte_end":14302831,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302832,"byte_end":14302835,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302836,"byte_end":14302909,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302910,"byte_end":14302986,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14302987,"byte_end":14303061,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303062,"byte_end":14303134,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303135,"byte_end":14303146,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303147,"byte_end":14303150,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303151,"byte_end":14303158,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303159,"byte_end":14303190,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303191,"byte_end":14303241,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303242,"byte_end":14303283,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303284,"byte_end":14303319,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303320,"byte_end":14303369,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303370,"byte_end":14303401,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303402,"byte_end":14303467,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303468,"byte_end":14303488,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303489,"byte_end":14303511,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303512,"byte_end":14303519,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303520,"byte_end":14303527,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303528,"byte_end":14303531,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303532,"byte_end":14303580,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303581,"byte_end":14303584,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303585,"byte_end":14303596,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303597,"byte_end":14303623,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303624,"byte_end":14303674,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303675,"byte_end":14303725,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303726,"byte_end":14303776,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303777,"byte_end":14303780,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303781,"byte_end":14303801,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303802,"byte_end":14303832,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303833,"byte_end":14303863,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303864,"byte_end":14303894,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303895,"byte_end":14303902,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303903,"byte_end":14303906,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303907,"byte_end":14303980,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14303981,"byte_end":14304055,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304056,"byte_end":14304130,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304131,"byte_end":14304204,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304205,"byte_end":14304281,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304282,"byte_end":14304315,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304316,"byte_end":14304319,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304320,"byte_end":14304336,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304337,"byte_end":14304340,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304341,"byte_end":14304415,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304416,"byte_end":14304483,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304484,"byte_end":14304487,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304488,"byte_end":14304495,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304496,"byte_end":14304527,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304528,"byte_end":14304578,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304579,"byte_end":14304620,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304621,"byte_end":14304656,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304657,"byte_end":14304705,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304706,"byte_end":14304737,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304738,"byte_end":14304785,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304786,"byte_end":14304832,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304833,"byte_end":14304855,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304856,"byte_end":14304863,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304864,"byte_end":14304886,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304887,"byte_end":14304894,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304895,"byte_end":14304898,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304899,"byte_end":14304947,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304948,"byte_end":14304951,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304952,"byte_end":14304963,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14304964,"byte_end":14305020,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305021,"byte_end":14305082,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305083,"byte_end":14305144,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305145,"byte_end":14305206,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305207,"byte_end":14305214,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305215,"byte_end":14305218,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305219,"byte_end":14305293,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305294,"byte_end":14305314,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305315,"byte_end":14305318,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305319,"byte_end":14305333,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305334,"byte_end":14305337,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305338,"byte_end":14305413,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305414,"byte_end":14305486,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305487,"byte_end":14305555,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305556,"byte_end":14305632,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305633,"byte_end":14305674,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305675,"byte_end":14305678,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305679,"byte_end":14305749,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305750,"byte_end":14305768,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305769,"byte_end":14305772,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305773,"byte_end":14305780,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305781,"byte_end":14305813,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305814,"byte_end":14305864,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305865,"byte_end":14305909,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305910,"byte_end":14305923,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305924,"byte_end":14305959,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305960,"byte_end":14305991,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14305992,"byte_end":14306015,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306016,"byte_end":14306023,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306024,"byte_end":14306046,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306047,"byte_end":14306054,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306055,"byte_end":14306058,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306059,"byte_end":14306109,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306110,"byte_end":14306113,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306114,"byte_end":14306125,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306126,"byte_end":14306159,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306160,"byte_end":14306193,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306194,"byte_end":14306227,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306228,"byte_end":14306235,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306236,"byte_end":14306239,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306240,"byte_end":14306309,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306310,"byte_end":14306347,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306348,"byte_end":14306387,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306388,"byte_end":14306433,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306434,"byte_end":14306481,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306482,"byte_end":14306512,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306513,"byte_end":14306546,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1239},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14307108,"byte_end":14307115,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306790,"byte_end":14306845,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306846,"byte_end":14306849,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306850,"byte_end":14306925,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14306926,"byte_end":14307006,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14307007,"byte_end":14307066,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1008},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14307786,"byte_end":14307811,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1009}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14307701,"byte_end":14307774,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1251},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308163,"byte_end":14308183,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14307832,"byte_end":14307906,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14307907,"byte_end":14307910,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14307911,"byte_end":14307990,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14307991,"byte_end":14308034,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308035,"byte_end":14308038,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308039,"byte_end":14308092,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308093,"byte_end":14308096,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308097,"byte_end":14308127,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308527,"byte_end":14308530,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308436,"byte_end":14308515,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308757,"byte_end":14308764,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308654,"byte_end":14308729,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308734,"byte_end":14308745,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308986,"byte_end":14309002,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308814,"byte_end":14308855,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308860,"byte_end":14308863,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308868,"byte_end":14308941,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308946,"byte_end":14308974,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14309423,"byte_end":14309443,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14309067,"byte_end":14309101,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14309106,"byte_end":14309109,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14309114,"byte_end":14309184,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14309189,"byte_end":14309264,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14309269,"byte_end":14309341,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14309346,"byte_end":14309411,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314699,"byte_end":14314702,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314157,"byte_end":14314232,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314237,"byte_end":14314248,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314253,"byte_end":14314256,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314261,"byte_end":14314275,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314280,"byte_end":14314283,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314288,"byte_end":14314295,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314300,"byte_end":14314331,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314336,"byte_end":14314384,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314389,"byte_end":14314392,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314397,"byte_end":14314438,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314443,"byte_end":14314478,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314483,"byte_end":14314514,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314519,"byte_end":14314550,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314555,"byte_end":14314584,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314589,"byte_end":14314609,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314614,"byte_end":14314636,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314641,"byte_end":14314648,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314653,"byte_end":14314675,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314680,"byte_end":14314687,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315887,"byte_end":14315897,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315366,"byte_end":14315415,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315420,"byte_end":14315423,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315428,"byte_end":14315460,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315465,"byte_end":14315468,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315473,"byte_end":14315541,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315546,"byte_end":14315549,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315554,"byte_end":14315568,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315573,"byte_end":14315576,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315581,"byte_end":14315588,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315593,"byte_end":14315624,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315629,"byte_end":14315677,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315682,"byte_end":14315685,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315690,"byte_end":14315731,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315736,"byte_end":14315771,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315776,"byte_end":14315797,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315802,"byte_end":14315824,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315829,"byte_end":14315836,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315841,"byte_end":14315863,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315868,"byte_end":14315875,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316529,"byte_end":14316542,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14315996,"byte_end":14316048,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316053,"byte_end":14316056,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316061,"byte_end":14316099,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316104,"byte_end":14316107,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316112,"byte_end":14316180,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316185,"byte_end":14316188,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316193,"byte_end":14316207,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316212,"byte_end":14316215,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316220,"byte_end":14316227,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316232,"byte_end":14316263,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316268,"byte_end":14316316,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316321,"byte_end":14316324,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316329,"byte_end":14316370,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316375,"byte_end":14316410,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316415,"byte_end":14316439,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316444,"byte_end":14316466,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316471,"byte_end":14316478,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316483,"byte_end":14316505,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316510,"byte_end":14316517,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317175,"byte_end":14317188,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316642,"byte_end":14316694,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316699,"byte_end":14316702,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316707,"byte_end":14316745,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316750,"byte_end":14316753,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316758,"byte_end":14316826,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316831,"byte_end":14316834,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316839,"byte_end":14316853,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316858,"byte_end":14316861,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316866,"byte_end":14316873,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316878,"byte_end":14316909,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316914,"byte_end":14316962,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316967,"byte_end":14316970,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14316975,"byte_end":14317016,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317021,"byte_end":14317056,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317061,"byte_end":14317085,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317090,"byte_end":14317112,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317117,"byte_end":14317124,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317129,"byte_end":14317151,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317156,"byte_end":14317163,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318269,"byte_end":14318285,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317357,"byte_end":14317386,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317391,"byte_end":14317394,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317399,"byte_end":14317471,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317476,"byte_end":14317501,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317506,"byte_end":14317509,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317514,"byte_end":14317586,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317591,"byte_end":14317660,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317665,"byte_end":14317738,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317743,"byte_end":14317755,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317760,"byte_end":14317763,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317768,"byte_end":14317843,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317848,"byte_end":14317909,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317914,"byte_end":14317917,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317922,"byte_end":14317936,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317941,"byte_end":14317944,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317949,"byte_end":14317956,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317961,"byte_end":14317992,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14317997,"byte_end":14318045,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318050,"byte_end":14318053,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318058,"byte_end":14318099,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318104,"byte_end":14318139,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318144,"byte_end":14318179,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318184,"byte_end":14318206,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318211,"byte_end":14318218,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318223,"byte_end":14318245,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318250,"byte_end":14318257,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318946,"byte_end":14318965,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318382,"byte_end":14318445,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318450,"byte_end":14318453,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318458,"byte_end":14318509,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318514,"byte_end":14318517,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318522,"byte_end":14318590,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318595,"byte_end":14318598,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318603,"byte_end":14318617,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318622,"byte_end":14318625,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318630,"byte_end":14318637,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318642,"byte_end":14318673,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318678,"byte_end":14318726,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318731,"byte_end":14318734,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318739,"byte_end":14318780,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318785,"byte_end":14318820,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318825,"byte_end":14318856,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318861,"byte_end":14318883,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318888,"byte_end":14318895,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318900,"byte_end":14318922,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14318927,"byte_end":14318934,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319624,"byte_end":14319643,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319134,"byte_end":14319200,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319205,"byte_end":14319208,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319213,"byte_end":14319268,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319273,"byte_end":14319276,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319281,"byte_end":14319295,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319300,"byte_end":14319303,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319308,"byte_end":14319315,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319320,"byte_end":14319351,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319356,"byte_end":14319404,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319409,"byte_end":14319412,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319417,"byte_end":14319458,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319463,"byte_end":14319498,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319503,"byte_end":14319534,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319539,"byte_end":14319561,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319566,"byte_end":14319573,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319578,"byte_end":14319600,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319605,"byte_end":14319612,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320197,"byte_end":14320214,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319746,"byte_end":14319819,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319824,"byte_end":14319842,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319847,"byte_end":14319850,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319855,"byte_end":14319869,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319874,"byte_end":14319877,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319882,"byte_end":14319889,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319894,"byte_end":14319925,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319930,"byte_end":14319978,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319983,"byte_end":14319986,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14319991,"byte_end":14320032,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320037,"byte_end":14320072,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320077,"byte_end":14320107,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320112,"byte_end":14320134,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320139,"byte_end":14320146,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320151,"byte_end":14320173,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320178,"byte_end":14320185,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320864,"byte_end":14320872,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320315,"byte_end":14320378,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320383,"byte_end":14320386,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320391,"byte_end":14320452,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320457,"byte_end":14320460,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320465,"byte_end":14320519,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320524,"byte_end":14320527,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320532,"byte_end":14320546,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320551,"byte_end":14320554,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320559,"byte_end":14320566,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320571,"byte_end":14320602,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320607,"byte_end":14320655,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320660,"byte_end":14320663,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320668,"byte_end":14320709,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320714,"byte_end":14320749,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320754,"byte_end":14320774,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320779,"byte_end":14320801,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320806,"byte_end":14320813,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320818,"byte_end":14320840,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320845,"byte_end":14320852,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321392,"byte_end":14321401,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14320970,"byte_end":14321033,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321038,"byte_end":14321041,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321046,"byte_end":14321060,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321065,"byte_end":14321068,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321073,"byte_end":14321080,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321085,"byte_end":14321133,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321138,"byte_end":14321159,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321164,"byte_end":14321199,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321204,"byte_end":14321235,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321240,"byte_end":14321271,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321276,"byte_end":14321305,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321310,"byte_end":14321330,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321335,"byte_end":14321356,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321361,"byte_end":14321368,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321373,"byte_end":14321380,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322057,"byte_end":14322065,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321553,"byte_end":14321606,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321611,"byte_end":14321614,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321619,"byte_end":14321633,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321638,"byte_end":14321641,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321646,"byte_end":14321653,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321658,"byte_end":14321689,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321694,"byte_end":14321742,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321747,"byte_end":14321750,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321755,"byte_end":14321796,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321801,"byte_end":14321836,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321841,"byte_end":14321872,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321877,"byte_end":14321908,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321913,"byte_end":14321942,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321947,"byte_end":14321967,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321972,"byte_end":14321994,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14321999,"byte_end":14322006,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322011,"byte_end":14322033,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322038,"byte_end":14322045,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322638,"byte_end":14322647,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322229,"byte_end":14322283,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322288,"byte_end":14322291,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322296,"byte_end":14322310,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322315,"byte_end":14322318,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322323,"byte_end":14322330,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322335,"byte_end":14322367,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322372,"byte_end":14322422,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322427,"byte_end":14322471,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322476,"byte_end":14322511,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322516,"byte_end":14322547,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322552,"byte_end":14322575,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322580,"byte_end":14322587,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322592,"byte_end":14322614,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322619,"byte_end":14322626,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323256,"byte_end":14323266,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322808,"byte_end":14322857,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322862,"byte_end":14322865,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322870,"byte_end":14322884,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322889,"byte_end":14322892,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322897,"byte_end":14322904,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322909,"byte_end":14322954,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14322959,"byte_end":14323009,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323014,"byte_end":14323070,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323075,"byte_end":14323088,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323093,"byte_end":14323128,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323133,"byte_end":14323164,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323169,"byte_end":14323193,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323198,"byte_end":14323205,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323210,"byte_end":14323232,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323237,"byte_end":14323244,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14324645,"byte_end":14324655,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14324402,"byte_end":14324489,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14324490,"byte_end":14324493,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14324494,"byte_end":14324532,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14324533,"byte_end":14324571,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325755,"byte_end":14325758,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325336,"byte_end":14325396,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325401,"byte_end":14325404,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325409,"byte_end":14325419,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325424,"byte_end":14325427,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325432,"byte_end":14325504,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325509,"byte_end":14325582,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325587,"byte_end":14325654,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325659,"byte_end":14325662,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325667,"byte_end":14325743,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326889,"byte_end":14326908,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325916,"byte_end":14325976,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325981,"byte_end":14325984,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325989,"byte_end":14326052,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326057,"byte_end":14326135,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326140,"byte_end":14326207,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326212,"byte_end":14326284,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326289,"byte_end":14326359,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326364,"byte_end":14326387,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326392,"byte_end":14326395,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326400,"byte_end":14326410,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326415,"byte_end":14326418,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326423,"byte_end":14326498,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326503,"byte_end":14326576,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326581,"byte_end":14326657,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326662,"byte_end":14326735,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326740,"byte_end":14326810,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326815,"byte_end":14326818,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14326823,"byte_end":14326877,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327474,"byte_end":14327484,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327036,"byte_end":14327086,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327091,"byte_end":14327094,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327099,"byte_end":14327106,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327111,"byte_end":14327130,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327135,"byte_end":14327173,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327178,"byte_end":14327181,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327186,"byte_end":14327220,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327225,"byte_end":14327272,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327277,"byte_end":14327284,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327289,"byte_end":14327296,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327301,"byte_end":14327339,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327344,"byte_end":14327347,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327352,"byte_end":14327405,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327410,"byte_end":14327450,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327455,"byte_end":14327462,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1292},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331810,"byte_end":14331831,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331764,"byte_end":14331805,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331867,"byte_end":14331869,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331837,"byte_end":14331862,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1291},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331742,"byte_end":14331757,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1294}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331659,"byte_end":14331715,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1299},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333791,"byte_end":14333808,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332605,"byte_end":14332746,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332747,"byte_end":14332750,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332751,"byte_end":14332789,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332790,"byte_end":14332828,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332829,"byte_end":14332832,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332833,"byte_end":14332846,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332847,"byte_end":14332914,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332915,"byte_end":14332918,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332919,"byte_end":14332952,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332953,"byte_end":14332982,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332983,"byte_end":14332986,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332987,"byte_end":14332994,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14332995,"byte_end":14333051,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333052,"byte_end":14333086,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333087,"byte_end":14333090,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333091,"byte_end":14333096,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333097,"byte_end":14333144,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333145,"byte_end":14333198,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333199,"byte_end":14333276,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333277,"byte_end":14333312,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333313,"byte_end":14333334,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333335,"byte_end":14333385,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333386,"byte_end":14333449,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333450,"byte_end":14333513,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333514,"byte_end":14333577,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333578,"byte_end":14333634,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333635,"byte_end":14333684,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333685,"byte_end":14333697,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333698,"byte_end":14333705,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333706,"byte_end":14333713,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14333714,"byte_end":14333717,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335143,"byte_end":14335146,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14334701,"byte_end":14334769,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14334774,"byte_end":14334777,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14334782,"byte_end":14334792,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14334797,"byte_end":14334800,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14334805,"byte_end":14334884,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14334889,"byte_end":14334963,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14334968,"byte_end":14335035,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335040,"byte_end":14335043,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335048,"byte_end":14335131,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336457,"byte_end":14336476,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335426,"byte_end":14335494,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335499,"byte_end":14335502,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335507,"byte_end":14335577,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335582,"byte_end":14335668,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335673,"byte_end":14335743,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335748,"byte_end":14335825,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335830,"byte_end":14335900,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335905,"byte_end":14335928,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335933,"byte_end":14335936,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335941,"byte_end":14335951,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335956,"byte_end":14335959,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14335964,"byte_end":14336046,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336051,"byte_end":14336124,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336129,"byte_end":14336206,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336211,"byte_end":14336284,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336289,"byte_end":14336364,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336369,"byte_end":14336372,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336377,"byte_end":14336445,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14337264,"byte_end":14337274,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336733,"byte_end":14336784,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336789,"byte_end":14336792,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336797,"byte_end":14336804,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336809,"byte_end":14336828,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336833,"byte_end":14336878,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336883,"byte_end":14336886,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336891,"byte_end":14336963,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14336968,"byte_end":14337015,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14337020,"byte_end":14337027,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14337032,"byte_end":14337039,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14337044,"byte_end":14337089,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14337094,"byte_end":14337097,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14337102,"byte_end":14337195,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14337200,"byte_end":14337240,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14337245,"byte_end":14337252,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341370,"byte_end":14341392,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341323,"byte_end":14341365,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1326},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341428,"byte_end":14341430,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341398,"byte_end":14341423,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1323},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341294,"byte_end":14341316,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1326}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341210,"byte_end":14341267,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6878,"byte_end":6908,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40807,"byte_end":40816,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1332}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40630,"byte_end":40694,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40695,"byte_end":40778,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41079,"byte_end":41085,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40892,"byte_end":40966,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40971,"byte_end":41041,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41046,"byte_end":41067,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8905,"byte_end":8922,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7687,"byte_end":7764,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7765,"byte_end":7775,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7776,"byte_end":7779,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7780,"byte_end":7845,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7846,"byte_end":7920,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7921,"byte_end":7924,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7925,"byte_end":8008,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8009,"byte_end":8012,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8013,"byte_end":8027,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8028,"byte_end":8031,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8032,"byte_end":8045,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8068,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8069,"byte_end":8109,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8113,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8114,"byte_end":8132,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8133,"byte_end":8154,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8155,"byte_end":8200,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8201,"byte_end":8242,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8243,"byte_end":8246,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8247,"byte_end":8298,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8299,"byte_end":8362,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8363,"byte_end":8384,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8385,"byte_end":8434,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8435,"byte_end":8481,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8482,"byte_end":8503,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8521,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8522,"byte_end":8603,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8604,"byte_end":8626,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8644,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8645,"byte_end":8658,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8659,"byte_end":8670,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8671,"byte_end":8674,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8675,"byte_end":8708,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8709,"byte_end":8784,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8785,"byte_end":8812,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8813,"byte_end":8824,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8825,"byte_end":8828,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8829,"byte_end":8879,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8880,"byte_end":8885,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8886,"byte_end":8893,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9342,"byte_end":9367,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9189,"byte_end":9263,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9264,"byte_end":9281,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9282,"byte_end":9330,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11875,"byte_end":11878,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11800,"byte_end":11863,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13931,"byte_end":13942,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12668,"byte_end":12739,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12744,"byte_end":12777,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12782,"byte_end":12785,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12790,"byte_end":12861,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12866,"byte_end":12898,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12903,"byte_end":12906,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12911,"byte_end":12925,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12930,"byte_end":12933,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12938,"byte_end":12951,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12956,"byte_end":12978,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12983,"byte_end":13023,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13028,"byte_end":13031,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13036,"byte_end":13054,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13059,"byte_end":13080,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13085,"byte_end":13130,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13135,"byte_end":13181,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13186,"byte_end":13189,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13194,"byte_end":13245,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13250,"byte_end":13313,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13318,"byte_end":13339,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13344,"byte_end":13392,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13397,"byte_end":13443,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13448,"byte_end":13469,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13474,"byte_end":13491,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13496,"byte_end":13577,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13582,"byte_end":13604,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13609,"byte_end":13626,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13631,"byte_end":13644,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13660,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13665,"byte_end":13668,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13673,"byte_end":13706,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13711,"byte_end":13786,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13791,"byte_end":13818,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13823,"byte_end":13834,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13839,"byte_end":13842,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13847,"byte_end":13897,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13902,"byte_end":13907,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13912,"byte_end":13919,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16517,"byte_end":16523,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16328,"byte_end":16400,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16405,"byte_end":16425,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16430,"byte_end":16433,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16438,"byte_end":16505,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16651,"byte_end":16663,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16575,"byte_end":16639,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16814,"byte_end":16823,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16728,"byte_end":16802,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17225,"byte_end":17235,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17062,"byte_end":17103,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17108,"byte_end":17111,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17116,"byte_end":17188,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17193,"byte_end":17213,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1406},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71395,"byte_end":71405,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71257,"byte_end":71314,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71315,"byte_end":71318,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71319,"byte_end":71366,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72128,"byte_end":72131,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72086,"byte_end":72116,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72846,"byte_end":72856,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72334,"byte_end":72363,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72368,"byte_end":72371,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72376,"byte_end":72452,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72457,"byte_end":72526,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72531,"byte_end":72549,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72554,"byte_end":72557,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72562,"byte_end":72633,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72638,"byte_end":72711,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72716,"byte_end":72790,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72795,"byte_end":72834,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74377,"byte_end":74391,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73280,"byte_end":73361,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73366,"byte_end":73412,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73417,"byte_end":73420,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73425,"byte_end":73473,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73478,"byte_end":73481,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73486,"byte_end":73570,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73575,"byte_end":73634,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73639,"byte_end":73724,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73729,"byte_end":73748,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73753,"byte_end":73832,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73837,"byte_end":73840,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73845,"byte_end":73920,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73925,"byte_end":74001,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74006,"byte_end":74061,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74066,"byte_end":74140,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74145,"byte_end":74218,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74223,"byte_end":74257,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74262,"byte_end":74265,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74270,"byte_end":74346,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74351,"byte_end":74365,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75025,"byte_end":75033,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74777,"byte_end":74842,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74847,"byte_end":74850,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74855,"byte_end":74928,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74933,"byte_end":74943,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74948,"byte_end":74951,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74956,"byte_end":75013,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75145,"byte_end":75154,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75087,"byte_end":75133,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75495,"byte_end":75506,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75296,"byte_end":75330,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75335,"byte_end":75338,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75343,"byte_end":75416,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75421,"byte_end":75483,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75811,"byte_end":75820,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75611,"byte_end":75646,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75651,"byte_end":75654,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75659,"byte_end":75732,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75737,"byte_end":75799,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76520,"byte_end":76537,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75971,"byte_end":76040,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76045,"byte_end":76048,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76053,"byte_end":76123,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76128,"byte_end":76201,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76206,"byte_end":76252,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76257,"byte_end":76260,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76265,"byte_end":76340,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76345,"byte_end":76419,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76424,"byte_end":76450,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76455,"byte_end":76458,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76463,"byte_end":76508,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76703,"byte_end":76713,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76590,"byte_end":76637,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76642,"byte_end":76645,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76650,"byte_end":76691,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79225,"byte_end":79238,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79094,"byte_end":79167,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79168,"byte_end":79171,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79172,"byte_end":79213,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79432,"byte_end":79435,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79387,"byte_end":79420,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79599,"byte_end":79604,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79562,"byte_end":79587,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79710,"byte_end":79721,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79656,"byte_end":79698,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79836,"byte_end":79846,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79791,"byte_end":79824,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80580,"byte_end":80592,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79907,"byte_end":79955,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79960,"byte_end":79963,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79968,"byte_end":80009,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80014,"byte_end":80017,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80022,"byte_end":80084,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80089,"byte_end":80149,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80154,"byte_end":80214,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80219,"byte_end":80222,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80227,"byte_end":80302,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80307,"byte_end":80375,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80380,"byte_end":80456,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80461,"byte_end":80529,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80534,"byte_end":80568,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82020,"byte_end":82037,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81736,"byte_end":81788,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81793,"byte_end":81796,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81801,"byte_end":81877,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81882,"byte_end":81916,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81921,"byte_end":81924,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81929,"byte_end":82008,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82497,"byte_end":82508,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82110,"byte_end":82152,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82165,"byte_end":82238,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82243,"byte_end":82283,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82288,"byte_end":82291,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82296,"byte_end":82366,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82371,"byte_end":82405,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82410,"byte_end":82413,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82418,"byte_end":82485,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83651,"byte_end":83668,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83451,"byte_end":83508,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83509,"byte_end":83512,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83513,"byte_end":83580,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83581,"byte_end":83639,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83846,"byte_end":83849,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83763,"byte_end":83834,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84430,"byte_end":84433,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84215,"byte_end":84267,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84272,"byte_end":84275,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84280,"byte_end":84352,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84357,"byte_end":84418,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84876,"byte_end":84883,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84635,"byte_end":84687,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84692,"byte_end":84695,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84700,"byte_end":84773,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84778,"byte_end":84848,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84853,"byte_end":84864,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86723,"byte_end":86730,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86659,"byte_end":86711,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87016,"byte_end":87020,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86961,"byte_end":87004,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1414},{"krate":0,"index":1423},{"krate":0,"index":1427},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88133,"byte_end":88168,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90115,"byte_end":90119,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1420},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90128,"byte_end":90133,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1414},"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90096,"byte_end":90102,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1420}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88345,"byte_end":88451,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88452,"byte_end":88455,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88456,"byte_end":88546,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88547,"byte_end":88550,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88551,"byte_end":88586,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88587,"byte_end":88590,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88591,"byte_end":88604,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88605,"byte_end":88608,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88609,"byte_end":88646,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88647,"byte_end":88650,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88651,"byte_end":88670,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88671,"byte_end":88713,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88714,"byte_end":88764,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88765,"byte_end":88816,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88817,"byte_end":88835,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88836,"byte_end":88857,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88858,"byte_end":88900,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88901,"byte_end":88934,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88935,"byte_end":88951,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88952,"byte_end":89046,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89047,"byte_end":89057,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89058,"byte_end":89061,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89062,"byte_end":89109,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89110,"byte_end":89115,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89116,"byte_end":89123,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89124,"byte_end":89127,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89328,"byte_end":89331,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89332,"byte_end":89418,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89419,"byte_end":89429,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89430,"byte_end":89433,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89434,"byte_end":89441,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89442,"byte_end":89477,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89478,"byte_end":89520,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89521,"byte_end":89571,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89572,"byte_end":89623,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89624,"byte_end":89627,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89628,"byte_end":89646,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89647,"byte_end":89668,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89669,"byte_end":89711,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89712,"byte_end":89759,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89760,"byte_end":89776,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89777,"byte_end":89826,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89827,"byte_end":89837,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89838,"byte_end":89841,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89842,"byte_end":89875,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89876,"byte_end":89916,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89917,"byte_end":89949,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89950,"byte_end":89955,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89956,"byte_end":89963,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89964,"byte_end":89986,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249212,"byte_end":14249222,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249373,"byte_end":14249383,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249710,"byte_end":14249720,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14259950,"byte_end":14259959,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14260191,"byte_end":14260201,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14260352,"byte_end":14260361,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14260716,"byte_end":14260726,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14260972,"byte_end":14260980,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14261077,"byte_end":14261085,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14261196,"byte_end":14261204,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14261304,"byte_end":14261312,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14261422,"byte_end":14261432,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14269719,"byte_end":14269729,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14272565,"byte_end":14272571,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276427,"byte_end":14276433,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14281748,"byte_end":14281754,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14282070,"byte_end":14282076,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14282791,"byte_end":14282797,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283837,"byte_end":14283848,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14284775,"byte_end":14284785,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285714,"byte_end":14285724,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287821,"byte_end":14287831,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14288144,"byte_end":14288154,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14288880,"byte_end":14288890,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14289869,"byte_end":14289880,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290236,"byte_end":14290247,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14292356,"byte_end":14292367,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14293131,"byte_end":14293142,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14293383,"byte_end":14293394,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308409,"byte_end":14308429,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14311763,"byte_end":14311783,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14312669,"byte_end":14312689,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314030,"byte_end":14314050,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314143,"byte_end":14314150,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323749,"byte_end":14323756,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323882,"byte_end":14323907,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14324065,"byte_end":14324090,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14324225,"byte_end":14324250,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325319,"byte_end":14325329,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327871,"byte_end":14327881,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331257,"byte_end":14331267,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331590,"byte_end":14331600,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331907,"byte_end":14331922,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14332204,"byte_end":14332219,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14332336,"byte_end":14332351,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14334677,"byte_end":14334694,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14337343,"byte_end":14337360,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14340652,"byte_end":14340669,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341033,"byte_end":14341050,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341468,"byte_end":14341490,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341819,"byte_end":14341841,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341972,"byte_end":14341994,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":511}},{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14247624,"byte_end":14247640,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":954}},{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249212,"byte_end":14249222,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249373,"byte_end":14249383,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14249710,"byte_end":14249720,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14259950,"byte_end":14259959,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14260191,"byte_end":14260201,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14260352,"byte_end":14260361,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14260716,"byte_end":14260726,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14260972,"byte_end":14260980,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2588}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14261077,"byte_end":14261085,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2591}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14261196,"byte_end":14261204,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2588}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14261304,"byte_end":14261312,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2591}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14261422,"byte_end":14261432,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1563},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14269719,"byte_end":14269729,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1563},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14272565,"byte_end":14272571,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14276427,"byte_end":14276433,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14281748,"byte_end":14281754,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1513},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14282070,"byte_end":14282076,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1513},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14282791,"byte_end":14282797,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1513},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14283837,"byte_end":14283848,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14284775,"byte_end":14284785,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14285714,"byte_end":14285724,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14287821,"byte_end":14287831,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1472},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14288144,"byte_end":14288154,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1472},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":14288880,"byte_end":14288890,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14289869,"byte_end":14289880,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14290236,"byte_end":14290247,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14292356,"byte_end":14292367,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1431},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14293131,"byte_end":14293142,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1431},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":14293383,"byte_end":14293394,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1431},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14308409,"byte_end":14308429,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14311763,"byte_end":14311783,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14312669,"byte_end":14312689,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314030,"byte_end":14314050,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14314143,"byte_end":14314150,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323749,"byte_end":14323756,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1239},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14323882,"byte_end":14323907,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1008},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14324065,"byte_end":14324090,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1008},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":14324225,"byte_end":14324250,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1008},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14325319,"byte_end":14325329,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14327871,"byte_end":14327881,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331257,"byte_end":14331267,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331590,"byte_end":14331600,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14331907,"byte_end":14331922,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14332204,"byte_end":14332219,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":14332336,"byte_end":14332351,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1291},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14334677,"byte_end":14334694,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14337343,"byte_end":14337360,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1299},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14340652,"byte_end":14340669,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1299},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341033,"byte_end":14341050,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1299},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341468,"byte_end":14341490,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341819,"byte_end":14341841,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":14341972,"byte_end":14341994,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1323},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1390},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1390},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1406},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1406},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":301},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1414},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1414},"to":{"krate":22,"index":198}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1414},"to":{"krate":22,"index":156}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1414},"to":{"krate":22,"index":237}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1414},"to":{"krate":22,"index":277}},{"span":{"file_name":"/home/stevenhgf/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1414},"to":{"krate":20,"index":96}}]}